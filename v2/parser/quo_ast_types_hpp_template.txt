/*
 * Quo AST types for usage in C++.
 *
 * Generated from quo_ast_types_hpp_template.txt.
 */

#ifndef QUO_AST_TYPES_HPP
#define QUO_AST_TYPES_HPP

#include "runtime/values.hpp"
#include "runtime/core_types.hpp"

// ============================================================================
//   Forward declarations
// ============================================================================
## for t in ast_types
struct {{ t.name }};
## endfor

## for t in ast_types

// ============================================================================
//   {{ t.name }}
// ============================================================================

extern QTypeInfo {{ t.name }}TypeInfo;

struct {{ t.name }} : QValue {
## for f in t.fields
## if existsIn(f, "type_arg")
  /** {{ f.type }}<{{ f.type_arg }}> */
## endif
  {{ f.type }}* {{ f.name }};
## endfor
};

extern {{ t.name }}* __{{ t.name }}_Create(
## for f in t.fields
    {{ f.type }}* {{ f.name }}{% if not loop.is_last %},{% endif %}
## endfor
);

## endfor

#endif

