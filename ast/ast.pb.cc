// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ast.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ast.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ConstantExpr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConstantExpr_reflection_ = NULL;
struct ConstantExprOneofInstance {
  ::google::protobuf::internal::ArenaStringPtr stringvalue_;
  ::google::protobuf::int64 intvalue_;
  bool boolvalue_;
}* ConstantExpr_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* VarExpr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VarExpr_reflection_ = NULL;
const ::google::protobuf::Descriptor* MemberExpr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MemberExpr_reflection_ = NULL;
const ::google::protobuf::Descriptor* IndexExpr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IndexExpr_reflection_ = NULL;
const ::google::protobuf::Descriptor* CallExpr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CallExpr_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnaryOpExpr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnaryOpExpr_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* UnaryOpExpr_Op_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BinaryOpExpr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BinaryOpExpr_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BinaryOpExpr_Op_descriptor_ = NULL;
const ::google::protobuf::Descriptor* AssignExpr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AssignExpr_reflection_ = NULL;
const ::google::protobuf::Descriptor* Expr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Expr_reflection_ = NULL;
struct ExprOneofInstance {
  const ::ConstantExpr* constant_;
  const ::VarExpr* var_;
  const ::MemberExpr* member_;
  const ::IndexExpr* index_;
  const ::CallExpr* call_;
  const ::UnaryOpExpr* unary_op_;
  const ::BinaryOpExpr* binary_op_;
  const ::AssignExpr* assign_;
}* Expr_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* ExprStmt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExprStmt_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetStmt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetStmt_reflection_ = NULL;
const ::google::protobuf::Descriptor* BrkStmt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BrkStmt_reflection_ = NULL;
const ::google::protobuf::Descriptor* ContStmt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContStmt_reflection_ = NULL;
const ::google::protobuf::Descriptor* CondStmt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CondStmt_reflection_ = NULL;
const ::google::protobuf::Descriptor* CondLoopStmt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CondLoopStmt_reflection_ = NULL;
const ::google::protobuf::Descriptor* VarDeclStmt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VarDeclStmt_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* VarDeclStmt_Mode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Stmt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Stmt_reflection_ = NULL;
struct StmtOneofInstance {
  const ::ExprStmt* expr_;
  const ::RetStmt* ret_;
  const ::BrkStmt* brk_;
  const ::ContStmt* cont_;
  const ::CondStmt* cond_;
  const ::CondLoopStmt* cond_loop_;
  const ::VarDeclStmt* var_decl_;
}* Stmt_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* Block_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Block_reflection_ = NULL;
const ::google::protobuf::Descriptor* FuncParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FuncParam_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* FuncParam_Mode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Func_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Func_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Func_ReturnMode_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Func_CC_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ExternFunc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExternFunc_reflection_ = NULL;
const ::google::protobuf::Descriptor* Class_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Class_reflection_ = NULL;
const ::google::protobuf::Descriptor* Class_Member_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Class_Member_reflection_ = NULL;
struct Class_MemberOneofInstance {
  const ::Class* cls_;
  const ::Func* func_;
  const ::VarDeclStmt* var_decl_;
}* Class_Member_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* Module_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Module_reflection_ = NULL;
const ::google::protobuf::Descriptor* Module_Member_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Module_Member_reflection_ = NULL;
struct Module_MemberOneofInstance {
  const ::Class* cls_;
  const ::Func* func_;
  const ::VarDeclStmt* var_decl_;
  const ::ExternFunc* extern_func_;
}* Module_Member_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TypeSpec_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TypeSpec_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ast_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ast_2eproto() {
  protobuf_AddDesc_ast_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ast.proto");
  GOOGLE_CHECK(file != NULL);
  ConstantExpr_descriptor_ = file->message_type(0);
  static const int ConstantExpr_offsets_[4] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ConstantExpr_default_oneof_instance_, stringvalue_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ConstantExpr_default_oneof_instance_, intvalue_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ConstantExpr_default_oneof_instance_, boolvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstantExpr, value_),
  };
  ConstantExpr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConstantExpr_descriptor_,
      ConstantExpr::internal_default_instance(),
      ConstantExpr_offsets_,
      -1,
      -1,
      -1,
      ConstantExpr_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstantExpr, _oneof_case_[0]),
      sizeof(ConstantExpr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstantExpr, _internal_metadata_));
  VarExpr_descriptor_ = file->message_type(1);
  static const int VarExpr_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarExpr, var_),
  };
  VarExpr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VarExpr_descriptor_,
      VarExpr::internal_default_instance(),
      VarExpr_offsets_,
      -1,
      -1,
      -1,
      sizeof(VarExpr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarExpr, _internal_metadata_));
  MemberExpr_descriptor_ = file->message_type(2);
  static const int MemberExpr_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberExpr, expr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberExpr, member_),
  };
  MemberExpr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MemberExpr_descriptor_,
      MemberExpr::internal_default_instance(),
      MemberExpr_offsets_,
      -1,
      -1,
      -1,
      sizeof(MemberExpr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberExpr, _internal_metadata_));
  IndexExpr_descriptor_ = file->message_type(3);
  static const int IndexExpr_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexExpr, expr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexExpr, index_expr_),
  };
  IndexExpr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IndexExpr_descriptor_,
      IndexExpr::internal_default_instance(),
      IndexExpr_offsets_,
      -1,
      -1,
      -1,
      sizeof(IndexExpr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexExpr, _internal_metadata_));
  CallExpr_descriptor_ = file->message_type(4);
  static const int CallExpr_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallExpr, expr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallExpr, arg_exprs_),
  };
  CallExpr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CallExpr_descriptor_,
      CallExpr::internal_default_instance(),
      CallExpr_offsets_,
      -1,
      -1,
      -1,
      sizeof(CallExpr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallExpr, _internal_metadata_));
  UnaryOpExpr_descriptor_ = file->message_type(5);
  static const int UnaryOpExpr_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnaryOpExpr, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnaryOpExpr, expr_),
  };
  UnaryOpExpr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnaryOpExpr_descriptor_,
      UnaryOpExpr::internal_default_instance(),
      UnaryOpExpr_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnaryOpExpr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnaryOpExpr, _internal_metadata_));
  UnaryOpExpr_Op_descriptor_ = UnaryOpExpr_descriptor_->enum_type(0);
  BinaryOpExpr_descriptor_ = file->message_type(6);
  static const int BinaryOpExpr_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BinaryOpExpr, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BinaryOpExpr, left_expr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BinaryOpExpr, right_expr_),
  };
  BinaryOpExpr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BinaryOpExpr_descriptor_,
      BinaryOpExpr::internal_default_instance(),
      BinaryOpExpr_offsets_,
      -1,
      -1,
      -1,
      sizeof(BinaryOpExpr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BinaryOpExpr, _internal_metadata_));
  BinaryOpExpr_Op_descriptor_ = BinaryOpExpr_descriptor_->enum_type(0);
  AssignExpr_descriptor_ = file->message_type(7);
  static const int AssignExpr_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssignExpr, dest_expr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssignExpr, value_expr_),
  };
  AssignExpr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AssignExpr_descriptor_,
      AssignExpr::internal_default_instance(),
      AssignExpr_offsets_,
      -1,
      -1,
      -1,
      sizeof(AssignExpr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssignExpr, _internal_metadata_));
  Expr_descriptor_ = file->message_type(8);
  static const int Expr_offsets_[9] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Expr_default_oneof_instance_, constant_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Expr_default_oneof_instance_, var_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Expr_default_oneof_instance_, member_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Expr_default_oneof_instance_, index_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Expr_default_oneof_instance_, call_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Expr_default_oneof_instance_, unary_op_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Expr_default_oneof_instance_, binary_op_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Expr_default_oneof_instance_, assign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Expr, type_),
  };
  Expr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Expr_descriptor_,
      Expr::internal_default_instance(),
      Expr_offsets_,
      -1,
      -1,
      -1,
      Expr_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Expr, _oneof_case_[0]),
      sizeof(Expr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Expr, _internal_metadata_));
  ExprStmt_descriptor_ = file->message_type(9);
  static const int ExprStmt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExprStmt, expr_),
  };
  ExprStmt_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExprStmt_descriptor_,
      ExprStmt::internal_default_instance(),
      ExprStmt_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExprStmt),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExprStmt, _internal_metadata_));
  RetStmt_descriptor_ = file->message_type(10);
  static const int RetStmt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetStmt, expr_),
  };
  RetStmt_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RetStmt_descriptor_,
      RetStmt::internal_default_instance(),
      RetStmt_offsets_,
      -1,
      -1,
      -1,
      sizeof(RetStmt),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetStmt, _internal_metadata_));
  BrkStmt_descriptor_ = file->message_type(11);
  static const int BrkStmt_offsets_[1] = {
  };
  BrkStmt_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BrkStmt_descriptor_,
      BrkStmt::internal_default_instance(),
      BrkStmt_offsets_,
      -1,
      -1,
      -1,
      sizeof(BrkStmt),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BrkStmt, _internal_metadata_));
  ContStmt_descriptor_ = file->message_type(12);
  static const int ContStmt_offsets_[1] = {
  };
  ContStmt_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ContStmt_descriptor_,
      ContStmt::internal_default_instance(),
      ContStmt_offsets_,
      -1,
      -1,
      -1,
      sizeof(ContStmt),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContStmt, _internal_metadata_));
  CondStmt_descriptor_ = file->message_type(13);
  static const int CondStmt_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondStmt, cond_expr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondStmt, true_block_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondStmt, false_block_),
  };
  CondStmt_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CondStmt_descriptor_,
      CondStmt::internal_default_instance(),
      CondStmt_offsets_,
      -1,
      -1,
      -1,
      sizeof(CondStmt),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondStmt, _internal_metadata_));
  CondLoopStmt_descriptor_ = file->message_type(14);
  static const int CondLoopStmt_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondLoopStmt, cond_expr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondLoopStmt, block_),
  };
  CondLoopStmt_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CondLoopStmt_descriptor_,
      CondLoopStmt::internal_default_instance(),
      CondLoopStmt_offsets_,
      -1,
      -1,
      -1,
      sizeof(CondLoopStmt),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondLoopStmt, _internal_metadata_));
  VarDeclStmt_descriptor_ = file->message_type(15);
  static const int VarDeclStmt_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarDeclStmt, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarDeclStmt, type_spec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarDeclStmt, mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarDeclStmt, init_expr_),
  };
  VarDeclStmt_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VarDeclStmt_descriptor_,
      VarDeclStmt::internal_default_instance(),
      VarDeclStmt_offsets_,
      -1,
      -1,
      -1,
      sizeof(VarDeclStmt),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarDeclStmt, _internal_metadata_));
  VarDeclStmt_Mode_descriptor_ = VarDeclStmt_descriptor_->enum_type(0);
  Stmt_descriptor_ = file->message_type(16);
  static const int Stmt_offsets_[8] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Stmt_default_oneof_instance_, expr_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Stmt_default_oneof_instance_, ret_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Stmt_default_oneof_instance_, brk_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Stmt_default_oneof_instance_, cont_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Stmt_default_oneof_instance_, cond_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Stmt_default_oneof_instance_, cond_loop_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Stmt_default_oneof_instance_, var_decl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stmt, type_),
  };
  Stmt_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Stmt_descriptor_,
      Stmt::internal_default_instance(),
      Stmt_offsets_,
      -1,
      -1,
      -1,
      Stmt_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stmt, _oneof_case_[0]),
      sizeof(Stmt),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stmt, _internal_metadata_));
  Block_descriptor_ = file->message_type(17);
  static const int Block_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, stmts_),
  };
  Block_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Block_descriptor_,
      Block::internal_default_instance(),
      Block_offsets_,
      -1,
      -1,
      -1,
      sizeof(Block),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, _internal_metadata_));
  FuncParam_descriptor_ = file->message_type(18);
  static const int FuncParam_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuncParam, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuncParam, mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuncParam, type_spec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuncParam, init_expr_),
  };
  FuncParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FuncParam_descriptor_,
      FuncParam::internal_default_instance(),
      FuncParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(FuncParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FuncParam, _internal_metadata_));
  FuncParam_Mode_descriptor_ = FuncParam_descriptor_->enum_type(0);
  Func_descriptor_ = file->message_type(19);
  static const int Func_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Func, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Func, type_params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Func, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Func, return_type_spec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Func, return_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Func, cc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Func, block_),
  };
  Func_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Func_descriptor_,
      Func::internal_default_instance(),
      Func_offsets_,
      -1,
      -1,
      -1,
      sizeof(Func),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Func, _internal_metadata_));
  Func_ReturnMode_descriptor_ = Func_descriptor_->enum_type(0);
  Func_CC_descriptor_ = Func_descriptor_->enum_type(1);
  ExternFunc_descriptor_ = file->message_type(20);
  static const int ExternFunc_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternFunc, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternFunc, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternFunc, return_type_spec_),
  };
  ExternFunc_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExternFunc_descriptor_,
      ExternFunc::internal_default_instance(),
      ExternFunc_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExternFunc),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternFunc, _internal_metadata_));
  Class_descriptor_ = file->message_type(21);
  static const int Class_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class, type_params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class, super_classes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class, members_),
  };
  Class_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Class_descriptor_,
      Class::internal_default_instance(),
      Class_offsets_,
      -1,
      -1,
      -1,
      sizeof(Class),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class, _internal_metadata_));
  Class_Member_descriptor_ = Class_descriptor_->nested_type(0);
  static const int Class_Member_offsets_[4] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Class_Member_default_oneof_instance_, cls_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Class_Member_default_oneof_instance_, func_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Class_Member_default_oneof_instance_, var_decl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class_Member, type_),
  };
  Class_Member_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Class_Member_descriptor_,
      Class_Member::internal_default_instance(),
      Class_Member_offsets_,
      -1,
      -1,
      -1,
      Class_Member_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class_Member, _oneof_case_[0]),
      sizeof(Class_Member),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class_Member, _internal_metadata_));
  Module_descriptor_ = file->message_type(22);
  static const int Module_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, members_),
  };
  Module_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Module_descriptor_,
      Module::internal_default_instance(),
      Module_offsets_,
      -1,
      -1,
      -1,
      sizeof(Module),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, _internal_metadata_));
  Module_Member_descriptor_ = Module_descriptor_->nested_type(0);
  static const int Module_Member_offsets_[5] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Module_Member_default_oneof_instance_, cls_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Module_Member_default_oneof_instance_, func_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Module_Member_default_oneof_instance_, var_decl_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Module_Member_default_oneof_instance_, extern_func_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module_Member, type_),
  };
  Module_Member_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Module_Member_descriptor_,
      Module_Member::internal_default_instance(),
      Module_Member_offsets_,
      -1,
      -1,
      -1,
      Module_Member_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module_Member, _oneof_case_[0]),
      sizeof(Module_Member),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module_Member, _internal_metadata_));
  TypeSpec_descriptor_ = file->message_type(23);
  static const int TypeSpec_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeSpec, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeSpec, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeSpec, parent_),
  };
  TypeSpec_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TypeSpec_descriptor_,
      TypeSpec::internal_default_instance(),
      TypeSpec_offsets_,
      -1,
      -1,
      -1,
      sizeof(TypeSpec),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeSpec, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ast_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConstantExpr_descriptor_, ConstantExpr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VarExpr_descriptor_, VarExpr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MemberExpr_descriptor_, MemberExpr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IndexExpr_descriptor_, IndexExpr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CallExpr_descriptor_, CallExpr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnaryOpExpr_descriptor_, UnaryOpExpr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BinaryOpExpr_descriptor_, BinaryOpExpr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AssignExpr_descriptor_, AssignExpr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Expr_descriptor_, Expr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExprStmt_descriptor_, ExprStmt::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RetStmt_descriptor_, RetStmt::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BrkStmt_descriptor_, BrkStmt::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ContStmt_descriptor_, ContStmt::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CondStmt_descriptor_, CondStmt::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CondLoopStmt_descriptor_, CondLoopStmt::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VarDeclStmt_descriptor_, VarDeclStmt::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Stmt_descriptor_, Stmt::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Block_descriptor_, Block::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FuncParam_descriptor_, FuncParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Func_descriptor_, Func::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExternFunc_descriptor_, ExternFunc::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Class_descriptor_, Class::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Class_Member_descriptor_, Class_Member::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Module_descriptor_, Module::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Module_Member_descriptor_, Module_Member::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TypeSpec_descriptor_, TypeSpec::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ast_2eproto() {
  ConstantExpr_default_instance_.Shutdown();
  delete ConstantExpr_default_oneof_instance_;
  delete ConstantExpr_reflection_;
  VarExpr_default_instance_.Shutdown();
  delete VarExpr_reflection_;
  MemberExpr_default_instance_.Shutdown();
  delete MemberExpr_reflection_;
  IndexExpr_default_instance_.Shutdown();
  delete IndexExpr_reflection_;
  CallExpr_default_instance_.Shutdown();
  delete CallExpr_reflection_;
  UnaryOpExpr_default_instance_.Shutdown();
  delete UnaryOpExpr_reflection_;
  BinaryOpExpr_default_instance_.Shutdown();
  delete BinaryOpExpr_reflection_;
  AssignExpr_default_instance_.Shutdown();
  delete AssignExpr_reflection_;
  Expr_default_instance_.Shutdown();
  delete Expr_default_oneof_instance_;
  delete Expr_reflection_;
  ExprStmt_default_instance_.Shutdown();
  delete ExprStmt_reflection_;
  RetStmt_default_instance_.Shutdown();
  delete RetStmt_reflection_;
  BrkStmt_default_instance_.Shutdown();
  delete BrkStmt_reflection_;
  ContStmt_default_instance_.Shutdown();
  delete ContStmt_reflection_;
  CondStmt_default_instance_.Shutdown();
  delete CondStmt_reflection_;
  CondLoopStmt_default_instance_.Shutdown();
  delete CondLoopStmt_reflection_;
  VarDeclStmt_default_instance_.Shutdown();
  delete VarDeclStmt_reflection_;
  Stmt_default_instance_.Shutdown();
  delete Stmt_default_oneof_instance_;
  delete Stmt_reflection_;
  Block_default_instance_.Shutdown();
  delete Block_reflection_;
  FuncParam_default_instance_.Shutdown();
  delete FuncParam_reflection_;
  Func_default_instance_.Shutdown();
  delete Func_reflection_;
  ExternFunc_default_instance_.Shutdown();
  delete ExternFunc_reflection_;
  Class_default_instance_.Shutdown();
  delete Class_reflection_;
  Class_Member_default_instance_.Shutdown();
  delete Class_Member_default_oneof_instance_;
  delete Class_Member_reflection_;
  Module_default_instance_.Shutdown();
  delete Module_reflection_;
  Module_Member_default_instance_.Shutdown();
  delete Module_Member_default_oneof_instance_;
  delete Module_Member_reflection_;
  TypeSpec_default_instance_.Shutdown();
  delete TypeSpec_reflection_;
}

void protobuf_InitDefaults_ast_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  ConstantExpr_default_instance_.DefaultConstruct();
  ConstantExpr_default_oneof_instance_ = new ConstantExprOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  VarExpr_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MemberExpr_default_instance_.DefaultConstruct();
  IndexExpr_default_instance_.DefaultConstruct();
  CallExpr_default_instance_.DefaultConstruct();
  UnaryOpExpr_default_instance_.DefaultConstruct();
  BinaryOpExpr_default_instance_.DefaultConstruct();
  AssignExpr_default_instance_.DefaultConstruct();
  Expr_default_instance_.DefaultConstruct();
  Expr_default_oneof_instance_ = new ExprOneofInstance();
  ExprStmt_default_instance_.DefaultConstruct();
  RetStmt_default_instance_.DefaultConstruct();
  BrkStmt_default_instance_.DefaultConstruct();
  ContStmt_default_instance_.DefaultConstruct();
  CondStmt_default_instance_.DefaultConstruct();
  CondLoopStmt_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  VarDeclStmt_default_instance_.DefaultConstruct();
  Stmt_default_instance_.DefaultConstruct();
  Stmt_default_oneof_instance_ = new StmtOneofInstance();
  Block_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  FuncParam_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Func_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ExternFunc_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Class_default_instance_.DefaultConstruct();
  Class_Member_default_instance_.DefaultConstruct();
  Class_Member_default_oneof_instance_ = new Class_MemberOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  Module_default_instance_.DefaultConstruct();
  Module_Member_default_instance_.DefaultConstruct();
  Module_Member_default_oneof_instance_ = new Module_MemberOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  TypeSpec_default_instance_.DefaultConstruct();
  ConstantExpr_default_instance_.get_mutable()->InitAsDefaultInstance();
  VarExpr_default_instance_.get_mutable()->InitAsDefaultInstance();
  MemberExpr_default_instance_.get_mutable()->InitAsDefaultInstance();
  IndexExpr_default_instance_.get_mutable()->InitAsDefaultInstance();
  CallExpr_default_instance_.get_mutable()->InitAsDefaultInstance();
  UnaryOpExpr_default_instance_.get_mutable()->InitAsDefaultInstance();
  BinaryOpExpr_default_instance_.get_mutable()->InitAsDefaultInstance();
  AssignExpr_default_instance_.get_mutable()->InitAsDefaultInstance();
  Expr_default_instance_.get_mutable()->InitAsDefaultInstance();
  ExprStmt_default_instance_.get_mutable()->InitAsDefaultInstance();
  RetStmt_default_instance_.get_mutable()->InitAsDefaultInstance();
  BrkStmt_default_instance_.get_mutable()->InitAsDefaultInstance();
  ContStmt_default_instance_.get_mutable()->InitAsDefaultInstance();
  CondStmt_default_instance_.get_mutable()->InitAsDefaultInstance();
  CondLoopStmt_default_instance_.get_mutable()->InitAsDefaultInstance();
  VarDeclStmt_default_instance_.get_mutable()->InitAsDefaultInstance();
  Stmt_default_instance_.get_mutable()->InitAsDefaultInstance();
  Block_default_instance_.get_mutable()->InitAsDefaultInstance();
  FuncParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  Func_default_instance_.get_mutable()->InitAsDefaultInstance();
  ExternFunc_default_instance_.get_mutable()->InitAsDefaultInstance();
  Class_default_instance_.get_mutable()->InitAsDefaultInstance();
  Class_Member_default_instance_.get_mutable()->InitAsDefaultInstance();
  Module_default_instance_.get_mutable()->InitAsDefaultInstance();
  Module_Member_default_instance_.get_mutable()->InitAsDefaultInstance();
  TypeSpec_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_ast_2eproto_once_);
void protobuf_InitDefaults_ast_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_ast_2eproto_once_,
                 &protobuf_InitDefaults_ast_2eproto_impl);
}
void protobuf_AddDesc_ast_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_ast_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tast.proto\"W\n\014ConstantExpr\022\025\n\013stringVal"
    "ue\030\001 \001(\tH\000\022\022\n\010intValue\030\002 \001(\003H\000\022\023\n\tboolVa"
    "lue\030\003 \001(\010H\000B\007\n\005value\"\026\n\007VarExpr\022\013\n\003var\030\001"
    " \001(\t\"1\n\nMemberExpr\022\023\n\004expr\030\001 \001(\0132\005.Expr\022"
    "\016\n\006member\030\002 \001(\t\";\n\tIndexExpr\022\023\n\004expr\030\001 \001"
    "(\0132\005.Expr\022\031\n\nindex_expr\030\002 \001(\0132\005.Expr\"9\n\010"
    "CallExpr\022\023\n\004expr\030\001 \001(\0132\005.Expr\022\030\n\targ_exp"
    "rs\030\002 \003(\0132\005.Expr\"\203\001\n\013UnaryOpExpr\022\033\n\002op\030\001 "
    "\001(\0162\017.UnaryOpExpr.Op\022\023\n\004expr\030\002 \001(\0132\005.Exp"
    "r\"B\n\002Op\022\013\n\007UNKNOWN\020\000\022\007\n\003ADD\020\001\022\007\n\003SUB\020\002\022\n"
    "\n\006BORROW\020\003\022\010\n\004MOVE\020\004\022\007\n\003NOT\020\005\"\342\001\n\014Binary"
    "OpExpr\022\034\n\002op\030\001 \001(\0162\020.BinaryOpExpr.Op\022\030\n\t"
    "left_expr\030\002 \001(\0132\005.Expr\022\031\n\nright_expr\030\003 \001"
    "(\0132\005.Expr\"\177\n\002Op\022\013\n\007UNKNOWN\020\000\022\007\n\003ADD\020\001\022\007\n"
    "\003SUB\020\002\022\007\n\003MUL\020\003\022\007\n\003DIV\020\004\022\007\n\003MOD\020\005\022\006\n\002EQ\020"
    "\006\022\006\n\002NE\020\007\022\006\n\002GT\020\010\022\006\n\002GE\020\t\022\006\n\002LT\020\n\022\006\n\002LE\020"
    "\013\022\007\n\003AND\020\014\022\006\n\002OR\020\r\"A\n\nAssignExpr\022\030\n\tdest"
    "_expr\030\001 \001(\0132\005.Expr\022\031\n\nvalue_expr\030\002 \001(\0132\005"
    ".Expr\"\206\002\n\004Expr\022!\n\010constant\030\001 \001(\0132\r.Const"
    "antExprH\000\022\027\n\003var\030\002 \001(\0132\010.VarExprH\000\022\035\n\006me"
    "mber\030\003 \001(\0132\013.MemberExprH\000\022\033\n\005index\030\004 \001(\013"
    "2\n.IndexExprH\000\022\031\n\004call\030\005 \001(\0132\t.CallExprH"
    "\000\022 \n\010unary_op\030\006 \001(\0132\014.UnaryOpExprH\000\022\"\n\tb"
    "inary_op\030\007 \001(\0132\r.BinaryOpExprH\000\022\035\n\006assig"
    "n\030\010 \001(\0132\013.AssignExprH\000B\006\n\004type\"\037\n\010ExprSt"
    "mt\022\023\n\004expr\030\001 \001(\0132\005.Expr\"\036\n\007RetStmt\022\023\n\004ex"
    "pr\030\001 \001(\0132\005.Expr\"\t\n\007BrkStmt\"\n\n\010ContStmt\"]"
    "\n\010CondStmt\022\030\n\tcond_expr\030\001 \001(\0132\005.Expr\022\032\n\n"
    "true_block\030\002 \001(\0132\006.Block\022\033\n\013false_block\030"
    "\003 \001(\0132\006.Block\"\?\n\014CondLoopStmt\022\030\n\tcond_ex"
    "pr\030\001 \001(\0132\005.Expr\022\025\n\005block\030\002 \001(\0132\006.Block\"\236"
    "\001\n\013VarDeclStmt\022\014\n\004name\030\001 \001(\t\022\034\n\ttype_spe"
    "c\030\002 \001(\0132\t.TypeSpec\022\037\n\004mode\030\003 \001(\0162\021.VarDe"
    "clStmt.Mode\022\030\n\tinit_expr\030\004 \001(\0132\005.Expr\"(\n"
    "\004Mode\022\013\n\007UNKNOWN\020\000\022\007\n\003OWN\020\001\022\n\n\006BORROW\020\002\""
    "\327\001\n\004Stmt\022\031\n\004expr\030\001 \001(\0132\t.ExprStmtH\000\022\027\n\003r"
    "et\030\002 \001(\0132\010.RetStmtH\000\022\027\n\003brk\030\003 \001(\0132\010.BrkS"
    "tmtH\000\022\031\n\004cont\030\004 \001(\0132\t.ContStmtH\000\022\031\n\004cond"
    "\030\005 \001(\0132\t.CondStmtH\000\022\"\n\tcond_loop\030\006 \001(\0132\r"
    ".CondLoopStmtH\000\022 \n\010var_decl\030\007 \001(\0132\014.VarD"
    "eclStmtH\000B\006\n\004type\"\035\n\005Block\022\024\n\005stmts\030\001 \003("
    "\0132\005.Stmt\"\245\001\n\tFuncParam\022\014\n\004name\030\001 \001(\t\022\035\n\004"
    "mode\030\002 \001(\0162\017.FuncParam.Mode\022\034\n\ttype_spec"
    "\030\003 \001(\0132\t.TypeSpec\022\030\n\tinit_expr\030\004 \001(\0132\005.E"
    "xpr\"3\n\004Mode\022\013\n\007UNKNOWN\020\000\022\010\n\004COPY\020\001\022\n\n\006BO"
    "RROW\020\002\022\010\n\004MOVE\020\003\"\223\002\n\004Func\022\014\n\004name\030\001 \001(\t\022"
    "\023\n\013type_params\030\002 \003(\t\022\032\n\006params\030\003 \003(\0132\n.F"
    "uncParam\022#\n\020return_type_spec\030\004 \001(\0132\t.Typ"
    "eSpec\022%\n\013return_mode\030\005 \001(\0162\020.Func.Return"
    "Mode\022\024\n\002cc\030\006 \001(\0162\010.Func.CC\022\025\n\005block\030\007 \001("
    "\0132\006.Block\"9\n\nReturnMode\022\013\n\007UNKNOWN\020\000\022\010\n\004"
    "COPY\020\001\022\n\n\006BORROW\020\002\022\010\n\004MOVE\020\003\"\030\n\002CC\022\013\n\007DE"
    "FAULT\020\000\022\005\n\001C\020\001\"[\n\nExternFunc\022\014\n\004name\030\001 \001"
    "(\t\022\032\n\006params\030\002 \003(\0132\n.FuncParam\022#\n\020return"
    "_type_spec\030\003 \001(\0132\t.TypeSpec\"\316\001\n\005Class\022\014\n"
    "\004name\030\001 \001(\t\022\023\n\013type_params\030\002 \003(\t\022 \n\rsupe"
    "r_classes\030\003 \003(\0132\t.TypeSpec\022\036\n\007members\030\004 "
    "\003(\0132\r.Class.Member\032`\n\006Member\022\025\n\003cls\030\001 \001("
    "\0132\006.ClassH\000\022\025\n\004func\030\002 \001(\0132\005.FuncH\000\022 \n\010va"
    "r_decl\030\003 \001(\0132\014.VarDeclStmtH\000B\006\n\004type\"\276\001\n"
    "\006Module\022\014\n\004name\030\001 \001(\t\022\037\n\007members\030\002 \003(\0132\016"
    ".Module.Member\032\204\001\n\006Member\022\025\n\003cls\030\001 \001(\0132\006"
    ".ClassH\000\022\025\n\004func\030\002 \001(\0132\005.FuncH\000\022 \n\010var_d"
    "ecl\030\003 \001(\0132\014.VarDeclStmtH\000\022\"\n\013extern_func"
    "\030\004 \001(\0132\013.ExternFuncH\000B\006\n\004type\"N\n\010TypeSpe"
    "c\022\014\n\004name\030\001 \001(\t\022\031\n\006params\030\002 \003(\0132\t.TypeSp"
    "ec\022\031\n\006parent\030\003 \001(\0132\t.TypeSpecb\006proto3", 2677);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ast.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ast_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ast_2eproto_once_);
void protobuf_AddDesc_ast_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ast_2eproto_once_,
                 &protobuf_AddDesc_ast_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ast_2eproto {
  StaticDescriptorInitializer_ast_2eproto() {
    protobuf_AddDesc_ast_2eproto();
  }
} static_descriptor_initializer_ast_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConstantExpr::kStringValueFieldNumber;
const int ConstantExpr::kIntValueFieldNumber;
const int ConstantExpr::kBoolValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConstantExpr::ConstantExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConstantExpr)
}

void ConstantExpr::InitAsDefaultInstance() {
  ConstantExpr_default_oneof_instance_->stringvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ConstantExpr_default_oneof_instance_->intvalue_ = GOOGLE_LONGLONG(0);
  ConstantExpr_default_oneof_instance_->boolvalue_ = false;
}

ConstantExpr::ConstantExpr(const ConstantExpr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConstantExpr)
}

void ConstantExpr::SharedCtor() {
  clear_has_value();
  _cached_size_ = 0;
}

ConstantExpr::~ConstantExpr() {
  // @@protoc_insertion_point(destructor:ConstantExpr)
  SharedDtor();
}

void ConstantExpr::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void ConstantExpr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConstantExpr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConstantExpr_descriptor_;
}

const ConstantExpr& ConstantExpr::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ConstantExpr> ConstantExpr_default_instance_;

ConstantExpr* ConstantExpr::New(::google::protobuf::Arena* arena) const {
  ConstantExpr* n = new ConstantExpr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConstantExpr::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:ConstantExpr)
  switch (value_case()) {
    case kStringValue: {
      value_.stringvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kIntValue: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void ConstantExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:ConstantExpr)
  clear_value();
}

bool ConstantExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConstantExpr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string stringValue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stringvalue().data(), this->stringvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ConstantExpr.stringValue"));
        } else {
          goto handle_unusual;
        }
        goto after_boolvalue;
        break;
      }

      // optional int64 intValue = 2;
      case 2: {
        if (tag == 16) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.intvalue_)));
          set_has_intvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_boolValue;
        break;
      }

      // optional bool boolValue = 3;
      case 3: {
        if (tag == 24) {
         parse_boolValue:
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.boolvalue_)));
          set_has_boolvalue();
        } else {
          goto handle_unusual;
        }
       after_boolvalue:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConstantExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConstantExpr)
  return false;
#undef DO_
}

void ConstantExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConstantExpr)
  // optional string stringValue = 1;
  if (has_stringvalue()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stringvalue().data(), this->stringvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConstantExpr.stringValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stringvalue(), output);
  }

  // optional int64 intValue = 2;
  if (has_intvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->intvalue(), output);
  }

  // optional bool boolValue = 3;
  if (has_boolvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->boolvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:ConstantExpr)
}

::google::protobuf::uint8* ConstantExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ConstantExpr)
  // optional string stringValue = 1;
  if (has_stringvalue()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stringvalue().data(), this->stringvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConstantExpr.stringValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->stringvalue(), target);
  }

  // optional int64 intValue = 2;
  if (has_intvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->intvalue(), target);
  }

  // optional bool boolValue = 3;
  if (has_boolvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->boolvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ConstantExpr)
  return target;
}

size_t ConstantExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConstantExpr)
  size_t total_size = 0;

  switch (value_case()) {
    // optional string stringValue = 1;
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stringvalue());
      break;
    }
    // optional int64 intValue = 2;
    case kIntValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->intvalue());
      break;
    }
    // optional bool boolValue = 3;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConstantExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConstantExpr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ConstantExpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConstantExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConstantExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConstantExpr)
    UnsafeMergeFrom(*source);
  }
}

void ConstantExpr::MergeFrom(const ConstantExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConstantExpr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ConstantExpr::UnsafeMergeFrom(const ConstantExpr& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.value_case()) {
    case kStringValue: {
      set_stringvalue(from.stringvalue());
      break;
    }
    case kIntValue: {
      set_intvalue(from.intvalue());
      break;
    }
    case kBoolValue: {
      set_boolvalue(from.boolvalue());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void ConstantExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConstantExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConstantExpr::CopyFrom(const ConstantExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConstantExpr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ConstantExpr::IsInitialized() const {

  return true;
}

void ConstantExpr::Swap(ConstantExpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConstantExpr::InternalSwap(ConstantExpr* other) {
  std::swap(value_, other->value_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConstantExpr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConstantExpr_descriptor_;
  metadata.reflection = ConstantExpr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConstantExpr

// optional string stringValue = 1;
bool ConstantExpr::has_stringvalue() const {
  return value_case() == kStringValue;
}
void ConstantExpr::set_has_stringvalue() {
  _oneof_case_[0] = kStringValue;
}
void ConstantExpr::clear_stringvalue() {
  if (has_stringvalue()) {
    value_.stringvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& ConstantExpr::stringvalue() const {
  // @@protoc_insertion_point(field_get:ConstantExpr.stringValue)
  if (has_stringvalue()) {
    return value_.stringvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void ConstantExpr::set_stringvalue(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConstantExpr.stringValue)
  if (!has_stringvalue()) {
    clear_value();
    set_has_stringvalue();
    value_.stringvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.stringvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConstantExpr.stringValue)
}
void ConstantExpr::set_stringvalue(const char* value) {
  if (!has_stringvalue()) {
    clear_value();
    set_has_stringvalue();
    value_.stringvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.stringvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConstantExpr.stringValue)
}
void ConstantExpr::set_stringvalue(const char* value, size_t size) {
  if (!has_stringvalue()) {
    clear_value();
    set_has_stringvalue();
    value_.stringvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.stringvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConstantExpr.stringValue)
}
::std::string* ConstantExpr::mutable_stringvalue() {
  if (!has_stringvalue()) {
    clear_value();
    set_has_stringvalue();
    value_.stringvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:ConstantExpr.stringValue)
  return value_.stringvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConstantExpr::release_stringvalue() {
  // @@protoc_insertion_point(field_release:ConstantExpr.stringValue)
  if (has_stringvalue()) {
    clear_has_value();
    return value_.stringvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void ConstantExpr::set_allocated_stringvalue(::std::string* stringvalue) {
  if (!has_stringvalue()) {
    value_.stringvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (stringvalue != NULL) {
    set_has_stringvalue();
    value_.stringvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        stringvalue);
  }
  // @@protoc_insertion_point(field_set_allocated:ConstantExpr.stringValue)
}

// optional int64 intValue = 2;
bool ConstantExpr::has_intvalue() const {
  return value_case() == kIntValue;
}
void ConstantExpr::set_has_intvalue() {
  _oneof_case_[0] = kIntValue;
}
void ConstantExpr::clear_intvalue() {
  if (has_intvalue()) {
    value_.intvalue_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
::google::protobuf::int64 ConstantExpr::intvalue() const {
  // @@protoc_insertion_point(field_get:ConstantExpr.intValue)
  if (has_intvalue()) {
    return value_.intvalue_;
  }
  return GOOGLE_LONGLONG(0);
}
void ConstantExpr::set_intvalue(::google::protobuf::int64 value) {
  if (!has_intvalue()) {
    clear_value();
    set_has_intvalue();
  }
  value_.intvalue_ = value;
  // @@protoc_insertion_point(field_set:ConstantExpr.intValue)
}

// optional bool boolValue = 3;
bool ConstantExpr::has_boolvalue() const {
  return value_case() == kBoolValue;
}
void ConstantExpr::set_has_boolvalue() {
  _oneof_case_[0] = kBoolValue;
}
void ConstantExpr::clear_boolvalue() {
  if (has_boolvalue()) {
    value_.boolvalue_ = false;
    clear_has_value();
  }
}
bool ConstantExpr::boolvalue() const {
  // @@protoc_insertion_point(field_get:ConstantExpr.boolValue)
  if (has_boolvalue()) {
    return value_.boolvalue_;
  }
  return false;
}
void ConstantExpr::set_boolvalue(bool value) {
  if (!has_boolvalue()) {
    clear_value();
    set_has_boolvalue();
  }
  value_.boolvalue_ = value;
  // @@protoc_insertion_point(field_set:ConstantExpr.boolValue)
}

bool ConstantExpr::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void ConstantExpr::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
ConstantExpr::ValueCase ConstantExpr::value_case() const {
  return ConstantExpr::ValueCase(_oneof_case_[0]);
}
inline const ConstantExpr* ConstantExpr::internal_default_instance() {
  return &ConstantExpr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarExpr::kVarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarExpr::VarExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:VarExpr)
}

void VarExpr::InitAsDefaultInstance() {
}

VarExpr::VarExpr(const VarExpr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:VarExpr)
}

void VarExpr::SharedCtor() {
  var_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

VarExpr::~VarExpr() {
  // @@protoc_insertion_point(destructor:VarExpr)
  SharedDtor();
}

void VarExpr::SharedDtor() {
  var_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VarExpr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VarExpr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VarExpr_descriptor_;
}

const VarExpr& VarExpr::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<VarExpr> VarExpr_default_instance_;

VarExpr* VarExpr::New(::google::protobuf::Arena* arena) const {
  VarExpr* n = new VarExpr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:VarExpr)
  var_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool VarExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VarExpr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string var = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_var()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->var().data(), this->var().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "VarExpr.var"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VarExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VarExpr)
  return false;
#undef DO_
}

void VarExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VarExpr)
  // optional string var = 1;
  if (this->var().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->var().data(), this->var().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "VarExpr.var");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->var(), output);
  }

  // @@protoc_insertion_point(serialize_end:VarExpr)
}

::google::protobuf::uint8* VarExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VarExpr)
  // optional string var = 1;
  if (this->var().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->var().data(), this->var().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "VarExpr.var");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->var(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:VarExpr)
  return target;
}

size_t VarExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VarExpr)
  size_t total_size = 0;

  // optional string var = 1;
  if (this->var().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->var());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VarExpr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const VarExpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VarExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VarExpr)
    UnsafeMergeFrom(*source);
  }
}

void VarExpr::MergeFrom(const VarExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VarExpr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void VarExpr::UnsafeMergeFrom(const VarExpr& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.var().size() > 0) {

    var_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.var_);
  }
}

void VarExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VarExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarExpr::CopyFrom(const VarExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VarExpr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool VarExpr::IsInitialized() const {

  return true;
}

void VarExpr::Swap(VarExpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarExpr::InternalSwap(VarExpr* other) {
  var_.Swap(&other->var_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VarExpr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VarExpr_descriptor_;
  metadata.reflection = VarExpr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VarExpr

// optional string var = 1;
void VarExpr::clear_var() {
  var_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VarExpr::var() const {
  // @@protoc_insertion_point(field_get:VarExpr.var)
  return var_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VarExpr::set_var(const ::std::string& value) {
  
  var_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VarExpr.var)
}
void VarExpr::set_var(const char* value) {
  
  var_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VarExpr.var)
}
void VarExpr::set_var(const char* value, size_t size) {
  
  var_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VarExpr.var)
}
::std::string* VarExpr::mutable_var() {
  
  // @@protoc_insertion_point(field_mutable:VarExpr.var)
  return var_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VarExpr::release_var() {
  // @@protoc_insertion_point(field_release:VarExpr.var)
  
  return var_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VarExpr::set_allocated_var(::std::string* var) {
  if (var != NULL) {
    
  } else {
    
  }
  var_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), var);
  // @@protoc_insertion_point(field_set_allocated:VarExpr.var)
}

inline const VarExpr* VarExpr::internal_default_instance() {
  return &VarExpr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemberExpr::kExprFieldNumber;
const int MemberExpr::kMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemberExpr::MemberExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:MemberExpr)
}

void MemberExpr::InitAsDefaultInstance() {
  expr_ = const_cast< ::Expr*>(
      ::Expr::internal_default_instance());
}

MemberExpr::MemberExpr(const MemberExpr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MemberExpr)
}

void MemberExpr::SharedCtor() {
  member_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expr_ = NULL;
  _cached_size_ = 0;
}

MemberExpr::~MemberExpr() {
  // @@protoc_insertion_point(destructor:MemberExpr)
  SharedDtor();
}

void MemberExpr::SharedDtor() {
  member_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &MemberExpr_default_instance_.get()) {
    delete expr_;
  }
}

void MemberExpr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberExpr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MemberExpr_descriptor_;
}

const MemberExpr& MemberExpr::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MemberExpr> MemberExpr_default_instance_;

MemberExpr* MemberExpr::New(::google::protobuf::Arena* arena) const {
  MemberExpr* n = new MemberExpr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemberExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:MemberExpr)
  if (GetArenaNoVirtual() == NULL && expr_ != NULL) delete expr_;
  expr_ = NULL;
  member_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MemberExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MemberExpr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Expr expr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_expr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_member;
        break;
      }

      // optional string member = 2;
      case 2: {
        if (tag == 18) {
         parse_member:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_member()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->member().data(), this->member().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MemberExpr.member"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MemberExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MemberExpr)
  return false;
#undef DO_
}

void MemberExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MemberExpr)
  // optional .Expr expr = 1;
  if (this->has_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->expr_, output);
  }

  // optional string member = 2;
  if (this->member().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->member().data(), this->member().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MemberExpr.member");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->member(), output);
  }

  // @@protoc_insertion_point(serialize_end:MemberExpr)
}

::google::protobuf::uint8* MemberExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MemberExpr)
  // optional .Expr expr = 1;
  if (this->has_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->expr_, false, target);
  }

  // optional string member = 2;
  if (this->member().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->member().data(), this->member().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MemberExpr.member");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->member(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MemberExpr)
  return target;
}

size_t MemberExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MemberExpr)
  size_t total_size = 0;

  // optional .Expr expr = 1;
  if (this->has_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->expr_);
  }

  // optional string member = 2;
  if (this->member().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->member());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemberExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MemberExpr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MemberExpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemberExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MemberExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MemberExpr)
    UnsafeMergeFrom(*source);
  }
}

void MemberExpr::MergeFrom(const MemberExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MemberExpr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MemberExpr::UnsafeMergeFrom(const MemberExpr& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_expr()) {
    mutable_expr()->::Expr::MergeFrom(from.expr());
  }
  if (from.member().size() > 0) {

    member_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.member_);
  }
}

void MemberExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MemberExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemberExpr::CopyFrom(const MemberExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MemberExpr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MemberExpr::IsInitialized() const {

  return true;
}

void MemberExpr::Swap(MemberExpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemberExpr::InternalSwap(MemberExpr* other) {
  std::swap(expr_, other->expr_);
  member_.Swap(&other->member_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemberExpr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MemberExpr_descriptor_;
  metadata.reflection = MemberExpr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MemberExpr

// optional .Expr expr = 1;
bool MemberExpr::has_expr() const {
  return this != internal_default_instance() && expr_ != NULL;
}
void MemberExpr::clear_expr() {
  if (GetArenaNoVirtual() == NULL && expr_ != NULL) delete expr_;
  expr_ = NULL;
}
const ::Expr& MemberExpr::expr() const {
  // @@protoc_insertion_point(field_get:MemberExpr.expr)
  return expr_ != NULL ? *expr_
                         : *::Expr::internal_default_instance();
}
::Expr* MemberExpr::mutable_expr() {
  
  if (expr_ == NULL) {
    expr_ = new ::Expr;
  }
  // @@protoc_insertion_point(field_mutable:MemberExpr.expr)
  return expr_;
}
::Expr* MemberExpr::release_expr() {
  // @@protoc_insertion_point(field_release:MemberExpr.expr)
  
  ::Expr* temp = expr_;
  expr_ = NULL;
  return temp;
}
void MemberExpr::set_allocated_expr(::Expr* expr) {
  delete expr_;
  expr_ = expr;
  if (expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MemberExpr.expr)
}

// optional string member = 2;
void MemberExpr::clear_member() {
  member_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MemberExpr::member() const {
  // @@protoc_insertion_point(field_get:MemberExpr.member)
  return member_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MemberExpr::set_member(const ::std::string& value) {
  
  member_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MemberExpr.member)
}
void MemberExpr::set_member(const char* value) {
  
  member_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MemberExpr.member)
}
void MemberExpr::set_member(const char* value, size_t size) {
  
  member_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MemberExpr.member)
}
::std::string* MemberExpr::mutable_member() {
  
  // @@protoc_insertion_point(field_mutable:MemberExpr.member)
  return member_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MemberExpr::release_member() {
  // @@protoc_insertion_point(field_release:MemberExpr.member)
  
  return member_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MemberExpr::set_allocated_member(::std::string* member) {
  if (member != NULL) {
    
  } else {
    
  }
  member_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), member);
  // @@protoc_insertion_point(field_set_allocated:MemberExpr.member)
}

inline const MemberExpr* MemberExpr::internal_default_instance() {
  return &MemberExpr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexExpr::kExprFieldNumber;
const int IndexExpr::kIndexExprFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexExpr::IndexExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:IndexExpr)
}

void IndexExpr::InitAsDefaultInstance() {
  expr_ = const_cast< ::Expr*>(
      ::Expr::internal_default_instance());
  index_expr_ = const_cast< ::Expr*>(
      ::Expr::internal_default_instance());
}

IndexExpr::IndexExpr(const IndexExpr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:IndexExpr)
}

void IndexExpr::SharedCtor() {
  expr_ = NULL;
  index_expr_ = NULL;
  _cached_size_ = 0;
}

IndexExpr::~IndexExpr() {
  // @@protoc_insertion_point(destructor:IndexExpr)
  SharedDtor();
}

void IndexExpr::SharedDtor() {
  if (this != &IndexExpr_default_instance_.get()) {
    delete expr_;
    delete index_expr_;
  }
}

void IndexExpr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IndexExpr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IndexExpr_descriptor_;
}

const IndexExpr& IndexExpr::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<IndexExpr> IndexExpr_default_instance_;

IndexExpr* IndexExpr::New(::google::protobuf::Arena* arena) const {
  IndexExpr* n = new IndexExpr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IndexExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:IndexExpr)
  if (GetArenaNoVirtual() == NULL && expr_ != NULL) delete expr_;
  expr_ = NULL;
  if (GetArenaNoVirtual() == NULL && index_expr_ != NULL) delete index_expr_;
  index_expr_ = NULL;
}

bool IndexExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IndexExpr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Expr expr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_expr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_index_expr;
        break;
      }

      // optional .Expr index_expr = 2;
      case 2: {
        if (tag == 18) {
         parse_index_expr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_index_expr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IndexExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IndexExpr)
  return false;
#undef DO_
}

void IndexExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IndexExpr)
  // optional .Expr expr = 1;
  if (this->has_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->expr_, output);
  }

  // optional .Expr index_expr = 2;
  if (this->has_index_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->index_expr_, output);
  }

  // @@protoc_insertion_point(serialize_end:IndexExpr)
}

::google::protobuf::uint8* IndexExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IndexExpr)
  // optional .Expr expr = 1;
  if (this->has_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->expr_, false, target);
  }

  // optional .Expr index_expr = 2;
  if (this->has_index_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->index_expr_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:IndexExpr)
  return target;
}

size_t IndexExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IndexExpr)
  size_t total_size = 0;

  // optional .Expr expr = 1;
  if (this->has_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->expr_);
  }

  // optional .Expr index_expr = 2;
  if (this->has_index_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->index_expr_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IndexExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IndexExpr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const IndexExpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IndexExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IndexExpr)
    UnsafeMergeFrom(*source);
  }
}

void IndexExpr::MergeFrom(const IndexExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IndexExpr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void IndexExpr::UnsafeMergeFrom(const IndexExpr& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_expr()) {
    mutable_expr()->::Expr::MergeFrom(from.expr());
  }
  if (from.has_index_expr()) {
    mutable_index_expr()->::Expr::MergeFrom(from.index_expr());
  }
}

void IndexExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IndexExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexExpr::CopyFrom(const IndexExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IndexExpr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool IndexExpr::IsInitialized() const {

  return true;
}

void IndexExpr::Swap(IndexExpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexExpr::InternalSwap(IndexExpr* other) {
  std::swap(expr_, other->expr_);
  std::swap(index_expr_, other->index_expr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IndexExpr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IndexExpr_descriptor_;
  metadata.reflection = IndexExpr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IndexExpr

// optional .Expr expr = 1;
bool IndexExpr::has_expr() const {
  return this != internal_default_instance() && expr_ != NULL;
}
void IndexExpr::clear_expr() {
  if (GetArenaNoVirtual() == NULL && expr_ != NULL) delete expr_;
  expr_ = NULL;
}
const ::Expr& IndexExpr::expr() const {
  // @@protoc_insertion_point(field_get:IndexExpr.expr)
  return expr_ != NULL ? *expr_
                         : *::Expr::internal_default_instance();
}
::Expr* IndexExpr::mutable_expr() {
  
  if (expr_ == NULL) {
    expr_ = new ::Expr;
  }
  // @@protoc_insertion_point(field_mutable:IndexExpr.expr)
  return expr_;
}
::Expr* IndexExpr::release_expr() {
  // @@protoc_insertion_point(field_release:IndexExpr.expr)
  
  ::Expr* temp = expr_;
  expr_ = NULL;
  return temp;
}
void IndexExpr::set_allocated_expr(::Expr* expr) {
  delete expr_;
  expr_ = expr;
  if (expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:IndexExpr.expr)
}

// optional .Expr index_expr = 2;
bool IndexExpr::has_index_expr() const {
  return this != internal_default_instance() && index_expr_ != NULL;
}
void IndexExpr::clear_index_expr() {
  if (GetArenaNoVirtual() == NULL && index_expr_ != NULL) delete index_expr_;
  index_expr_ = NULL;
}
const ::Expr& IndexExpr::index_expr() const {
  // @@protoc_insertion_point(field_get:IndexExpr.index_expr)
  return index_expr_ != NULL ? *index_expr_
                         : *::Expr::internal_default_instance();
}
::Expr* IndexExpr::mutable_index_expr() {
  
  if (index_expr_ == NULL) {
    index_expr_ = new ::Expr;
  }
  // @@protoc_insertion_point(field_mutable:IndexExpr.index_expr)
  return index_expr_;
}
::Expr* IndexExpr::release_index_expr() {
  // @@protoc_insertion_point(field_release:IndexExpr.index_expr)
  
  ::Expr* temp = index_expr_;
  index_expr_ = NULL;
  return temp;
}
void IndexExpr::set_allocated_index_expr(::Expr* index_expr) {
  delete index_expr_;
  index_expr_ = index_expr;
  if (index_expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:IndexExpr.index_expr)
}

inline const IndexExpr* IndexExpr::internal_default_instance() {
  return &IndexExpr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallExpr::kExprFieldNumber;
const int CallExpr::kArgExprsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallExpr::CallExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CallExpr)
}

void CallExpr::InitAsDefaultInstance() {
  expr_ = const_cast< ::Expr*>(
      ::Expr::internal_default_instance());
}

CallExpr::CallExpr(const CallExpr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CallExpr)
}

void CallExpr::SharedCtor() {
  expr_ = NULL;
  _cached_size_ = 0;
}

CallExpr::~CallExpr() {
  // @@protoc_insertion_point(destructor:CallExpr)
  SharedDtor();
}

void CallExpr::SharedDtor() {
  if (this != &CallExpr_default_instance_.get()) {
    delete expr_;
  }
}

void CallExpr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallExpr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CallExpr_descriptor_;
}

const CallExpr& CallExpr::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CallExpr> CallExpr_default_instance_;

CallExpr* CallExpr::New(::google::protobuf::Arena* arena) const {
  CallExpr* n = new CallExpr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:CallExpr)
  if (GetArenaNoVirtual() == NULL && expr_ != NULL) delete expr_;
  expr_ = NULL;
  arg_exprs_.Clear();
}

bool CallExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CallExpr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Expr expr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_expr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_arg_exprs;
        break;
      }

      // repeated .Expr arg_exprs = 2;
      case 2: {
        if (tag == 18) {
         parse_arg_exprs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_arg_exprs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_arg_exprs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_arg_exprs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CallExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CallExpr)
  return false;
#undef DO_
}

void CallExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CallExpr)
  // optional .Expr expr = 1;
  if (this->has_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->expr_, output);
  }

  // repeated .Expr arg_exprs = 2;
  for (unsigned int i = 0, n = this->arg_exprs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arg_exprs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CallExpr)
}

::google::protobuf::uint8* CallExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CallExpr)
  // optional .Expr expr = 1;
  if (this->has_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->expr_, false, target);
  }

  // repeated .Expr arg_exprs = 2;
  for (unsigned int i = 0, n = this->arg_exprs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->arg_exprs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CallExpr)
  return target;
}

size_t CallExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CallExpr)
  size_t total_size = 0;

  // optional .Expr expr = 1;
  if (this->has_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->expr_);
  }

  // repeated .Expr arg_exprs = 2;
  {
    unsigned int count = this->arg_exprs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arg_exprs(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CallExpr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CallExpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CallExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CallExpr)
    UnsafeMergeFrom(*source);
  }
}

void CallExpr::MergeFrom(const CallExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CallExpr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CallExpr::UnsafeMergeFrom(const CallExpr& from) {
  GOOGLE_DCHECK(&from != this);
  arg_exprs_.MergeFrom(from.arg_exprs_);
  if (from.has_expr()) {
    mutable_expr()->::Expr::MergeFrom(from.expr());
  }
}

void CallExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CallExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallExpr::CopyFrom(const CallExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CallExpr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CallExpr::IsInitialized() const {

  return true;
}

void CallExpr::Swap(CallExpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallExpr::InternalSwap(CallExpr* other) {
  std::swap(expr_, other->expr_);
  arg_exprs_.UnsafeArenaSwap(&other->arg_exprs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallExpr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CallExpr_descriptor_;
  metadata.reflection = CallExpr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallExpr

// optional .Expr expr = 1;
bool CallExpr::has_expr() const {
  return this != internal_default_instance() && expr_ != NULL;
}
void CallExpr::clear_expr() {
  if (GetArenaNoVirtual() == NULL && expr_ != NULL) delete expr_;
  expr_ = NULL;
}
const ::Expr& CallExpr::expr() const {
  // @@protoc_insertion_point(field_get:CallExpr.expr)
  return expr_ != NULL ? *expr_
                         : *::Expr::internal_default_instance();
}
::Expr* CallExpr::mutable_expr() {
  
  if (expr_ == NULL) {
    expr_ = new ::Expr;
  }
  // @@protoc_insertion_point(field_mutable:CallExpr.expr)
  return expr_;
}
::Expr* CallExpr::release_expr() {
  // @@protoc_insertion_point(field_release:CallExpr.expr)
  
  ::Expr* temp = expr_;
  expr_ = NULL;
  return temp;
}
void CallExpr::set_allocated_expr(::Expr* expr) {
  delete expr_;
  expr_ = expr;
  if (expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CallExpr.expr)
}

// repeated .Expr arg_exprs = 2;
int CallExpr::arg_exprs_size() const {
  return arg_exprs_.size();
}
void CallExpr::clear_arg_exprs() {
  arg_exprs_.Clear();
}
const ::Expr& CallExpr::arg_exprs(int index) const {
  // @@protoc_insertion_point(field_get:CallExpr.arg_exprs)
  return arg_exprs_.Get(index);
}
::Expr* CallExpr::mutable_arg_exprs(int index) {
  // @@protoc_insertion_point(field_mutable:CallExpr.arg_exprs)
  return arg_exprs_.Mutable(index);
}
::Expr* CallExpr::add_arg_exprs() {
  // @@protoc_insertion_point(field_add:CallExpr.arg_exprs)
  return arg_exprs_.Add();
}
::google::protobuf::RepeatedPtrField< ::Expr >*
CallExpr::mutable_arg_exprs() {
  // @@protoc_insertion_point(field_mutable_list:CallExpr.arg_exprs)
  return &arg_exprs_;
}
const ::google::protobuf::RepeatedPtrField< ::Expr >&
CallExpr::arg_exprs() const {
  // @@protoc_insertion_point(field_list:CallExpr.arg_exprs)
  return arg_exprs_;
}

inline const CallExpr* CallExpr::internal_default_instance() {
  return &CallExpr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* UnaryOpExpr_Op_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnaryOpExpr_Op_descriptor_;
}
bool UnaryOpExpr_Op_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UnaryOpExpr_Op UnaryOpExpr::UNKNOWN;
const UnaryOpExpr_Op UnaryOpExpr::ADD;
const UnaryOpExpr_Op UnaryOpExpr::SUB;
const UnaryOpExpr_Op UnaryOpExpr::BORROW;
const UnaryOpExpr_Op UnaryOpExpr::MOVE;
const UnaryOpExpr_Op UnaryOpExpr::NOT;
const UnaryOpExpr_Op UnaryOpExpr::Op_MIN;
const UnaryOpExpr_Op UnaryOpExpr::Op_MAX;
const int UnaryOpExpr::Op_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnaryOpExpr::kOpFieldNumber;
const int UnaryOpExpr::kExprFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnaryOpExpr::UnaryOpExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnaryOpExpr)
}

void UnaryOpExpr::InitAsDefaultInstance() {
  expr_ = const_cast< ::Expr*>(
      ::Expr::internal_default_instance());
}

UnaryOpExpr::UnaryOpExpr(const UnaryOpExpr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UnaryOpExpr)
}

void UnaryOpExpr::SharedCtor() {
  expr_ = NULL;
  op_ = 0;
  _cached_size_ = 0;
}

UnaryOpExpr::~UnaryOpExpr() {
  // @@protoc_insertion_point(destructor:UnaryOpExpr)
  SharedDtor();
}

void UnaryOpExpr::SharedDtor() {
  if (this != &UnaryOpExpr_default_instance_.get()) {
    delete expr_;
  }
}

void UnaryOpExpr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnaryOpExpr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnaryOpExpr_descriptor_;
}

const UnaryOpExpr& UnaryOpExpr::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UnaryOpExpr> UnaryOpExpr_default_instance_;

UnaryOpExpr* UnaryOpExpr::New(::google::protobuf::Arena* arena) const {
  UnaryOpExpr* n = new UnaryOpExpr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnaryOpExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:UnaryOpExpr)
  op_ = 0;
  if (GetArenaNoVirtual() == NULL && expr_ != NULL) delete expr_;
  expr_ = NULL;
}

bool UnaryOpExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnaryOpExpr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .UnaryOpExpr.Op op = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::UnaryOpExpr_Op >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_expr;
        break;
      }

      // optional .Expr expr = 2;
      case 2: {
        if (tag == 18) {
         parse_expr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_expr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnaryOpExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnaryOpExpr)
  return false;
#undef DO_
}

void UnaryOpExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnaryOpExpr)
  // optional .UnaryOpExpr.Op op = 1;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op(), output);
  }

  // optional .Expr expr = 2;
  if (this->has_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->expr_, output);
  }

  // @@protoc_insertion_point(serialize_end:UnaryOpExpr)
}

::google::protobuf::uint8* UnaryOpExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnaryOpExpr)
  // optional .UnaryOpExpr.Op op = 1;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op(), target);
  }

  // optional .Expr expr = 2;
  if (this->has_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->expr_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UnaryOpExpr)
  return target;
}

size_t UnaryOpExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnaryOpExpr)
  size_t total_size = 0;

  // optional .UnaryOpExpr.Op op = 1;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  // optional .Expr expr = 2;
  if (this->has_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->expr_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnaryOpExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnaryOpExpr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UnaryOpExpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnaryOpExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnaryOpExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnaryOpExpr)
    UnsafeMergeFrom(*source);
  }
}

void UnaryOpExpr::MergeFrom(const UnaryOpExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnaryOpExpr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UnaryOpExpr::UnsafeMergeFrom(const UnaryOpExpr& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.op() != 0) {
    set_op(from.op());
  }
  if (from.has_expr()) {
    mutable_expr()->::Expr::MergeFrom(from.expr());
  }
}

void UnaryOpExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnaryOpExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnaryOpExpr::CopyFrom(const UnaryOpExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnaryOpExpr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UnaryOpExpr::IsInitialized() const {

  return true;
}

void UnaryOpExpr::Swap(UnaryOpExpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnaryOpExpr::InternalSwap(UnaryOpExpr* other) {
  std::swap(op_, other->op_);
  std::swap(expr_, other->expr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnaryOpExpr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnaryOpExpr_descriptor_;
  metadata.reflection = UnaryOpExpr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnaryOpExpr

// optional .UnaryOpExpr.Op op = 1;
void UnaryOpExpr::clear_op() {
  op_ = 0;
}
::UnaryOpExpr_Op UnaryOpExpr::op() const {
  // @@protoc_insertion_point(field_get:UnaryOpExpr.op)
  return static_cast< ::UnaryOpExpr_Op >(op_);
}
void UnaryOpExpr::set_op(::UnaryOpExpr_Op value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:UnaryOpExpr.op)
}

// optional .Expr expr = 2;
bool UnaryOpExpr::has_expr() const {
  return this != internal_default_instance() && expr_ != NULL;
}
void UnaryOpExpr::clear_expr() {
  if (GetArenaNoVirtual() == NULL && expr_ != NULL) delete expr_;
  expr_ = NULL;
}
const ::Expr& UnaryOpExpr::expr() const {
  // @@protoc_insertion_point(field_get:UnaryOpExpr.expr)
  return expr_ != NULL ? *expr_
                         : *::Expr::internal_default_instance();
}
::Expr* UnaryOpExpr::mutable_expr() {
  
  if (expr_ == NULL) {
    expr_ = new ::Expr;
  }
  // @@protoc_insertion_point(field_mutable:UnaryOpExpr.expr)
  return expr_;
}
::Expr* UnaryOpExpr::release_expr() {
  // @@protoc_insertion_point(field_release:UnaryOpExpr.expr)
  
  ::Expr* temp = expr_;
  expr_ = NULL;
  return temp;
}
void UnaryOpExpr::set_allocated_expr(::Expr* expr) {
  delete expr_;
  expr_ = expr;
  if (expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:UnaryOpExpr.expr)
}

inline const UnaryOpExpr* UnaryOpExpr::internal_default_instance() {
  return &UnaryOpExpr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* BinaryOpExpr_Op_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BinaryOpExpr_Op_descriptor_;
}
bool BinaryOpExpr_Op_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BinaryOpExpr_Op BinaryOpExpr::UNKNOWN;
const BinaryOpExpr_Op BinaryOpExpr::ADD;
const BinaryOpExpr_Op BinaryOpExpr::SUB;
const BinaryOpExpr_Op BinaryOpExpr::MUL;
const BinaryOpExpr_Op BinaryOpExpr::DIV;
const BinaryOpExpr_Op BinaryOpExpr::MOD;
const BinaryOpExpr_Op BinaryOpExpr::EQ;
const BinaryOpExpr_Op BinaryOpExpr::NE;
const BinaryOpExpr_Op BinaryOpExpr::GT;
const BinaryOpExpr_Op BinaryOpExpr::GE;
const BinaryOpExpr_Op BinaryOpExpr::LT;
const BinaryOpExpr_Op BinaryOpExpr::LE;
const BinaryOpExpr_Op BinaryOpExpr::AND;
const BinaryOpExpr_Op BinaryOpExpr::OR;
const BinaryOpExpr_Op BinaryOpExpr::Op_MIN;
const BinaryOpExpr_Op BinaryOpExpr::Op_MAX;
const int BinaryOpExpr::Op_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BinaryOpExpr::kOpFieldNumber;
const int BinaryOpExpr::kLeftExprFieldNumber;
const int BinaryOpExpr::kRightExprFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BinaryOpExpr::BinaryOpExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:BinaryOpExpr)
}

void BinaryOpExpr::InitAsDefaultInstance() {
  left_expr_ = const_cast< ::Expr*>(
      ::Expr::internal_default_instance());
  right_expr_ = const_cast< ::Expr*>(
      ::Expr::internal_default_instance());
}

BinaryOpExpr::BinaryOpExpr(const BinaryOpExpr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BinaryOpExpr)
}

void BinaryOpExpr::SharedCtor() {
  left_expr_ = NULL;
  right_expr_ = NULL;
  op_ = 0;
  _cached_size_ = 0;
}

BinaryOpExpr::~BinaryOpExpr() {
  // @@protoc_insertion_point(destructor:BinaryOpExpr)
  SharedDtor();
}

void BinaryOpExpr::SharedDtor() {
  if (this != &BinaryOpExpr_default_instance_.get()) {
    delete left_expr_;
    delete right_expr_;
  }
}

void BinaryOpExpr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BinaryOpExpr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BinaryOpExpr_descriptor_;
}

const BinaryOpExpr& BinaryOpExpr::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BinaryOpExpr> BinaryOpExpr_default_instance_;

BinaryOpExpr* BinaryOpExpr::New(::google::protobuf::Arena* arena) const {
  BinaryOpExpr* n = new BinaryOpExpr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BinaryOpExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:BinaryOpExpr)
  op_ = 0;
  if (GetArenaNoVirtual() == NULL && left_expr_ != NULL) delete left_expr_;
  left_expr_ = NULL;
  if (GetArenaNoVirtual() == NULL && right_expr_ != NULL) delete right_expr_;
  right_expr_ = NULL;
}

bool BinaryOpExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BinaryOpExpr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .BinaryOpExpr.Op op = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::BinaryOpExpr_Op >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_left_expr;
        break;
      }

      // optional .Expr left_expr = 2;
      case 2: {
        if (tag == 18) {
         parse_left_expr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_left_expr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_right_expr;
        break;
      }

      // optional .Expr right_expr = 3;
      case 3: {
        if (tag == 26) {
         parse_right_expr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_right_expr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BinaryOpExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BinaryOpExpr)
  return false;
#undef DO_
}

void BinaryOpExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BinaryOpExpr)
  // optional .BinaryOpExpr.Op op = 1;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op(), output);
  }

  // optional .Expr left_expr = 2;
  if (this->has_left_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->left_expr_, output);
  }

  // optional .Expr right_expr = 3;
  if (this->has_right_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->right_expr_, output);
  }

  // @@protoc_insertion_point(serialize_end:BinaryOpExpr)
}

::google::protobuf::uint8* BinaryOpExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BinaryOpExpr)
  // optional .BinaryOpExpr.Op op = 1;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op(), target);
  }

  // optional .Expr left_expr = 2;
  if (this->has_left_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->left_expr_, false, target);
  }

  // optional .Expr right_expr = 3;
  if (this->has_right_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->right_expr_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:BinaryOpExpr)
  return target;
}

size_t BinaryOpExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BinaryOpExpr)
  size_t total_size = 0;

  // optional .BinaryOpExpr.Op op = 1;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  // optional .Expr left_expr = 2;
  if (this->has_left_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->left_expr_);
  }

  // optional .Expr right_expr = 3;
  if (this->has_right_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->right_expr_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BinaryOpExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BinaryOpExpr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BinaryOpExpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BinaryOpExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BinaryOpExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BinaryOpExpr)
    UnsafeMergeFrom(*source);
  }
}

void BinaryOpExpr::MergeFrom(const BinaryOpExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BinaryOpExpr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BinaryOpExpr::UnsafeMergeFrom(const BinaryOpExpr& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.op() != 0) {
    set_op(from.op());
  }
  if (from.has_left_expr()) {
    mutable_left_expr()->::Expr::MergeFrom(from.left_expr());
  }
  if (from.has_right_expr()) {
    mutable_right_expr()->::Expr::MergeFrom(from.right_expr());
  }
}

void BinaryOpExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BinaryOpExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BinaryOpExpr::CopyFrom(const BinaryOpExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BinaryOpExpr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BinaryOpExpr::IsInitialized() const {

  return true;
}

void BinaryOpExpr::Swap(BinaryOpExpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BinaryOpExpr::InternalSwap(BinaryOpExpr* other) {
  std::swap(op_, other->op_);
  std::swap(left_expr_, other->left_expr_);
  std::swap(right_expr_, other->right_expr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BinaryOpExpr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BinaryOpExpr_descriptor_;
  metadata.reflection = BinaryOpExpr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BinaryOpExpr

// optional .BinaryOpExpr.Op op = 1;
void BinaryOpExpr::clear_op() {
  op_ = 0;
}
::BinaryOpExpr_Op BinaryOpExpr::op() const {
  // @@protoc_insertion_point(field_get:BinaryOpExpr.op)
  return static_cast< ::BinaryOpExpr_Op >(op_);
}
void BinaryOpExpr::set_op(::BinaryOpExpr_Op value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:BinaryOpExpr.op)
}

// optional .Expr left_expr = 2;
bool BinaryOpExpr::has_left_expr() const {
  return this != internal_default_instance() && left_expr_ != NULL;
}
void BinaryOpExpr::clear_left_expr() {
  if (GetArenaNoVirtual() == NULL && left_expr_ != NULL) delete left_expr_;
  left_expr_ = NULL;
}
const ::Expr& BinaryOpExpr::left_expr() const {
  // @@protoc_insertion_point(field_get:BinaryOpExpr.left_expr)
  return left_expr_ != NULL ? *left_expr_
                         : *::Expr::internal_default_instance();
}
::Expr* BinaryOpExpr::mutable_left_expr() {
  
  if (left_expr_ == NULL) {
    left_expr_ = new ::Expr;
  }
  // @@protoc_insertion_point(field_mutable:BinaryOpExpr.left_expr)
  return left_expr_;
}
::Expr* BinaryOpExpr::release_left_expr() {
  // @@protoc_insertion_point(field_release:BinaryOpExpr.left_expr)
  
  ::Expr* temp = left_expr_;
  left_expr_ = NULL;
  return temp;
}
void BinaryOpExpr::set_allocated_left_expr(::Expr* left_expr) {
  delete left_expr_;
  left_expr_ = left_expr;
  if (left_expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:BinaryOpExpr.left_expr)
}

// optional .Expr right_expr = 3;
bool BinaryOpExpr::has_right_expr() const {
  return this != internal_default_instance() && right_expr_ != NULL;
}
void BinaryOpExpr::clear_right_expr() {
  if (GetArenaNoVirtual() == NULL && right_expr_ != NULL) delete right_expr_;
  right_expr_ = NULL;
}
const ::Expr& BinaryOpExpr::right_expr() const {
  // @@protoc_insertion_point(field_get:BinaryOpExpr.right_expr)
  return right_expr_ != NULL ? *right_expr_
                         : *::Expr::internal_default_instance();
}
::Expr* BinaryOpExpr::mutable_right_expr() {
  
  if (right_expr_ == NULL) {
    right_expr_ = new ::Expr;
  }
  // @@protoc_insertion_point(field_mutable:BinaryOpExpr.right_expr)
  return right_expr_;
}
::Expr* BinaryOpExpr::release_right_expr() {
  // @@protoc_insertion_point(field_release:BinaryOpExpr.right_expr)
  
  ::Expr* temp = right_expr_;
  right_expr_ = NULL;
  return temp;
}
void BinaryOpExpr::set_allocated_right_expr(::Expr* right_expr) {
  delete right_expr_;
  right_expr_ = right_expr;
  if (right_expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:BinaryOpExpr.right_expr)
}

inline const BinaryOpExpr* BinaryOpExpr::internal_default_instance() {
  return &BinaryOpExpr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssignExpr::kDestExprFieldNumber;
const int AssignExpr::kValueExprFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssignExpr::AssignExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:AssignExpr)
}

void AssignExpr::InitAsDefaultInstance() {
  dest_expr_ = const_cast< ::Expr*>(
      ::Expr::internal_default_instance());
  value_expr_ = const_cast< ::Expr*>(
      ::Expr::internal_default_instance());
}

AssignExpr::AssignExpr(const AssignExpr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AssignExpr)
}

void AssignExpr::SharedCtor() {
  dest_expr_ = NULL;
  value_expr_ = NULL;
  _cached_size_ = 0;
}

AssignExpr::~AssignExpr() {
  // @@protoc_insertion_point(destructor:AssignExpr)
  SharedDtor();
}

void AssignExpr::SharedDtor() {
  if (this != &AssignExpr_default_instance_.get()) {
    delete dest_expr_;
    delete value_expr_;
  }
}

void AssignExpr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssignExpr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AssignExpr_descriptor_;
}

const AssignExpr& AssignExpr::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AssignExpr> AssignExpr_default_instance_;

AssignExpr* AssignExpr::New(::google::protobuf::Arena* arena) const {
  AssignExpr* n = new AssignExpr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AssignExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:AssignExpr)
  if (GetArenaNoVirtual() == NULL && dest_expr_ != NULL) delete dest_expr_;
  dest_expr_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_expr_ != NULL) delete value_expr_;
  value_expr_ = NULL;
}

bool AssignExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AssignExpr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Expr dest_expr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dest_expr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value_expr;
        break;
      }

      // optional .Expr value_expr = 2;
      case 2: {
        if (tag == 18) {
         parse_value_expr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value_expr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AssignExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AssignExpr)
  return false;
#undef DO_
}

void AssignExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AssignExpr)
  // optional .Expr dest_expr = 1;
  if (this->has_dest_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->dest_expr_, output);
  }

  // optional .Expr value_expr = 2;
  if (this->has_value_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_expr_, output);
  }

  // @@protoc_insertion_point(serialize_end:AssignExpr)
}

::google::protobuf::uint8* AssignExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AssignExpr)
  // optional .Expr dest_expr = 1;
  if (this->has_dest_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->dest_expr_, false, target);
  }

  // optional .Expr value_expr = 2;
  if (this->has_value_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->value_expr_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AssignExpr)
  return target;
}

size_t AssignExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AssignExpr)
  size_t total_size = 0;

  // optional .Expr dest_expr = 1;
  if (this->has_dest_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dest_expr_);
  }

  // optional .Expr value_expr = 2;
  if (this->has_value_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_expr_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssignExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AssignExpr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AssignExpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssignExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AssignExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AssignExpr)
    UnsafeMergeFrom(*source);
  }
}

void AssignExpr::MergeFrom(const AssignExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AssignExpr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AssignExpr::UnsafeMergeFrom(const AssignExpr& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_dest_expr()) {
    mutable_dest_expr()->::Expr::MergeFrom(from.dest_expr());
  }
  if (from.has_value_expr()) {
    mutable_value_expr()->::Expr::MergeFrom(from.value_expr());
  }
}

void AssignExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AssignExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssignExpr::CopyFrom(const AssignExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AssignExpr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AssignExpr::IsInitialized() const {

  return true;
}

void AssignExpr::Swap(AssignExpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssignExpr::InternalSwap(AssignExpr* other) {
  std::swap(dest_expr_, other->dest_expr_);
  std::swap(value_expr_, other->value_expr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AssignExpr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AssignExpr_descriptor_;
  metadata.reflection = AssignExpr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AssignExpr

// optional .Expr dest_expr = 1;
bool AssignExpr::has_dest_expr() const {
  return this != internal_default_instance() && dest_expr_ != NULL;
}
void AssignExpr::clear_dest_expr() {
  if (GetArenaNoVirtual() == NULL && dest_expr_ != NULL) delete dest_expr_;
  dest_expr_ = NULL;
}
const ::Expr& AssignExpr::dest_expr() const {
  // @@protoc_insertion_point(field_get:AssignExpr.dest_expr)
  return dest_expr_ != NULL ? *dest_expr_
                         : *::Expr::internal_default_instance();
}
::Expr* AssignExpr::mutable_dest_expr() {
  
  if (dest_expr_ == NULL) {
    dest_expr_ = new ::Expr;
  }
  // @@protoc_insertion_point(field_mutable:AssignExpr.dest_expr)
  return dest_expr_;
}
::Expr* AssignExpr::release_dest_expr() {
  // @@protoc_insertion_point(field_release:AssignExpr.dest_expr)
  
  ::Expr* temp = dest_expr_;
  dest_expr_ = NULL;
  return temp;
}
void AssignExpr::set_allocated_dest_expr(::Expr* dest_expr) {
  delete dest_expr_;
  dest_expr_ = dest_expr;
  if (dest_expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:AssignExpr.dest_expr)
}

// optional .Expr value_expr = 2;
bool AssignExpr::has_value_expr() const {
  return this != internal_default_instance() && value_expr_ != NULL;
}
void AssignExpr::clear_value_expr() {
  if (GetArenaNoVirtual() == NULL && value_expr_ != NULL) delete value_expr_;
  value_expr_ = NULL;
}
const ::Expr& AssignExpr::value_expr() const {
  // @@protoc_insertion_point(field_get:AssignExpr.value_expr)
  return value_expr_ != NULL ? *value_expr_
                         : *::Expr::internal_default_instance();
}
::Expr* AssignExpr::mutable_value_expr() {
  
  if (value_expr_ == NULL) {
    value_expr_ = new ::Expr;
  }
  // @@protoc_insertion_point(field_mutable:AssignExpr.value_expr)
  return value_expr_;
}
::Expr* AssignExpr::release_value_expr() {
  // @@protoc_insertion_point(field_release:AssignExpr.value_expr)
  
  ::Expr* temp = value_expr_;
  value_expr_ = NULL;
  return temp;
}
void AssignExpr::set_allocated_value_expr(::Expr* value_expr) {
  delete value_expr_;
  value_expr_ = value_expr;
  if (value_expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:AssignExpr.value_expr)
}

inline const AssignExpr* AssignExpr::internal_default_instance() {
  return &AssignExpr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expr::kConstantFieldNumber;
const int Expr::kVarFieldNumber;
const int Expr::kMemberFieldNumber;
const int Expr::kIndexFieldNumber;
const int Expr::kCallFieldNumber;
const int Expr::kUnaryOpFieldNumber;
const int Expr::kBinaryOpFieldNumber;
const int Expr::kAssignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expr::Expr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Expr)
}

void Expr::InitAsDefaultInstance() {
  Expr_default_oneof_instance_->constant_ = const_cast< ::ConstantExpr*>(
      ::ConstantExpr::internal_default_instance());
  Expr_default_oneof_instance_->var_ = const_cast< ::VarExpr*>(
      ::VarExpr::internal_default_instance());
  Expr_default_oneof_instance_->member_ = const_cast< ::MemberExpr*>(
      ::MemberExpr::internal_default_instance());
  Expr_default_oneof_instance_->index_ = const_cast< ::IndexExpr*>(
      ::IndexExpr::internal_default_instance());
  Expr_default_oneof_instance_->call_ = const_cast< ::CallExpr*>(
      ::CallExpr::internal_default_instance());
  Expr_default_oneof_instance_->unary_op_ = const_cast< ::UnaryOpExpr*>(
      ::UnaryOpExpr::internal_default_instance());
  Expr_default_oneof_instance_->binary_op_ = const_cast< ::BinaryOpExpr*>(
      ::BinaryOpExpr::internal_default_instance());
  Expr_default_oneof_instance_->assign_ = const_cast< ::AssignExpr*>(
      ::AssignExpr::internal_default_instance());
}

Expr::Expr(const Expr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Expr)
}

void Expr::SharedCtor() {
  clear_has_type();
  _cached_size_ = 0;
}

Expr::~Expr() {
  // @@protoc_insertion_point(destructor:Expr)
  SharedDtor();
}

void Expr::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void Expr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Expr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Expr_descriptor_;
}

const Expr& Expr::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Expr> Expr_default_instance_;

Expr* Expr::New(::google::protobuf::Arena* arena) const {
  Expr* n = new Expr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Expr::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:Expr)
  switch (type_case()) {
    case kConstant: {
      delete type_.constant_;
      break;
    }
    case kVar: {
      delete type_.var_;
      break;
    }
    case kMember: {
      delete type_.member_;
      break;
    }
    case kIndex: {
      delete type_.index_;
      break;
    }
    case kCall: {
      delete type_.call_;
      break;
    }
    case kUnaryOp: {
      delete type_.unary_op_;
      break;
    }
    case kBinaryOp: {
      delete type_.binary_op_;
      break;
    }
    case kAssign: {
      delete type_.assign_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void Expr::Clear() {
// @@protoc_insertion_point(message_clear_start:Expr)
  clear_type();
}

bool Expr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Expr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ConstantExpr constant = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_constant()));
        } else {
          goto handle_unusual;
        }
        goto after_assign;
        break;
      }

      // optional .VarExpr var = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_var()));
        } else {
          goto handle_unusual;
        }
        goto after_assign;
        break;
      }

      // optional .MemberExpr member = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_member()));
        } else {
          goto handle_unusual;
        }
        goto after_assign;
        break;
      }

      // optional .IndexExpr index = 4;
      case 4: {
        if (tag == 34) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        goto after_assign;
        break;
      }

      // optional .CallExpr call = 5;
      case 5: {
        if (tag == 42) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_call()));
        } else {
          goto handle_unusual;
        }
        goto after_assign;
        break;
      }

      // optional .UnaryOpExpr unary_op = 6;
      case 6: {
        if (tag == 50) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unary_op()));
        } else {
          goto handle_unusual;
        }
        goto after_assign;
        break;
      }

      // optional .BinaryOpExpr binary_op = 7;
      case 7: {
        if (tag == 58) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_binary_op()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_assign;
        break;
      }

      // optional .AssignExpr assign = 8;
      case 8: {
        if (tag == 66) {
         parse_assign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_assign()));
        } else {
          goto handle_unusual;
        }
       after_assign:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Expr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Expr)
  return false;
#undef DO_
}

void Expr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Expr)
  // optional .ConstantExpr constant = 1;
  if (has_constant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *type_.constant_, output);
  }

  // optional .VarExpr var = 2;
  if (has_var()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *type_.var_, output);
  }

  // optional .MemberExpr member = 3;
  if (has_member()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *type_.member_, output);
  }

  // optional .IndexExpr index = 4;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *type_.index_, output);
  }

  // optional .CallExpr call = 5;
  if (has_call()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *type_.call_, output);
  }

  // optional .UnaryOpExpr unary_op = 6;
  if (has_unary_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *type_.unary_op_, output);
  }

  // optional .BinaryOpExpr binary_op = 7;
  if (has_binary_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *type_.binary_op_, output);
  }

  // optional .AssignExpr assign = 8;
  if (has_assign()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *type_.assign_, output);
  }

  // @@protoc_insertion_point(serialize_end:Expr)
}

::google::protobuf::uint8* Expr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Expr)
  // optional .ConstantExpr constant = 1;
  if (has_constant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *type_.constant_, false, target);
  }

  // optional .VarExpr var = 2;
  if (has_var()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *type_.var_, false, target);
  }

  // optional .MemberExpr member = 3;
  if (has_member()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *type_.member_, false, target);
  }

  // optional .IndexExpr index = 4;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *type_.index_, false, target);
  }

  // optional .CallExpr call = 5;
  if (has_call()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *type_.call_, false, target);
  }

  // optional .UnaryOpExpr unary_op = 6;
  if (has_unary_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *type_.unary_op_, false, target);
  }

  // optional .BinaryOpExpr binary_op = 7;
  if (has_binary_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *type_.binary_op_, false, target);
  }

  // optional .AssignExpr assign = 8;
  if (has_assign()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *type_.assign_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Expr)
  return target;
}

size_t Expr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Expr)
  size_t total_size = 0;

  switch (type_case()) {
    // optional .ConstantExpr constant = 1;
    case kConstant: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.constant_);
      break;
    }
    // optional .VarExpr var = 2;
    case kVar: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.var_);
      break;
    }
    // optional .MemberExpr member = 3;
    case kMember: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.member_);
      break;
    }
    // optional .IndexExpr index = 4;
    case kIndex: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.index_);
      break;
    }
    // optional .CallExpr call = 5;
    case kCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.call_);
      break;
    }
    // optional .UnaryOpExpr unary_op = 6;
    case kUnaryOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.unary_op_);
      break;
    }
    // optional .BinaryOpExpr binary_op = 7;
    case kBinaryOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.binary_op_);
      break;
    }
    // optional .AssignExpr assign = 8;
    case kAssign: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.assign_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Expr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Expr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Expr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Expr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Expr)
    UnsafeMergeFrom(*source);
  }
}

void Expr::MergeFrom(const Expr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Expr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Expr::UnsafeMergeFrom(const Expr& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.type_case()) {
    case kConstant: {
      mutable_constant()->::ConstantExpr::MergeFrom(from.constant());
      break;
    }
    case kVar: {
      mutable_var()->::VarExpr::MergeFrom(from.var());
      break;
    }
    case kMember: {
      mutable_member()->::MemberExpr::MergeFrom(from.member());
      break;
    }
    case kIndex: {
      mutable_index()->::IndexExpr::MergeFrom(from.index());
      break;
    }
    case kCall: {
      mutable_call()->::CallExpr::MergeFrom(from.call());
      break;
    }
    case kUnaryOp: {
      mutable_unary_op()->::UnaryOpExpr::MergeFrom(from.unary_op());
      break;
    }
    case kBinaryOp: {
      mutable_binary_op()->::BinaryOpExpr::MergeFrom(from.binary_op());
      break;
    }
    case kAssign: {
      mutable_assign()->::AssignExpr::MergeFrom(from.assign());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void Expr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Expr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expr::CopyFrom(const Expr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Expr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Expr::IsInitialized() const {

  return true;
}

void Expr::Swap(Expr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expr::InternalSwap(Expr* other) {
  std::swap(type_, other->type_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Expr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Expr_descriptor_;
  metadata.reflection = Expr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Expr

// optional .ConstantExpr constant = 1;
bool Expr::has_constant() const {
  return type_case() == kConstant;
}
void Expr::set_has_constant() {
  _oneof_case_[0] = kConstant;
}
void Expr::clear_constant() {
  if (has_constant()) {
    delete type_.constant_;
    clear_has_type();
  }
}
 const ::ConstantExpr& Expr::constant() const {
  // @@protoc_insertion_point(field_get:Expr.constant)
  return has_constant()
      ? *type_.constant_
      : ::ConstantExpr::default_instance();
}
::ConstantExpr* Expr::mutable_constant() {
  if (!has_constant()) {
    clear_type();
    set_has_constant();
    type_.constant_ = new ::ConstantExpr;
  }
  // @@protoc_insertion_point(field_mutable:Expr.constant)
  return type_.constant_;
}
::ConstantExpr* Expr::release_constant() {
  // @@protoc_insertion_point(field_release:Expr.constant)
  if (has_constant()) {
    clear_has_type();
    ::ConstantExpr* temp = type_.constant_;
    type_.constant_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Expr::set_allocated_constant(::ConstantExpr* constant) {
  clear_type();
  if (constant) {
    set_has_constant();
    type_.constant_ = constant;
  }
  // @@protoc_insertion_point(field_set_allocated:Expr.constant)
}

// optional .VarExpr var = 2;
bool Expr::has_var() const {
  return type_case() == kVar;
}
void Expr::set_has_var() {
  _oneof_case_[0] = kVar;
}
void Expr::clear_var() {
  if (has_var()) {
    delete type_.var_;
    clear_has_type();
  }
}
 const ::VarExpr& Expr::var() const {
  // @@protoc_insertion_point(field_get:Expr.var)
  return has_var()
      ? *type_.var_
      : ::VarExpr::default_instance();
}
::VarExpr* Expr::mutable_var() {
  if (!has_var()) {
    clear_type();
    set_has_var();
    type_.var_ = new ::VarExpr;
  }
  // @@protoc_insertion_point(field_mutable:Expr.var)
  return type_.var_;
}
::VarExpr* Expr::release_var() {
  // @@protoc_insertion_point(field_release:Expr.var)
  if (has_var()) {
    clear_has_type();
    ::VarExpr* temp = type_.var_;
    type_.var_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Expr::set_allocated_var(::VarExpr* var) {
  clear_type();
  if (var) {
    set_has_var();
    type_.var_ = var;
  }
  // @@protoc_insertion_point(field_set_allocated:Expr.var)
}

// optional .MemberExpr member = 3;
bool Expr::has_member() const {
  return type_case() == kMember;
}
void Expr::set_has_member() {
  _oneof_case_[0] = kMember;
}
void Expr::clear_member() {
  if (has_member()) {
    delete type_.member_;
    clear_has_type();
  }
}
 const ::MemberExpr& Expr::member() const {
  // @@protoc_insertion_point(field_get:Expr.member)
  return has_member()
      ? *type_.member_
      : ::MemberExpr::default_instance();
}
::MemberExpr* Expr::mutable_member() {
  if (!has_member()) {
    clear_type();
    set_has_member();
    type_.member_ = new ::MemberExpr;
  }
  // @@protoc_insertion_point(field_mutable:Expr.member)
  return type_.member_;
}
::MemberExpr* Expr::release_member() {
  // @@protoc_insertion_point(field_release:Expr.member)
  if (has_member()) {
    clear_has_type();
    ::MemberExpr* temp = type_.member_;
    type_.member_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Expr::set_allocated_member(::MemberExpr* member) {
  clear_type();
  if (member) {
    set_has_member();
    type_.member_ = member;
  }
  // @@protoc_insertion_point(field_set_allocated:Expr.member)
}

// optional .IndexExpr index = 4;
bool Expr::has_index() const {
  return type_case() == kIndex;
}
void Expr::set_has_index() {
  _oneof_case_[0] = kIndex;
}
void Expr::clear_index() {
  if (has_index()) {
    delete type_.index_;
    clear_has_type();
  }
}
 const ::IndexExpr& Expr::index() const {
  // @@protoc_insertion_point(field_get:Expr.index)
  return has_index()
      ? *type_.index_
      : ::IndexExpr::default_instance();
}
::IndexExpr* Expr::mutable_index() {
  if (!has_index()) {
    clear_type();
    set_has_index();
    type_.index_ = new ::IndexExpr;
  }
  // @@protoc_insertion_point(field_mutable:Expr.index)
  return type_.index_;
}
::IndexExpr* Expr::release_index() {
  // @@protoc_insertion_point(field_release:Expr.index)
  if (has_index()) {
    clear_has_type();
    ::IndexExpr* temp = type_.index_;
    type_.index_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Expr::set_allocated_index(::IndexExpr* index) {
  clear_type();
  if (index) {
    set_has_index();
    type_.index_ = index;
  }
  // @@protoc_insertion_point(field_set_allocated:Expr.index)
}

// optional .CallExpr call = 5;
bool Expr::has_call() const {
  return type_case() == kCall;
}
void Expr::set_has_call() {
  _oneof_case_[0] = kCall;
}
void Expr::clear_call() {
  if (has_call()) {
    delete type_.call_;
    clear_has_type();
  }
}
 const ::CallExpr& Expr::call() const {
  // @@protoc_insertion_point(field_get:Expr.call)
  return has_call()
      ? *type_.call_
      : ::CallExpr::default_instance();
}
::CallExpr* Expr::mutable_call() {
  if (!has_call()) {
    clear_type();
    set_has_call();
    type_.call_ = new ::CallExpr;
  }
  // @@protoc_insertion_point(field_mutable:Expr.call)
  return type_.call_;
}
::CallExpr* Expr::release_call() {
  // @@protoc_insertion_point(field_release:Expr.call)
  if (has_call()) {
    clear_has_type();
    ::CallExpr* temp = type_.call_;
    type_.call_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Expr::set_allocated_call(::CallExpr* call) {
  clear_type();
  if (call) {
    set_has_call();
    type_.call_ = call;
  }
  // @@protoc_insertion_point(field_set_allocated:Expr.call)
}

// optional .UnaryOpExpr unary_op = 6;
bool Expr::has_unary_op() const {
  return type_case() == kUnaryOp;
}
void Expr::set_has_unary_op() {
  _oneof_case_[0] = kUnaryOp;
}
void Expr::clear_unary_op() {
  if (has_unary_op()) {
    delete type_.unary_op_;
    clear_has_type();
  }
}
 const ::UnaryOpExpr& Expr::unary_op() const {
  // @@protoc_insertion_point(field_get:Expr.unary_op)
  return has_unary_op()
      ? *type_.unary_op_
      : ::UnaryOpExpr::default_instance();
}
::UnaryOpExpr* Expr::mutable_unary_op() {
  if (!has_unary_op()) {
    clear_type();
    set_has_unary_op();
    type_.unary_op_ = new ::UnaryOpExpr;
  }
  // @@protoc_insertion_point(field_mutable:Expr.unary_op)
  return type_.unary_op_;
}
::UnaryOpExpr* Expr::release_unary_op() {
  // @@protoc_insertion_point(field_release:Expr.unary_op)
  if (has_unary_op()) {
    clear_has_type();
    ::UnaryOpExpr* temp = type_.unary_op_;
    type_.unary_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Expr::set_allocated_unary_op(::UnaryOpExpr* unary_op) {
  clear_type();
  if (unary_op) {
    set_has_unary_op();
    type_.unary_op_ = unary_op;
  }
  // @@protoc_insertion_point(field_set_allocated:Expr.unary_op)
}

// optional .BinaryOpExpr binary_op = 7;
bool Expr::has_binary_op() const {
  return type_case() == kBinaryOp;
}
void Expr::set_has_binary_op() {
  _oneof_case_[0] = kBinaryOp;
}
void Expr::clear_binary_op() {
  if (has_binary_op()) {
    delete type_.binary_op_;
    clear_has_type();
  }
}
 const ::BinaryOpExpr& Expr::binary_op() const {
  // @@protoc_insertion_point(field_get:Expr.binary_op)
  return has_binary_op()
      ? *type_.binary_op_
      : ::BinaryOpExpr::default_instance();
}
::BinaryOpExpr* Expr::mutable_binary_op() {
  if (!has_binary_op()) {
    clear_type();
    set_has_binary_op();
    type_.binary_op_ = new ::BinaryOpExpr;
  }
  // @@protoc_insertion_point(field_mutable:Expr.binary_op)
  return type_.binary_op_;
}
::BinaryOpExpr* Expr::release_binary_op() {
  // @@protoc_insertion_point(field_release:Expr.binary_op)
  if (has_binary_op()) {
    clear_has_type();
    ::BinaryOpExpr* temp = type_.binary_op_;
    type_.binary_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Expr::set_allocated_binary_op(::BinaryOpExpr* binary_op) {
  clear_type();
  if (binary_op) {
    set_has_binary_op();
    type_.binary_op_ = binary_op;
  }
  // @@protoc_insertion_point(field_set_allocated:Expr.binary_op)
}

// optional .AssignExpr assign = 8;
bool Expr::has_assign() const {
  return type_case() == kAssign;
}
void Expr::set_has_assign() {
  _oneof_case_[0] = kAssign;
}
void Expr::clear_assign() {
  if (has_assign()) {
    delete type_.assign_;
    clear_has_type();
  }
}
 const ::AssignExpr& Expr::assign() const {
  // @@protoc_insertion_point(field_get:Expr.assign)
  return has_assign()
      ? *type_.assign_
      : ::AssignExpr::default_instance();
}
::AssignExpr* Expr::mutable_assign() {
  if (!has_assign()) {
    clear_type();
    set_has_assign();
    type_.assign_ = new ::AssignExpr;
  }
  // @@protoc_insertion_point(field_mutable:Expr.assign)
  return type_.assign_;
}
::AssignExpr* Expr::release_assign() {
  // @@protoc_insertion_point(field_release:Expr.assign)
  if (has_assign()) {
    clear_has_type();
    ::AssignExpr* temp = type_.assign_;
    type_.assign_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Expr::set_allocated_assign(::AssignExpr* assign) {
  clear_type();
  if (assign) {
    set_has_assign();
    type_.assign_ = assign;
  }
  // @@protoc_insertion_point(field_set_allocated:Expr.assign)
}

bool Expr::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
void Expr::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
Expr::TypeCase Expr::type_case() const {
  return Expr::TypeCase(_oneof_case_[0]);
}
inline const Expr* Expr::internal_default_instance() {
  return &Expr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExprStmt::kExprFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExprStmt::ExprStmt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ExprStmt)
}

void ExprStmt::InitAsDefaultInstance() {
  expr_ = const_cast< ::Expr*>(
      ::Expr::internal_default_instance());
}

ExprStmt::ExprStmt(const ExprStmt& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ExprStmt)
}

void ExprStmt::SharedCtor() {
  expr_ = NULL;
  _cached_size_ = 0;
}

ExprStmt::~ExprStmt() {
  // @@protoc_insertion_point(destructor:ExprStmt)
  SharedDtor();
}

void ExprStmt::SharedDtor() {
  if (this != &ExprStmt_default_instance_.get()) {
    delete expr_;
  }
}

void ExprStmt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExprStmt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExprStmt_descriptor_;
}

const ExprStmt& ExprStmt::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ExprStmt> ExprStmt_default_instance_;

ExprStmt* ExprStmt::New(::google::protobuf::Arena* arena) const {
  ExprStmt* n = new ExprStmt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExprStmt::Clear() {
// @@protoc_insertion_point(message_clear_start:ExprStmt)
  if (GetArenaNoVirtual() == NULL && expr_ != NULL) delete expr_;
  expr_ = NULL;
}

bool ExprStmt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ExprStmt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Expr expr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_expr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ExprStmt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ExprStmt)
  return false;
#undef DO_
}

void ExprStmt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ExprStmt)
  // optional .Expr expr = 1;
  if (this->has_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->expr_, output);
  }

  // @@protoc_insertion_point(serialize_end:ExprStmt)
}

::google::protobuf::uint8* ExprStmt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ExprStmt)
  // optional .Expr expr = 1;
  if (this->has_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->expr_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ExprStmt)
  return target;
}

size_t ExprStmt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExprStmt)
  size_t total_size = 0;

  // optional .Expr expr = 1;
  if (this->has_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->expr_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExprStmt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExprStmt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExprStmt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExprStmt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExprStmt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExprStmt)
    UnsafeMergeFrom(*source);
  }
}

void ExprStmt::MergeFrom(const ExprStmt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExprStmt)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ExprStmt::UnsafeMergeFrom(const ExprStmt& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_expr()) {
    mutable_expr()->::Expr::MergeFrom(from.expr());
  }
}

void ExprStmt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExprStmt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExprStmt::CopyFrom(const ExprStmt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExprStmt)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ExprStmt::IsInitialized() const {

  return true;
}

void ExprStmt::Swap(ExprStmt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExprStmt::InternalSwap(ExprStmt* other) {
  std::swap(expr_, other->expr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExprStmt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExprStmt_descriptor_;
  metadata.reflection = ExprStmt_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExprStmt

// optional .Expr expr = 1;
bool ExprStmt::has_expr() const {
  return this != internal_default_instance() && expr_ != NULL;
}
void ExprStmt::clear_expr() {
  if (GetArenaNoVirtual() == NULL && expr_ != NULL) delete expr_;
  expr_ = NULL;
}
const ::Expr& ExprStmt::expr() const {
  // @@protoc_insertion_point(field_get:ExprStmt.expr)
  return expr_ != NULL ? *expr_
                         : *::Expr::internal_default_instance();
}
::Expr* ExprStmt::mutable_expr() {
  
  if (expr_ == NULL) {
    expr_ = new ::Expr;
  }
  // @@protoc_insertion_point(field_mutable:ExprStmt.expr)
  return expr_;
}
::Expr* ExprStmt::release_expr() {
  // @@protoc_insertion_point(field_release:ExprStmt.expr)
  
  ::Expr* temp = expr_;
  expr_ = NULL;
  return temp;
}
void ExprStmt::set_allocated_expr(::Expr* expr) {
  delete expr_;
  expr_ = expr;
  if (expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ExprStmt.expr)
}

inline const ExprStmt* ExprStmt::internal_default_instance() {
  return &ExprStmt_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetStmt::kExprFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetStmt::RetStmt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:RetStmt)
}

void RetStmt::InitAsDefaultInstance() {
  expr_ = const_cast< ::Expr*>(
      ::Expr::internal_default_instance());
}

RetStmt::RetStmt(const RetStmt& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RetStmt)
}

void RetStmt::SharedCtor() {
  expr_ = NULL;
  _cached_size_ = 0;
}

RetStmt::~RetStmt() {
  // @@protoc_insertion_point(destructor:RetStmt)
  SharedDtor();
}

void RetStmt::SharedDtor() {
  if (this != &RetStmt_default_instance_.get()) {
    delete expr_;
  }
}

void RetStmt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetStmt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetStmt_descriptor_;
}

const RetStmt& RetStmt::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RetStmt> RetStmt_default_instance_;

RetStmt* RetStmt::New(::google::protobuf::Arena* arena) const {
  RetStmt* n = new RetStmt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RetStmt::Clear() {
// @@protoc_insertion_point(message_clear_start:RetStmt)
  if (GetArenaNoVirtual() == NULL && expr_ != NULL) delete expr_;
  expr_ = NULL;
}

bool RetStmt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RetStmt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Expr expr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_expr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RetStmt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RetStmt)
  return false;
#undef DO_
}

void RetStmt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RetStmt)
  // optional .Expr expr = 1;
  if (this->has_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->expr_, output);
  }

  // @@protoc_insertion_point(serialize_end:RetStmt)
}

::google::protobuf::uint8* RetStmt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RetStmt)
  // optional .Expr expr = 1;
  if (this->has_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->expr_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RetStmt)
  return target;
}

size_t RetStmt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RetStmt)
  size_t total_size = 0;

  // optional .Expr expr = 1;
  if (this->has_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->expr_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetStmt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RetStmt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RetStmt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RetStmt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RetStmt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RetStmt)
    UnsafeMergeFrom(*source);
  }
}

void RetStmt::MergeFrom(const RetStmt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RetStmt)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RetStmt::UnsafeMergeFrom(const RetStmt& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_expr()) {
    mutable_expr()->::Expr::MergeFrom(from.expr());
  }
}

void RetStmt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RetStmt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetStmt::CopyFrom(const RetStmt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RetStmt)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RetStmt::IsInitialized() const {

  return true;
}

void RetStmt::Swap(RetStmt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetStmt::InternalSwap(RetStmt* other) {
  std::swap(expr_, other->expr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RetStmt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetStmt_descriptor_;
  metadata.reflection = RetStmt_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RetStmt

// optional .Expr expr = 1;
bool RetStmt::has_expr() const {
  return this != internal_default_instance() && expr_ != NULL;
}
void RetStmt::clear_expr() {
  if (GetArenaNoVirtual() == NULL && expr_ != NULL) delete expr_;
  expr_ = NULL;
}
const ::Expr& RetStmt::expr() const {
  // @@protoc_insertion_point(field_get:RetStmt.expr)
  return expr_ != NULL ? *expr_
                         : *::Expr::internal_default_instance();
}
::Expr* RetStmt::mutable_expr() {
  
  if (expr_ == NULL) {
    expr_ = new ::Expr;
  }
  // @@protoc_insertion_point(field_mutable:RetStmt.expr)
  return expr_;
}
::Expr* RetStmt::release_expr() {
  // @@protoc_insertion_point(field_release:RetStmt.expr)
  
  ::Expr* temp = expr_;
  expr_ = NULL;
  return temp;
}
void RetStmt::set_allocated_expr(::Expr* expr) {
  delete expr_;
  expr_ = expr;
  if (expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:RetStmt.expr)
}

inline const RetStmt* RetStmt::internal_default_instance() {
  return &RetStmt_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BrkStmt::BrkStmt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:BrkStmt)
}

void BrkStmt::InitAsDefaultInstance() {
}

BrkStmt::BrkStmt(const BrkStmt& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BrkStmt)
}

void BrkStmt::SharedCtor() {
  _cached_size_ = 0;
}

BrkStmt::~BrkStmt() {
  // @@protoc_insertion_point(destructor:BrkStmt)
  SharedDtor();
}

void BrkStmt::SharedDtor() {
}

void BrkStmt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BrkStmt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BrkStmt_descriptor_;
}

const BrkStmt& BrkStmt::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BrkStmt> BrkStmt_default_instance_;

BrkStmt* BrkStmt::New(::google::protobuf::Arena* arena) const {
  BrkStmt* n = new BrkStmt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BrkStmt::Clear() {
// @@protoc_insertion_point(message_clear_start:BrkStmt)
}

bool BrkStmt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BrkStmt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:BrkStmt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BrkStmt)
  return false;
#undef DO_
}

void BrkStmt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BrkStmt)
  // @@protoc_insertion_point(serialize_end:BrkStmt)
}

::google::protobuf::uint8* BrkStmt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BrkStmt)
  // @@protoc_insertion_point(serialize_to_array_end:BrkStmt)
  return target;
}

size_t BrkStmt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BrkStmt)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BrkStmt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BrkStmt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BrkStmt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BrkStmt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BrkStmt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BrkStmt)
    UnsafeMergeFrom(*source);
  }
}

void BrkStmt::MergeFrom(const BrkStmt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BrkStmt)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BrkStmt::UnsafeMergeFrom(const BrkStmt& from) {
  GOOGLE_DCHECK(&from != this);
}

void BrkStmt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BrkStmt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BrkStmt::CopyFrom(const BrkStmt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BrkStmt)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BrkStmt::IsInitialized() const {

  return true;
}

void BrkStmt::Swap(BrkStmt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BrkStmt::InternalSwap(BrkStmt* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BrkStmt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BrkStmt_descriptor_;
  metadata.reflection = BrkStmt_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BrkStmt

inline const BrkStmt* BrkStmt::internal_default_instance() {
  return &BrkStmt_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContStmt::ContStmt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ContStmt)
}

void ContStmt::InitAsDefaultInstance() {
}

ContStmt::ContStmt(const ContStmt& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ContStmt)
}

void ContStmt::SharedCtor() {
  _cached_size_ = 0;
}

ContStmt::~ContStmt() {
  // @@protoc_insertion_point(destructor:ContStmt)
  SharedDtor();
}

void ContStmt::SharedDtor() {
}

void ContStmt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContStmt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContStmt_descriptor_;
}

const ContStmt& ContStmt::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ContStmt> ContStmt_default_instance_;

ContStmt* ContStmt::New(::google::protobuf::Arena* arena) const {
  ContStmt* n = new ContStmt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContStmt::Clear() {
// @@protoc_insertion_point(message_clear_start:ContStmt)
}

bool ContStmt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ContStmt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:ContStmt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ContStmt)
  return false;
#undef DO_
}

void ContStmt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ContStmt)
  // @@protoc_insertion_point(serialize_end:ContStmt)
}

::google::protobuf::uint8* ContStmt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ContStmt)
  // @@protoc_insertion_point(serialize_to_array_end:ContStmt)
  return target;
}

size_t ContStmt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ContStmt)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContStmt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ContStmt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ContStmt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContStmt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ContStmt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ContStmt)
    UnsafeMergeFrom(*source);
  }
}

void ContStmt::MergeFrom(const ContStmt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ContStmt)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ContStmt::UnsafeMergeFrom(const ContStmt& from) {
  GOOGLE_DCHECK(&from != this);
}

void ContStmt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ContStmt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContStmt::CopyFrom(const ContStmt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ContStmt)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ContStmt::IsInitialized() const {

  return true;
}

void ContStmt::Swap(ContStmt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContStmt::InternalSwap(ContStmt* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContStmt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContStmt_descriptor_;
  metadata.reflection = ContStmt_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ContStmt

inline const ContStmt* ContStmt::internal_default_instance() {
  return &ContStmt_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CondStmt::kCondExprFieldNumber;
const int CondStmt::kTrueBlockFieldNumber;
const int CondStmt::kFalseBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CondStmt::CondStmt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CondStmt)
}

void CondStmt::InitAsDefaultInstance() {
  cond_expr_ = const_cast< ::Expr*>(
      ::Expr::internal_default_instance());
  true_block_ = const_cast< ::Block*>(
      ::Block::internal_default_instance());
  false_block_ = const_cast< ::Block*>(
      ::Block::internal_default_instance());
}

CondStmt::CondStmt(const CondStmt& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CondStmt)
}

void CondStmt::SharedCtor() {
  cond_expr_ = NULL;
  true_block_ = NULL;
  false_block_ = NULL;
  _cached_size_ = 0;
}

CondStmt::~CondStmt() {
  // @@protoc_insertion_point(destructor:CondStmt)
  SharedDtor();
}

void CondStmt::SharedDtor() {
  if (this != &CondStmt_default_instance_.get()) {
    delete cond_expr_;
    delete true_block_;
    delete false_block_;
  }
}

void CondStmt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CondStmt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CondStmt_descriptor_;
}

const CondStmt& CondStmt::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CondStmt> CondStmt_default_instance_;

CondStmt* CondStmt::New(::google::protobuf::Arena* arena) const {
  CondStmt* n = new CondStmt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CondStmt::Clear() {
// @@protoc_insertion_point(message_clear_start:CondStmt)
  if (GetArenaNoVirtual() == NULL && cond_expr_ != NULL) delete cond_expr_;
  cond_expr_ = NULL;
  if (GetArenaNoVirtual() == NULL && true_block_ != NULL) delete true_block_;
  true_block_ = NULL;
  if (GetArenaNoVirtual() == NULL && false_block_ != NULL) delete false_block_;
  false_block_ = NULL;
}

bool CondStmt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CondStmt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Expr cond_expr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cond_expr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_true_block;
        break;
      }

      // optional .Block true_block = 2;
      case 2: {
        if (tag == 18) {
         parse_true_block:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_true_block()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_false_block;
        break;
      }

      // optional .Block false_block = 3;
      case 3: {
        if (tag == 26) {
         parse_false_block:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_false_block()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CondStmt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CondStmt)
  return false;
#undef DO_
}

void CondStmt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CondStmt)
  // optional .Expr cond_expr = 1;
  if (this->has_cond_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->cond_expr_, output);
  }

  // optional .Block true_block = 2;
  if (this->has_true_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->true_block_, output);
  }

  // optional .Block false_block = 3;
  if (this->has_false_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->false_block_, output);
  }

  // @@protoc_insertion_point(serialize_end:CondStmt)
}

::google::protobuf::uint8* CondStmt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CondStmt)
  // optional .Expr cond_expr = 1;
  if (this->has_cond_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->cond_expr_, false, target);
  }

  // optional .Block true_block = 2;
  if (this->has_true_block()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->true_block_, false, target);
  }

  // optional .Block false_block = 3;
  if (this->has_false_block()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->false_block_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CondStmt)
  return target;
}

size_t CondStmt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CondStmt)
  size_t total_size = 0;

  // optional .Expr cond_expr = 1;
  if (this->has_cond_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cond_expr_);
  }

  // optional .Block true_block = 2;
  if (this->has_true_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->true_block_);
  }

  // optional .Block false_block = 3;
  if (this->has_false_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->false_block_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CondStmt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CondStmt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CondStmt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CondStmt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CondStmt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CondStmt)
    UnsafeMergeFrom(*source);
  }
}

void CondStmt::MergeFrom(const CondStmt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CondStmt)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CondStmt::UnsafeMergeFrom(const CondStmt& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_cond_expr()) {
    mutable_cond_expr()->::Expr::MergeFrom(from.cond_expr());
  }
  if (from.has_true_block()) {
    mutable_true_block()->::Block::MergeFrom(from.true_block());
  }
  if (from.has_false_block()) {
    mutable_false_block()->::Block::MergeFrom(from.false_block());
  }
}

void CondStmt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CondStmt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CondStmt::CopyFrom(const CondStmt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CondStmt)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CondStmt::IsInitialized() const {

  return true;
}

void CondStmt::Swap(CondStmt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CondStmt::InternalSwap(CondStmt* other) {
  std::swap(cond_expr_, other->cond_expr_);
  std::swap(true_block_, other->true_block_);
  std::swap(false_block_, other->false_block_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CondStmt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CondStmt_descriptor_;
  metadata.reflection = CondStmt_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CondStmt

// optional .Expr cond_expr = 1;
bool CondStmt::has_cond_expr() const {
  return this != internal_default_instance() && cond_expr_ != NULL;
}
void CondStmt::clear_cond_expr() {
  if (GetArenaNoVirtual() == NULL && cond_expr_ != NULL) delete cond_expr_;
  cond_expr_ = NULL;
}
const ::Expr& CondStmt::cond_expr() const {
  // @@protoc_insertion_point(field_get:CondStmt.cond_expr)
  return cond_expr_ != NULL ? *cond_expr_
                         : *::Expr::internal_default_instance();
}
::Expr* CondStmt::mutable_cond_expr() {
  
  if (cond_expr_ == NULL) {
    cond_expr_ = new ::Expr;
  }
  // @@protoc_insertion_point(field_mutable:CondStmt.cond_expr)
  return cond_expr_;
}
::Expr* CondStmt::release_cond_expr() {
  // @@protoc_insertion_point(field_release:CondStmt.cond_expr)
  
  ::Expr* temp = cond_expr_;
  cond_expr_ = NULL;
  return temp;
}
void CondStmt::set_allocated_cond_expr(::Expr* cond_expr) {
  delete cond_expr_;
  cond_expr_ = cond_expr;
  if (cond_expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CondStmt.cond_expr)
}

// optional .Block true_block = 2;
bool CondStmt::has_true_block() const {
  return this != internal_default_instance() && true_block_ != NULL;
}
void CondStmt::clear_true_block() {
  if (GetArenaNoVirtual() == NULL && true_block_ != NULL) delete true_block_;
  true_block_ = NULL;
}
const ::Block& CondStmt::true_block() const {
  // @@protoc_insertion_point(field_get:CondStmt.true_block)
  return true_block_ != NULL ? *true_block_
                         : *::Block::internal_default_instance();
}
::Block* CondStmt::mutable_true_block() {
  
  if (true_block_ == NULL) {
    true_block_ = new ::Block;
  }
  // @@protoc_insertion_point(field_mutable:CondStmt.true_block)
  return true_block_;
}
::Block* CondStmt::release_true_block() {
  // @@protoc_insertion_point(field_release:CondStmt.true_block)
  
  ::Block* temp = true_block_;
  true_block_ = NULL;
  return temp;
}
void CondStmt::set_allocated_true_block(::Block* true_block) {
  delete true_block_;
  true_block_ = true_block;
  if (true_block) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CondStmt.true_block)
}

// optional .Block false_block = 3;
bool CondStmt::has_false_block() const {
  return this != internal_default_instance() && false_block_ != NULL;
}
void CondStmt::clear_false_block() {
  if (GetArenaNoVirtual() == NULL && false_block_ != NULL) delete false_block_;
  false_block_ = NULL;
}
const ::Block& CondStmt::false_block() const {
  // @@protoc_insertion_point(field_get:CondStmt.false_block)
  return false_block_ != NULL ? *false_block_
                         : *::Block::internal_default_instance();
}
::Block* CondStmt::mutable_false_block() {
  
  if (false_block_ == NULL) {
    false_block_ = new ::Block;
  }
  // @@protoc_insertion_point(field_mutable:CondStmt.false_block)
  return false_block_;
}
::Block* CondStmt::release_false_block() {
  // @@protoc_insertion_point(field_release:CondStmt.false_block)
  
  ::Block* temp = false_block_;
  false_block_ = NULL;
  return temp;
}
void CondStmt::set_allocated_false_block(::Block* false_block) {
  delete false_block_;
  false_block_ = false_block;
  if (false_block) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CondStmt.false_block)
}

inline const CondStmt* CondStmt::internal_default_instance() {
  return &CondStmt_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CondLoopStmt::kCondExprFieldNumber;
const int CondLoopStmt::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CondLoopStmt::CondLoopStmt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CondLoopStmt)
}

void CondLoopStmt::InitAsDefaultInstance() {
  cond_expr_ = const_cast< ::Expr*>(
      ::Expr::internal_default_instance());
  block_ = const_cast< ::Block*>(
      ::Block::internal_default_instance());
}

CondLoopStmt::CondLoopStmt(const CondLoopStmt& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CondLoopStmt)
}

void CondLoopStmt::SharedCtor() {
  cond_expr_ = NULL;
  block_ = NULL;
  _cached_size_ = 0;
}

CondLoopStmt::~CondLoopStmt() {
  // @@protoc_insertion_point(destructor:CondLoopStmt)
  SharedDtor();
}

void CondLoopStmt::SharedDtor() {
  if (this != &CondLoopStmt_default_instance_.get()) {
    delete cond_expr_;
    delete block_;
  }
}

void CondLoopStmt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CondLoopStmt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CondLoopStmt_descriptor_;
}

const CondLoopStmt& CondLoopStmt::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CondLoopStmt> CondLoopStmt_default_instance_;

CondLoopStmt* CondLoopStmt::New(::google::protobuf::Arena* arena) const {
  CondLoopStmt* n = new CondLoopStmt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CondLoopStmt::Clear() {
// @@protoc_insertion_point(message_clear_start:CondLoopStmt)
  if (GetArenaNoVirtual() == NULL && cond_expr_ != NULL) delete cond_expr_;
  cond_expr_ = NULL;
  if (GetArenaNoVirtual() == NULL && block_ != NULL) delete block_;
  block_ = NULL;
}

bool CondLoopStmt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CondLoopStmt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Expr cond_expr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cond_expr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_block;
        break;
      }

      // optional .Block block = 2;
      case 2: {
        if (tag == 18) {
         parse_block:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_block()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CondLoopStmt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CondLoopStmt)
  return false;
#undef DO_
}

void CondLoopStmt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CondLoopStmt)
  // optional .Expr cond_expr = 1;
  if (this->has_cond_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->cond_expr_, output);
  }

  // optional .Block block = 2;
  if (this->has_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->block_, output);
  }

  // @@protoc_insertion_point(serialize_end:CondLoopStmt)
}

::google::protobuf::uint8* CondLoopStmt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CondLoopStmt)
  // optional .Expr cond_expr = 1;
  if (this->has_cond_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->cond_expr_, false, target);
  }

  // optional .Block block = 2;
  if (this->has_block()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->block_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CondLoopStmt)
  return target;
}

size_t CondLoopStmt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CondLoopStmt)
  size_t total_size = 0;

  // optional .Expr cond_expr = 1;
  if (this->has_cond_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cond_expr_);
  }

  // optional .Block block = 2;
  if (this->has_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->block_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CondLoopStmt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CondLoopStmt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CondLoopStmt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CondLoopStmt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CondLoopStmt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CondLoopStmt)
    UnsafeMergeFrom(*source);
  }
}

void CondLoopStmt::MergeFrom(const CondLoopStmt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CondLoopStmt)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CondLoopStmt::UnsafeMergeFrom(const CondLoopStmt& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_cond_expr()) {
    mutable_cond_expr()->::Expr::MergeFrom(from.cond_expr());
  }
  if (from.has_block()) {
    mutable_block()->::Block::MergeFrom(from.block());
  }
}

void CondLoopStmt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CondLoopStmt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CondLoopStmt::CopyFrom(const CondLoopStmt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CondLoopStmt)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CondLoopStmt::IsInitialized() const {

  return true;
}

void CondLoopStmt::Swap(CondLoopStmt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CondLoopStmt::InternalSwap(CondLoopStmt* other) {
  std::swap(cond_expr_, other->cond_expr_);
  std::swap(block_, other->block_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CondLoopStmt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CondLoopStmt_descriptor_;
  metadata.reflection = CondLoopStmt_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CondLoopStmt

// optional .Expr cond_expr = 1;
bool CondLoopStmt::has_cond_expr() const {
  return this != internal_default_instance() && cond_expr_ != NULL;
}
void CondLoopStmt::clear_cond_expr() {
  if (GetArenaNoVirtual() == NULL && cond_expr_ != NULL) delete cond_expr_;
  cond_expr_ = NULL;
}
const ::Expr& CondLoopStmt::cond_expr() const {
  // @@protoc_insertion_point(field_get:CondLoopStmt.cond_expr)
  return cond_expr_ != NULL ? *cond_expr_
                         : *::Expr::internal_default_instance();
}
::Expr* CondLoopStmt::mutable_cond_expr() {
  
  if (cond_expr_ == NULL) {
    cond_expr_ = new ::Expr;
  }
  // @@protoc_insertion_point(field_mutable:CondLoopStmt.cond_expr)
  return cond_expr_;
}
::Expr* CondLoopStmt::release_cond_expr() {
  // @@protoc_insertion_point(field_release:CondLoopStmt.cond_expr)
  
  ::Expr* temp = cond_expr_;
  cond_expr_ = NULL;
  return temp;
}
void CondLoopStmt::set_allocated_cond_expr(::Expr* cond_expr) {
  delete cond_expr_;
  cond_expr_ = cond_expr;
  if (cond_expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CondLoopStmt.cond_expr)
}

// optional .Block block = 2;
bool CondLoopStmt::has_block() const {
  return this != internal_default_instance() && block_ != NULL;
}
void CondLoopStmt::clear_block() {
  if (GetArenaNoVirtual() == NULL && block_ != NULL) delete block_;
  block_ = NULL;
}
const ::Block& CondLoopStmt::block() const {
  // @@protoc_insertion_point(field_get:CondLoopStmt.block)
  return block_ != NULL ? *block_
                         : *::Block::internal_default_instance();
}
::Block* CondLoopStmt::mutable_block() {
  
  if (block_ == NULL) {
    block_ = new ::Block;
  }
  // @@protoc_insertion_point(field_mutable:CondLoopStmt.block)
  return block_;
}
::Block* CondLoopStmt::release_block() {
  // @@protoc_insertion_point(field_release:CondLoopStmt.block)
  
  ::Block* temp = block_;
  block_ = NULL;
  return temp;
}
void CondLoopStmt::set_allocated_block(::Block* block) {
  delete block_;
  block_ = block;
  if (block) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CondLoopStmt.block)
}

inline const CondLoopStmt* CondLoopStmt::internal_default_instance() {
  return &CondLoopStmt_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* VarDeclStmt_Mode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VarDeclStmt_Mode_descriptor_;
}
bool VarDeclStmt_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VarDeclStmt_Mode VarDeclStmt::UNKNOWN;
const VarDeclStmt_Mode VarDeclStmt::OWN;
const VarDeclStmt_Mode VarDeclStmt::BORROW;
const VarDeclStmt_Mode VarDeclStmt::Mode_MIN;
const VarDeclStmt_Mode VarDeclStmt::Mode_MAX;
const int VarDeclStmt::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarDeclStmt::kNameFieldNumber;
const int VarDeclStmt::kTypeSpecFieldNumber;
const int VarDeclStmt::kModeFieldNumber;
const int VarDeclStmt::kInitExprFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarDeclStmt::VarDeclStmt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:VarDeclStmt)
}

void VarDeclStmt::InitAsDefaultInstance() {
  type_spec_ = const_cast< ::TypeSpec*>(
      ::TypeSpec::internal_default_instance());
  init_expr_ = const_cast< ::Expr*>(
      ::Expr::internal_default_instance());
}

VarDeclStmt::VarDeclStmt(const VarDeclStmt& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:VarDeclStmt)
}

void VarDeclStmt::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_spec_ = NULL;
  init_expr_ = NULL;
  mode_ = 0;
  _cached_size_ = 0;
}

VarDeclStmt::~VarDeclStmt() {
  // @@protoc_insertion_point(destructor:VarDeclStmt)
  SharedDtor();
}

void VarDeclStmt::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &VarDeclStmt_default_instance_.get()) {
    delete type_spec_;
    delete init_expr_;
  }
}

void VarDeclStmt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VarDeclStmt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VarDeclStmt_descriptor_;
}

const VarDeclStmt& VarDeclStmt::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<VarDeclStmt> VarDeclStmt_default_instance_;

VarDeclStmt* VarDeclStmt::New(::google::protobuf::Arena* arena) const {
  VarDeclStmt* n = new VarDeclStmt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarDeclStmt::Clear() {
// @@protoc_insertion_point(message_clear_start:VarDeclStmt)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) delete type_spec_;
  type_spec_ = NULL;
  mode_ = 0;
  if (GetArenaNoVirtual() == NULL && init_expr_ != NULL) delete init_expr_;
  init_expr_ = NULL;
}

bool VarDeclStmt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VarDeclStmt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "VarDeclStmt.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type_spec;
        break;
      }

      // optional .TypeSpec type_spec = 2;
      case 2: {
        if (tag == 18) {
         parse_type_spec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type_spec()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mode;
        break;
      }

      // optional .VarDeclStmt.Mode mode = 3;
      case 3: {
        if (tag == 24) {
         parse_mode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::VarDeclStmt_Mode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_init_expr;
        break;
      }

      // optional .Expr init_expr = 4;
      case 4: {
        if (tag == 34) {
         parse_init_expr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_init_expr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VarDeclStmt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VarDeclStmt)
  return false;
#undef DO_
}

void VarDeclStmt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VarDeclStmt)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "VarDeclStmt.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .TypeSpec type_spec = 2;
  if (this->has_type_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->type_spec_, output);
  }

  // optional .VarDeclStmt.Mode mode = 3;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->mode(), output);
  }

  // optional .Expr init_expr = 4;
  if (this->has_init_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->init_expr_, output);
  }

  // @@protoc_insertion_point(serialize_end:VarDeclStmt)
}

::google::protobuf::uint8* VarDeclStmt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VarDeclStmt)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "VarDeclStmt.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .TypeSpec type_spec = 2;
  if (this->has_type_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->type_spec_, false, target);
  }

  // optional .VarDeclStmt.Mode mode = 3;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->mode(), target);
  }

  // optional .Expr init_expr = 4;
  if (this->has_init_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->init_expr_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:VarDeclStmt)
  return target;
}

size_t VarDeclStmt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VarDeclStmt)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .TypeSpec type_spec = 2;
  if (this->has_type_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_spec_);
  }

  // optional .VarDeclStmt.Mode mode = 3;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  // optional .Expr init_expr = 4;
  if (this->has_init_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->init_expr_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarDeclStmt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VarDeclStmt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const VarDeclStmt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarDeclStmt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VarDeclStmt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VarDeclStmt)
    UnsafeMergeFrom(*source);
  }
}

void VarDeclStmt::MergeFrom(const VarDeclStmt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VarDeclStmt)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void VarDeclStmt::UnsafeMergeFrom(const VarDeclStmt& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type_spec()) {
    mutable_type_spec()->::TypeSpec::MergeFrom(from.type_spec());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.has_init_expr()) {
    mutable_init_expr()->::Expr::MergeFrom(from.init_expr());
  }
}

void VarDeclStmt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VarDeclStmt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarDeclStmt::CopyFrom(const VarDeclStmt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VarDeclStmt)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool VarDeclStmt::IsInitialized() const {

  return true;
}

void VarDeclStmt::Swap(VarDeclStmt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarDeclStmt::InternalSwap(VarDeclStmt* other) {
  name_.Swap(&other->name_);
  std::swap(type_spec_, other->type_spec_);
  std::swap(mode_, other->mode_);
  std::swap(init_expr_, other->init_expr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VarDeclStmt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VarDeclStmt_descriptor_;
  metadata.reflection = VarDeclStmt_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VarDeclStmt

// optional string name = 1;
void VarDeclStmt::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VarDeclStmt::name() const {
  // @@protoc_insertion_point(field_get:VarDeclStmt.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VarDeclStmt::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VarDeclStmt.name)
}
void VarDeclStmt::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VarDeclStmt.name)
}
void VarDeclStmt::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VarDeclStmt.name)
}
::std::string* VarDeclStmt::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:VarDeclStmt.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VarDeclStmt::release_name() {
  // @@protoc_insertion_point(field_release:VarDeclStmt.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VarDeclStmt::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:VarDeclStmt.name)
}

// optional .TypeSpec type_spec = 2;
bool VarDeclStmt::has_type_spec() const {
  return this != internal_default_instance() && type_spec_ != NULL;
}
void VarDeclStmt::clear_type_spec() {
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) delete type_spec_;
  type_spec_ = NULL;
}
const ::TypeSpec& VarDeclStmt::type_spec() const {
  // @@protoc_insertion_point(field_get:VarDeclStmt.type_spec)
  return type_spec_ != NULL ? *type_spec_
                         : *::TypeSpec::internal_default_instance();
}
::TypeSpec* VarDeclStmt::mutable_type_spec() {
  
  if (type_spec_ == NULL) {
    type_spec_ = new ::TypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:VarDeclStmt.type_spec)
  return type_spec_;
}
::TypeSpec* VarDeclStmt::release_type_spec() {
  // @@protoc_insertion_point(field_release:VarDeclStmt.type_spec)
  
  ::TypeSpec* temp = type_spec_;
  type_spec_ = NULL;
  return temp;
}
void VarDeclStmt::set_allocated_type_spec(::TypeSpec* type_spec) {
  delete type_spec_;
  type_spec_ = type_spec;
  if (type_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:VarDeclStmt.type_spec)
}

// optional .VarDeclStmt.Mode mode = 3;
void VarDeclStmt::clear_mode() {
  mode_ = 0;
}
::VarDeclStmt_Mode VarDeclStmt::mode() const {
  // @@protoc_insertion_point(field_get:VarDeclStmt.mode)
  return static_cast< ::VarDeclStmt_Mode >(mode_);
}
void VarDeclStmt::set_mode(::VarDeclStmt_Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:VarDeclStmt.mode)
}

// optional .Expr init_expr = 4;
bool VarDeclStmt::has_init_expr() const {
  return this != internal_default_instance() && init_expr_ != NULL;
}
void VarDeclStmt::clear_init_expr() {
  if (GetArenaNoVirtual() == NULL && init_expr_ != NULL) delete init_expr_;
  init_expr_ = NULL;
}
const ::Expr& VarDeclStmt::init_expr() const {
  // @@protoc_insertion_point(field_get:VarDeclStmt.init_expr)
  return init_expr_ != NULL ? *init_expr_
                         : *::Expr::internal_default_instance();
}
::Expr* VarDeclStmt::mutable_init_expr() {
  
  if (init_expr_ == NULL) {
    init_expr_ = new ::Expr;
  }
  // @@protoc_insertion_point(field_mutable:VarDeclStmt.init_expr)
  return init_expr_;
}
::Expr* VarDeclStmt::release_init_expr() {
  // @@protoc_insertion_point(field_release:VarDeclStmt.init_expr)
  
  ::Expr* temp = init_expr_;
  init_expr_ = NULL;
  return temp;
}
void VarDeclStmt::set_allocated_init_expr(::Expr* init_expr) {
  delete init_expr_;
  init_expr_ = init_expr;
  if (init_expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:VarDeclStmt.init_expr)
}

inline const VarDeclStmt* VarDeclStmt::internal_default_instance() {
  return &VarDeclStmt_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stmt::kExprFieldNumber;
const int Stmt::kRetFieldNumber;
const int Stmt::kBrkFieldNumber;
const int Stmt::kContFieldNumber;
const int Stmt::kCondFieldNumber;
const int Stmt::kCondLoopFieldNumber;
const int Stmt::kVarDeclFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stmt::Stmt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Stmt)
}

void Stmt::InitAsDefaultInstance() {
  Stmt_default_oneof_instance_->expr_ = const_cast< ::ExprStmt*>(
      ::ExprStmt::internal_default_instance());
  Stmt_default_oneof_instance_->ret_ = const_cast< ::RetStmt*>(
      ::RetStmt::internal_default_instance());
  Stmt_default_oneof_instance_->brk_ = const_cast< ::BrkStmt*>(
      ::BrkStmt::internal_default_instance());
  Stmt_default_oneof_instance_->cont_ = const_cast< ::ContStmt*>(
      ::ContStmt::internal_default_instance());
  Stmt_default_oneof_instance_->cond_ = const_cast< ::CondStmt*>(
      ::CondStmt::internal_default_instance());
  Stmt_default_oneof_instance_->cond_loop_ = const_cast< ::CondLoopStmt*>(
      ::CondLoopStmt::internal_default_instance());
  Stmt_default_oneof_instance_->var_decl_ = const_cast< ::VarDeclStmt*>(
      ::VarDeclStmt::internal_default_instance());
}

Stmt::Stmt(const Stmt& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Stmt)
}

void Stmt::SharedCtor() {
  clear_has_type();
  _cached_size_ = 0;
}

Stmt::~Stmt() {
  // @@protoc_insertion_point(destructor:Stmt)
  SharedDtor();
}

void Stmt::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void Stmt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stmt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Stmt_descriptor_;
}

const Stmt& Stmt::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Stmt> Stmt_default_instance_;

Stmt* Stmt::New(::google::protobuf::Arena* arena) const {
  Stmt* n = new Stmt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stmt::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:Stmt)
  switch (type_case()) {
    case kExpr: {
      delete type_.expr_;
      break;
    }
    case kRet: {
      delete type_.ret_;
      break;
    }
    case kBrk: {
      delete type_.brk_;
      break;
    }
    case kCont: {
      delete type_.cont_;
      break;
    }
    case kCond: {
      delete type_.cond_;
      break;
    }
    case kCondLoop: {
      delete type_.cond_loop_;
      break;
    }
    case kVarDecl: {
      delete type_.var_decl_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void Stmt::Clear() {
// @@protoc_insertion_point(message_clear_start:Stmt)
  clear_type();
}

bool Stmt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Stmt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ExprStmt expr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_expr()));
        } else {
          goto handle_unusual;
        }
        goto after_var_decl;
        break;
      }

      // optional .RetStmt ret = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ret()));
        } else {
          goto handle_unusual;
        }
        goto after_var_decl;
        break;
      }

      // optional .BrkStmt brk = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_brk()));
        } else {
          goto handle_unusual;
        }
        goto after_var_decl;
        break;
      }

      // optional .ContStmt cont = 4;
      case 4: {
        if (tag == 34) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cont()));
        } else {
          goto handle_unusual;
        }
        goto after_var_decl;
        break;
      }

      // optional .CondStmt cond = 5;
      case 5: {
        if (tag == 42) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cond()));
        } else {
          goto handle_unusual;
        }
        goto after_var_decl;
        break;
      }

      // optional .CondLoopStmt cond_loop = 6;
      case 6: {
        if (tag == 50) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cond_loop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_var_decl;
        break;
      }

      // optional .VarDeclStmt var_decl = 7;
      case 7: {
        if (tag == 58) {
         parse_var_decl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_var_decl()));
        } else {
          goto handle_unusual;
        }
       after_var_decl:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Stmt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Stmt)
  return false;
#undef DO_
}

void Stmt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Stmt)
  // optional .ExprStmt expr = 1;
  if (has_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *type_.expr_, output);
  }

  // optional .RetStmt ret = 2;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *type_.ret_, output);
  }

  // optional .BrkStmt brk = 3;
  if (has_brk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *type_.brk_, output);
  }

  // optional .ContStmt cont = 4;
  if (has_cont()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *type_.cont_, output);
  }

  // optional .CondStmt cond = 5;
  if (has_cond()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *type_.cond_, output);
  }

  // optional .CondLoopStmt cond_loop = 6;
  if (has_cond_loop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *type_.cond_loop_, output);
  }

  // optional .VarDeclStmt var_decl = 7;
  if (has_var_decl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *type_.var_decl_, output);
  }

  // @@protoc_insertion_point(serialize_end:Stmt)
}

::google::protobuf::uint8* Stmt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Stmt)
  // optional .ExprStmt expr = 1;
  if (has_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *type_.expr_, false, target);
  }

  // optional .RetStmt ret = 2;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *type_.ret_, false, target);
  }

  // optional .BrkStmt brk = 3;
  if (has_brk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *type_.brk_, false, target);
  }

  // optional .ContStmt cont = 4;
  if (has_cont()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *type_.cont_, false, target);
  }

  // optional .CondStmt cond = 5;
  if (has_cond()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *type_.cond_, false, target);
  }

  // optional .CondLoopStmt cond_loop = 6;
  if (has_cond_loop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *type_.cond_loop_, false, target);
  }

  // optional .VarDeclStmt var_decl = 7;
  if (has_var_decl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *type_.var_decl_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Stmt)
  return target;
}

size_t Stmt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Stmt)
  size_t total_size = 0;

  switch (type_case()) {
    // optional .ExprStmt expr = 1;
    case kExpr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.expr_);
      break;
    }
    // optional .RetStmt ret = 2;
    case kRet: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.ret_);
      break;
    }
    // optional .BrkStmt brk = 3;
    case kBrk: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.brk_);
      break;
    }
    // optional .ContStmt cont = 4;
    case kCont: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.cont_);
      break;
    }
    // optional .CondStmt cond = 5;
    case kCond: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.cond_);
      break;
    }
    // optional .CondLoopStmt cond_loop = 6;
    case kCondLoop: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.cond_loop_);
      break;
    }
    // optional .VarDeclStmt var_decl = 7;
    case kVarDecl: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.var_decl_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stmt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Stmt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Stmt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stmt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Stmt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Stmt)
    UnsafeMergeFrom(*source);
  }
}

void Stmt::MergeFrom(const Stmt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Stmt)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Stmt::UnsafeMergeFrom(const Stmt& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.type_case()) {
    case kExpr: {
      mutable_expr()->::ExprStmt::MergeFrom(from.expr());
      break;
    }
    case kRet: {
      mutable_ret()->::RetStmt::MergeFrom(from.ret());
      break;
    }
    case kBrk: {
      mutable_brk()->::BrkStmt::MergeFrom(from.brk());
      break;
    }
    case kCont: {
      mutable_cont()->::ContStmt::MergeFrom(from.cont());
      break;
    }
    case kCond: {
      mutable_cond()->::CondStmt::MergeFrom(from.cond());
      break;
    }
    case kCondLoop: {
      mutable_cond_loop()->::CondLoopStmt::MergeFrom(from.cond_loop());
      break;
    }
    case kVarDecl: {
      mutable_var_decl()->::VarDeclStmt::MergeFrom(from.var_decl());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void Stmt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Stmt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stmt::CopyFrom(const Stmt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Stmt)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Stmt::IsInitialized() const {

  return true;
}

void Stmt::Swap(Stmt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stmt::InternalSwap(Stmt* other) {
  std::swap(type_, other->type_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stmt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Stmt_descriptor_;
  metadata.reflection = Stmt_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Stmt

// optional .ExprStmt expr = 1;
bool Stmt::has_expr() const {
  return type_case() == kExpr;
}
void Stmt::set_has_expr() {
  _oneof_case_[0] = kExpr;
}
void Stmt::clear_expr() {
  if (has_expr()) {
    delete type_.expr_;
    clear_has_type();
  }
}
 const ::ExprStmt& Stmt::expr() const {
  // @@protoc_insertion_point(field_get:Stmt.expr)
  return has_expr()
      ? *type_.expr_
      : ::ExprStmt::default_instance();
}
::ExprStmt* Stmt::mutable_expr() {
  if (!has_expr()) {
    clear_type();
    set_has_expr();
    type_.expr_ = new ::ExprStmt;
  }
  // @@protoc_insertion_point(field_mutable:Stmt.expr)
  return type_.expr_;
}
::ExprStmt* Stmt::release_expr() {
  // @@protoc_insertion_point(field_release:Stmt.expr)
  if (has_expr()) {
    clear_has_type();
    ::ExprStmt* temp = type_.expr_;
    type_.expr_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Stmt::set_allocated_expr(::ExprStmt* expr) {
  clear_type();
  if (expr) {
    set_has_expr();
    type_.expr_ = expr;
  }
  // @@protoc_insertion_point(field_set_allocated:Stmt.expr)
}

// optional .RetStmt ret = 2;
bool Stmt::has_ret() const {
  return type_case() == kRet;
}
void Stmt::set_has_ret() {
  _oneof_case_[0] = kRet;
}
void Stmt::clear_ret() {
  if (has_ret()) {
    delete type_.ret_;
    clear_has_type();
  }
}
 const ::RetStmt& Stmt::ret() const {
  // @@protoc_insertion_point(field_get:Stmt.ret)
  return has_ret()
      ? *type_.ret_
      : ::RetStmt::default_instance();
}
::RetStmt* Stmt::mutable_ret() {
  if (!has_ret()) {
    clear_type();
    set_has_ret();
    type_.ret_ = new ::RetStmt;
  }
  // @@protoc_insertion_point(field_mutable:Stmt.ret)
  return type_.ret_;
}
::RetStmt* Stmt::release_ret() {
  // @@protoc_insertion_point(field_release:Stmt.ret)
  if (has_ret()) {
    clear_has_type();
    ::RetStmt* temp = type_.ret_;
    type_.ret_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Stmt::set_allocated_ret(::RetStmt* ret) {
  clear_type();
  if (ret) {
    set_has_ret();
    type_.ret_ = ret;
  }
  // @@protoc_insertion_point(field_set_allocated:Stmt.ret)
}

// optional .BrkStmt brk = 3;
bool Stmt::has_brk() const {
  return type_case() == kBrk;
}
void Stmt::set_has_brk() {
  _oneof_case_[0] = kBrk;
}
void Stmt::clear_brk() {
  if (has_brk()) {
    delete type_.brk_;
    clear_has_type();
  }
}
 const ::BrkStmt& Stmt::brk() const {
  // @@protoc_insertion_point(field_get:Stmt.brk)
  return has_brk()
      ? *type_.brk_
      : ::BrkStmt::default_instance();
}
::BrkStmt* Stmt::mutable_brk() {
  if (!has_brk()) {
    clear_type();
    set_has_brk();
    type_.brk_ = new ::BrkStmt;
  }
  // @@protoc_insertion_point(field_mutable:Stmt.brk)
  return type_.brk_;
}
::BrkStmt* Stmt::release_brk() {
  // @@protoc_insertion_point(field_release:Stmt.brk)
  if (has_brk()) {
    clear_has_type();
    ::BrkStmt* temp = type_.brk_;
    type_.brk_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Stmt::set_allocated_brk(::BrkStmt* brk) {
  clear_type();
  if (brk) {
    set_has_brk();
    type_.brk_ = brk;
  }
  // @@protoc_insertion_point(field_set_allocated:Stmt.brk)
}

// optional .ContStmt cont = 4;
bool Stmt::has_cont() const {
  return type_case() == kCont;
}
void Stmt::set_has_cont() {
  _oneof_case_[0] = kCont;
}
void Stmt::clear_cont() {
  if (has_cont()) {
    delete type_.cont_;
    clear_has_type();
  }
}
 const ::ContStmt& Stmt::cont() const {
  // @@protoc_insertion_point(field_get:Stmt.cont)
  return has_cont()
      ? *type_.cont_
      : ::ContStmt::default_instance();
}
::ContStmt* Stmt::mutable_cont() {
  if (!has_cont()) {
    clear_type();
    set_has_cont();
    type_.cont_ = new ::ContStmt;
  }
  // @@protoc_insertion_point(field_mutable:Stmt.cont)
  return type_.cont_;
}
::ContStmt* Stmt::release_cont() {
  // @@protoc_insertion_point(field_release:Stmt.cont)
  if (has_cont()) {
    clear_has_type();
    ::ContStmt* temp = type_.cont_;
    type_.cont_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Stmt::set_allocated_cont(::ContStmt* cont) {
  clear_type();
  if (cont) {
    set_has_cont();
    type_.cont_ = cont;
  }
  // @@protoc_insertion_point(field_set_allocated:Stmt.cont)
}

// optional .CondStmt cond = 5;
bool Stmt::has_cond() const {
  return type_case() == kCond;
}
void Stmt::set_has_cond() {
  _oneof_case_[0] = kCond;
}
void Stmt::clear_cond() {
  if (has_cond()) {
    delete type_.cond_;
    clear_has_type();
  }
}
 const ::CondStmt& Stmt::cond() const {
  // @@protoc_insertion_point(field_get:Stmt.cond)
  return has_cond()
      ? *type_.cond_
      : ::CondStmt::default_instance();
}
::CondStmt* Stmt::mutable_cond() {
  if (!has_cond()) {
    clear_type();
    set_has_cond();
    type_.cond_ = new ::CondStmt;
  }
  // @@protoc_insertion_point(field_mutable:Stmt.cond)
  return type_.cond_;
}
::CondStmt* Stmt::release_cond() {
  // @@protoc_insertion_point(field_release:Stmt.cond)
  if (has_cond()) {
    clear_has_type();
    ::CondStmt* temp = type_.cond_;
    type_.cond_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Stmt::set_allocated_cond(::CondStmt* cond) {
  clear_type();
  if (cond) {
    set_has_cond();
    type_.cond_ = cond;
  }
  // @@protoc_insertion_point(field_set_allocated:Stmt.cond)
}

// optional .CondLoopStmt cond_loop = 6;
bool Stmt::has_cond_loop() const {
  return type_case() == kCondLoop;
}
void Stmt::set_has_cond_loop() {
  _oneof_case_[0] = kCondLoop;
}
void Stmt::clear_cond_loop() {
  if (has_cond_loop()) {
    delete type_.cond_loop_;
    clear_has_type();
  }
}
 const ::CondLoopStmt& Stmt::cond_loop() const {
  // @@protoc_insertion_point(field_get:Stmt.cond_loop)
  return has_cond_loop()
      ? *type_.cond_loop_
      : ::CondLoopStmt::default_instance();
}
::CondLoopStmt* Stmt::mutable_cond_loop() {
  if (!has_cond_loop()) {
    clear_type();
    set_has_cond_loop();
    type_.cond_loop_ = new ::CondLoopStmt;
  }
  // @@protoc_insertion_point(field_mutable:Stmt.cond_loop)
  return type_.cond_loop_;
}
::CondLoopStmt* Stmt::release_cond_loop() {
  // @@protoc_insertion_point(field_release:Stmt.cond_loop)
  if (has_cond_loop()) {
    clear_has_type();
    ::CondLoopStmt* temp = type_.cond_loop_;
    type_.cond_loop_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Stmt::set_allocated_cond_loop(::CondLoopStmt* cond_loop) {
  clear_type();
  if (cond_loop) {
    set_has_cond_loop();
    type_.cond_loop_ = cond_loop;
  }
  // @@protoc_insertion_point(field_set_allocated:Stmt.cond_loop)
}

// optional .VarDeclStmt var_decl = 7;
bool Stmt::has_var_decl() const {
  return type_case() == kVarDecl;
}
void Stmt::set_has_var_decl() {
  _oneof_case_[0] = kVarDecl;
}
void Stmt::clear_var_decl() {
  if (has_var_decl()) {
    delete type_.var_decl_;
    clear_has_type();
  }
}
 const ::VarDeclStmt& Stmt::var_decl() const {
  // @@protoc_insertion_point(field_get:Stmt.var_decl)
  return has_var_decl()
      ? *type_.var_decl_
      : ::VarDeclStmt::default_instance();
}
::VarDeclStmt* Stmt::mutable_var_decl() {
  if (!has_var_decl()) {
    clear_type();
    set_has_var_decl();
    type_.var_decl_ = new ::VarDeclStmt;
  }
  // @@protoc_insertion_point(field_mutable:Stmt.var_decl)
  return type_.var_decl_;
}
::VarDeclStmt* Stmt::release_var_decl() {
  // @@protoc_insertion_point(field_release:Stmt.var_decl)
  if (has_var_decl()) {
    clear_has_type();
    ::VarDeclStmt* temp = type_.var_decl_;
    type_.var_decl_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Stmt::set_allocated_var_decl(::VarDeclStmt* var_decl) {
  clear_type();
  if (var_decl) {
    set_has_var_decl();
    type_.var_decl_ = var_decl;
  }
  // @@protoc_insertion_point(field_set_allocated:Stmt.var_decl)
}

bool Stmt::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
void Stmt::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
Stmt::TypeCase Stmt::type_case() const {
  return Stmt::TypeCase(_oneof_case_[0]);
}
inline const Stmt* Stmt::internal_default_instance() {
  return &Stmt_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Block::kStmtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Block::Block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Block)
}

void Block::InitAsDefaultInstance() {
}

Block::Block(const Block& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Block)
}

void Block::SharedCtor() {
  _cached_size_ = 0;
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:Block)
  SharedDtor();
}

void Block::SharedDtor() {
}

void Block::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Block::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Block_descriptor_;
}

const Block& Block::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Block> Block_default_instance_;

Block* Block::New(::google::protobuf::Arena* arena) const {
  Block* n = new Block;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:Block)
  stmts_.Clear();
}

bool Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Block)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Stmt stmts = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_stmts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_stmts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_stmts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Block)
  return false;
#undef DO_
}

void Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Block)
  // repeated .Stmt stmts = 1;
  for (unsigned int i = 0, n = this->stmts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->stmts(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Block)
}

::google::protobuf::uint8* Block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Block)
  // repeated .Stmt stmts = 1;
  for (unsigned int i = 0, n = this->stmts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->stmts(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Block)
  return target;
}

size_t Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Block)
  size_t total_size = 0;

  // repeated .Stmt stmts = 1;
  {
    unsigned int count = this->stmts_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stmts(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Block)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Block* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Block)
    UnsafeMergeFrom(*source);
  }
}

void Block::MergeFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Block)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Block::UnsafeMergeFrom(const Block& from) {
  GOOGLE_DCHECK(&from != this);
  stmts_.MergeFrom(from.stmts_);
}

void Block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Block)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Block::IsInitialized() const {

  return true;
}

void Block::Swap(Block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Block::InternalSwap(Block* other) {
  stmts_.UnsafeArenaSwap(&other->stmts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Block::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Block_descriptor_;
  metadata.reflection = Block_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Block

// repeated .Stmt stmts = 1;
int Block::stmts_size() const {
  return stmts_.size();
}
void Block::clear_stmts() {
  stmts_.Clear();
}
const ::Stmt& Block::stmts(int index) const {
  // @@protoc_insertion_point(field_get:Block.stmts)
  return stmts_.Get(index);
}
::Stmt* Block::mutable_stmts(int index) {
  // @@protoc_insertion_point(field_mutable:Block.stmts)
  return stmts_.Mutable(index);
}
::Stmt* Block::add_stmts() {
  // @@protoc_insertion_point(field_add:Block.stmts)
  return stmts_.Add();
}
::google::protobuf::RepeatedPtrField< ::Stmt >*
Block::mutable_stmts() {
  // @@protoc_insertion_point(field_mutable_list:Block.stmts)
  return &stmts_;
}
const ::google::protobuf::RepeatedPtrField< ::Stmt >&
Block::stmts() const {
  // @@protoc_insertion_point(field_list:Block.stmts)
  return stmts_;
}

inline const Block* Block::internal_default_instance() {
  return &Block_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* FuncParam_Mode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FuncParam_Mode_descriptor_;
}
bool FuncParam_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FuncParam_Mode FuncParam::UNKNOWN;
const FuncParam_Mode FuncParam::COPY;
const FuncParam_Mode FuncParam::BORROW;
const FuncParam_Mode FuncParam::MOVE;
const FuncParam_Mode FuncParam::Mode_MIN;
const FuncParam_Mode FuncParam::Mode_MAX;
const int FuncParam::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FuncParam::kNameFieldNumber;
const int FuncParam::kModeFieldNumber;
const int FuncParam::kTypeSpecFieldNumber;
const int FuncParam::kInitExprFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FuncParam::FuncParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:FuncParam)
}

void FuncParam::InitAsDefaultInstance() {
  type_spec_ = const_cast< ::TypeSpec*>(
      ::TypeSpec::internal_default_instance());
  init_expr_ = const_cast< ::Expr*>(
      ::Expr::internal_default_instance());
}

FuncParam::FuncParam(const FuncParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FuncParam)
}

void FuncParam::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_spec_ = NULL;
  init_expr_ = NULL;
  mode_ = 0;
  _cached_size_ = 0;
}

FuncParam::~FuncParam() {
  // @@protoc_insertion_point(destructor:FuncParam)
  SharedDtor();
}

void FuncParam::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &FuncParam_default_instance_.get()) {
    delete type_spec_;
    delete init_expr_;
  }
}

void FuncParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FuncParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FuncParam_descriptor_;
}

const FuncParam& FuncParam::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FuncParam> FuncParam_default_instance_;

FuncParam* FuncParam::New(::google::protobuf::Arena* arena) const {
  FuncParam* n = new FuncParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FuncParam::Clear() {
// @@protoc_insertion_point(message_clear_start:FuncParam)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0;
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) delete type_spec_;
  type_spec_ = NULL;
  if (GetArenaNoVirtual() == NULL && init_expr_ != NULL) delete init_expr_;
  init_expr_ = NULL;
}

bool FuncParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FuncParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FuncParam.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mode;
        break;
      }

      // optional .FuncParam.Mode mode = 2;
      case 2: {
        if (tag == 16) {
         parse_mode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::FuncParam_Mode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_type_spec;
        break;
      }

      // optional .TypeSpec type_spec = 3;
      case 3: {
        if (tag == 26) {
         parse_type_spec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type_spec()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_init_expr;
        break;
      }

      // optional .Expr init_expr = 4;
      case 4: {
        if (tag == 34) {
         parse_init_expr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_init_expr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FuncParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FuncParam)
  return false;
#undef DO_
}

void FuncParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FuncParam)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FuncParam.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .FuncParam.Mode mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }

  // optional .TypeSpec type_spec = 3;
  if (this->has_type_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->type_spec_, output);
  }

  // optional .Expr init_expr = 4;
  if (this->has_init_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->init_expr_, output);
  }

  // @@protoc_insertion_point(serialize_end:FuncParam)
}

::google::protobuf::uint8* FuncParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FuncParam)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FuncParam.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .FuncParam.Mode mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }

  // optional .TypeSpec type_spec = 3;
  if (this->has_type_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->type_spec_, false, target);
  }

  // optional .Expr init_expr = 4;
  if (this->has_init_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->init_expr_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:FuncParam)
  return target;
}

size_t FuncParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FuncParam)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .FuncParam.Mode mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  // optional .TypeSpec type_spec = 3;
  if (this->has_type_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_spec_);
  }

  // optional .Expr init_expr = 4;
  if (this->has_init_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->init_expr_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FuncParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FuncParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FuncParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FuncParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FuncParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FuncParam)
    UnsafeMergeFrom(*source);
  }
}

void FuncParam::MergeFrom(const FuncParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FuncParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FuncParam::UnsafeMergeFrom(const FuncParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.has_type_spec()) {
    mutable_type_spec()->::TypeSpec::MergeFrom(from.type_spec());
  }
  if (from.has_init_expr()) {
    mutable_init_expr()->::Expr::MergeFrom(from.init_expr());
  }
}

void FuncParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FuncParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FuncParam::CopyFrom(const FuncParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FuncParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FuncParam::IsInitialized() const {

  return true;
}

void FuncParam::Swap(FuncParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FuncParam::InternalSwap(FuncParam* other) {
  name_.Swap(&other->name_);
  std::swap(mode_, other->mode_);
  std::swap(type_spec_, other->type_spec_);
  std::swap(init_expr_, other->init_expr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FuncParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FuncParam_descriptor_;
  metadata.reflection = FuncParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FuncParam

// optional string name = 1;
void FuncParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FuncParam::name() const {
  // @@protoc_insertion_point(field_get:FuncParam.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FuncParam::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FuncParam.name)
}
void FuncParam::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FuncParam.name)
}
void FuncParam::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FuncParam.name)
}
::std::string* FuncParam::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:FuncParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FuncParam::release_name() {
  // @@protoc_insertion_point(field_release:FuncParam.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FuncParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:FuncParam.name)
}

// optional .FuncParam.Mode mode = 2;
void FuncParam::clear_mode() {
  mode_ = 0;
}
::FuncParam_Mode FuncParam::mode() const {
  // @@protoc_insertion_point(field_get:FuncParam.mode)
  return static_cast< ::FuncParam_Mode >(mode_);
}
void FuncParam::set_mode(::FuncParam_Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:FuncParam.mode)
}

// optional .TypeSpec type_spec = 3;
bool FuncParam::has_type_spec() const {
  return this != internal_default_instance() && type_spec_ != NULL;
}
void FuncParam::clear_type_spec() {
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) delete type_spec_;
  type_spec_ = NULL;
}
const ::TypeSpec& FuncParam::type_spec() const {
  // @@protoc_insertion_point(field_get:FuncParam.type_spec)
  return type_spec_ != NULL ? *type_spec_
                         : *::TypeSpec::internal_default_instance();
}
::TypeSpec* FuncParam::mutable_type_spec() {
  
  if (type_spec_ == NULL) {
    type_spec_ = new ::TypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:FuncParam.type_spec)
  return type_spec_;
}
::TypeSpec* FuncParam::release_type_spec() {
  // @@protoc_insertion_point(field_release:FuncParam.type_spec)
  
  ::TypeSpec* temp = type_spec_;
  type_spec_ = NULL;
  return temp;
}
void FuncParam::set_allocated_type_spec(::TypeSpec* type_spec) {
  delete type_spec_;
  type_spec_ = type_spec;
  if (type_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:FuncParam.type_spec)
}

// optional .Expr init_expr = 4;
bool FuncParam::has_init_expr() const {
  return this != internal_default_instance() && init_expr_ != NULL;
}
void FuncParam::clear_init_expr() {
  if (GetArenaNoVirtual() == NULL && init_expr_ != NULL) delete init_expr_;
  init_expr_ = NULL;
}
const ::Expr& FuncParam::init_expr() const {
  // @@protoc_insertion_point(field_get:FuncParam.init_expr)
  return init_expr_ != NULL ? *init_expr_
                         : *::Expr::internal_default_instance();
}
::Expr* FuncParam::mutable_init_expr() {
  
  if (init_expr_ == NULL) {
    init_expr_ = new ::Expr;
  }
  // @@protoc_insertion_point(field_mutable:FuncParam.init_expr)
  return init_expr_;
}
::Expr* FuncParam::release_init_expr() {
  // @@protoc_insertion_point(field_release:FuncParam.init_expr)
  
  ::Expr* temp = init_expr_;
  init_expr_ = NULL;
  return temp;
}
void FuncParam::set_allocated_init_expr(::Expr* init_expr) {
  delete init_expr_;
  init_expr_ = init_expr;
  if (init_expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:FuncParam.init_expr)
}

inline const FuncParam* FuncParam::internal_default_instance() {
  return &FuncParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Func_ReturnMode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Func_ReturnMode_descriptor_;
}
bool Func_ReturnMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Func_ReturnMode Func::UNKNOWN;
const Func_ReturnMode Func::COPY;
const Func_ReturnMode Func::BORROW;
const Func_ReturnMode Func::MOVE;
const Func_ReturnMode Func::ReturnMode_MIN;
const Func_ReturnMode Func::ReturnMode_MAX;
const int Func::ReturnMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Func_CC_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Func_CC_descriptor_;
}
bool Func_CC_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Func_CC Func::DEFAULT;
const Func_CC Func::C;
const Func_CC Func::CC_MIN;
const Func_CC Func::CC_MAX;
const int Func::CC_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Func::kNameFieldNumber;
const int Func::kTypeParamsFieldNumber;
const int Func::kParamsFieldNumber;
const int Func::kReturnTypeSpecFieldNumber;
const int Func::kReturnModeFieldNumber;
const int Func::kCcFieldNumber;
const int Func::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Func::Func()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Func)
}

void Func::InitAsDefaultInstance() {
  return_type_spec_ = const_cast< ::TypeSpec*>(
      ::TypeSpec::internal_default_instance());
  block_ = const_cast< ::Block*>(
      ::Block::internal_default_instance());
}

Func::Func(const Func& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Func)
}

void Func::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_type_spec_ = NULL;
  block_ = NULL;
  ::memset(&return_mode_, 0, reinterpret_cast<char*>(&cc_) -
    reinterpret_cast<char*>(&return_mode_) + sizeof(cc_));
  _cached_size_ = 0;
}

Func::~Func() {
  // @@protoc_insertion_point(destructor:Func)
  SharedDtor();
}

void Func::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &Func_default_instance_.get()) {
    delete return_type_spec_;
    delete block_;
  }
}

void Func::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Func::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Func_descriptor_;
}

const Func& Func::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Func> Func_default_instance_;

Func* Func::New(::google::protobuf::Arena* arena) const {
  Func* n = new Func;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Func::Clear() {
// @@protoc_insertion_point(message_clear_start:Func)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Func, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Func*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(return_mode_, cc_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && return_type_spec_ != NULL) delete return_type_spec_;
  return_type_spec_ = NULL;
  if (GetArenaNoVirtual() == NULL && block_ != NULL) delete block_;
  block_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  type_params_.Clear();
  params_.Clear();
}

bool Func::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Func)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Func.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type_params;
        break;
      }

      // repeated string type_params = 2;
      case 2: {
        if (tag == 18) {
         parse_type_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_type_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_params(this->type_params_size() - 1).data(),
            this->type_params(this->type_params_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Func.type_params"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type_params;
        if (input->ExpectTag(26)) goto parse_params;
        break;
      }

      // repeated .FuncParam params = 3;
      case 3: {
        if (tag == 26) {
         parse_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_return_type_spec;
        break;
      }

      // optional .TypeSpec return_type_spec = 4;
      case 4: {
        if (tag == 34) {
         parse_return_type_spec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_return_type_spec()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_return_mode;
        break;
      }

      // optional .Func.ReturnMode return_mode = 5;
      case 5: {
        if (tag == 40) {
         parse_return_mode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_return_mode(static_cast< ::Func_ReturnMode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_cc;
        break;
      }

      // optional .Func.CC cc = 6;
      case 6: {
        if (tag == 48) {
         parse_cc:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cc(static_cast< ::Func_CC >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_block;
        break;
      }

      // optional .Block block = 7;
      case 7: {
        if (tag == 58) {
         parse_block:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_block()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Func)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Func)
  return false;
#undef DO_
}

void Func::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Func)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Func.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string type_params = 2;
  for (int i = 0; i < this->type_params_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_params(i).data(), this->type_params(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Func.type_params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->type_params(i), output);
  }

  // repeated .FuncParam params = 3;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->params(i), output);
  }

  // optional .TypeSpec return_type_spec = 4;
  if (this->has_return_type_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->return_type_spec_, output);
  }

  // optional .Func.ReturnMode return_mode = 5;
  if (this->return_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->return_mode(), output);
  }

  // optional .Func.CC cc = 6;
  if (this->cc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->cc(), output);
  }

  // optional .Block block = 7;
  if (this->has_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->block_, output);
  }

  // @@protoc_insertion_point(serialize_end:Func)
}

::google::protobuf::uint8* Func::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Func)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Func.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string type_params = 2;
  for (int i = 0; i < this->type_params_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_params(i).data(), this->type_params(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Func.type_params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->type_params(i), target);
  }

  // repeated .FuncParam params = 3;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->params(i), false, target);
  }

  // optional .TypeSpec return_type_spec = 4;
  if (this->has_return_type_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->return_type_spec_, false, target);
  }

  // optional .Func.ReturnMode return_mode = 5;
  if (this->return_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->return_mode(), target);
  }

  // optional .Func.CC cc = 6;
  if (this->cc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->cc(), target);
  }

  // optional .Block block = 7;
  if (this->has_block()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->block_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Func)
  return target;
}

size_t Func::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Func)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .TypeSpec return_type_spec = 4;
  if (this->has_return_type_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->return_type_spec_);
  }

  // optional .Func.ReturnMode return_mode = 5;
  if (this->return_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->return_mode());
  }

  // optional .Func.CC cc = 6;
  if (this->cc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cc());
  }

  // optional .Block block = 7;
  if (this->has_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->block_);
  }

  // repeated string type_params = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->type_params_size());
  for (int i = 0; i < this->type_params_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->type_params(i));
  }

  // repeated .FuncParam params = 3;
  {
    unsigned int count = this->params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Func::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Func)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Func* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Func>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Func)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Func)
    UnsafeMergeFrom(*source);
  }
}

void Func::MergeFrom(const Func& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Func)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Func::UnsafeMergeFrom(const Func& from) {
  GOOGLE_DCHECK(&from != this);
  type_params_.UnsafeMergeFrom(from.type_params_);
  params_.MergeFrom(from.params_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_return_type_spec()) {
    mutable_return_type_spec()->::TypeSpec::MergeFrom(from.return_type_spec());
  }
  if (from.return_mode() != 0) {
    set_return_mode(from.return_mode());
  }
  if (from.cc() != 0) {
    set_cc(from.cc());
  }
  if (from.has_block()) {
    mutable_block()->::Block::MergeFrom(from.block());
  }
}

void Func::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Func)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Func::CopyFrom(const Func& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Func)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Func::IsInitialized() const {

  return true;
}

void Func::Swap(Func* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Func::InternalSwap(Func* other) {
  name_.Swap(&other->name_);
  type_params_.UnsafeArenaSwap(&other->type_params_);
  params_.UnsafeArenaSwap(&other->params_);
  std::swap(return_type_spec_, other->return_type_spec_);
  std::swap(return_mode_, other->return_mode_);
  std::swap(cc_, other->cc_);
  std::swap(block_, other->block_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Func::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Func_descriptor_;
  metadata.reflection = Func_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Func

// optional string name = 1;
void Func::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Func::name() const {
  // @@protoc_insertion_point(field_get:Func.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Func::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Func.name)
}
void Func::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Func.name)
}
void Func::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Func.name)
}
::std::string* Func::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Func.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Func::release_name() {
  // @@protoc_insertion_point(field_release:Func.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Func::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Func.name)
}

// repeated string type_params = 2;
int Func::type_params_size() const {
  return type_params_.size();
}
void Func::clear_type_params() {
  type_params_.Clear();
}
const ::std::string& Func::type_params(int index) const {
  // @@protoc_insertion_point(field_get:Func.type_params)
  return type_params_.Get(index);
}
::std::string* Func::mutable_type_params(int index) {
  // @@protoc_insertion_point(field_mutable:Func.type_params)
  return type_params_.Mutable(index);
}
void Func::set_type_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Func.type_params)
  type_params_.Mutable(index)->assign(value);
}
void Func::set_type_params(int index, const char* value) {
  type_params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Func.type_params)
}
void Func::set_type_params(int index, const char* value, size_t size) {
  type_params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Func.type_params)
}
::std::string* Func::add_type_params() {
  // @@protoc_insertion_point(field_add_mutable:Func.type_params)
  return type_params_.Add();
}
void Func::add_type_params(const ::std::string& value) {
  type_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Func.type_params)
}
void Func::add_type_params(const char* value) {
  type_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Func.type_params)
}
void Func::add_type_params(const char* value, size_t size) {
  type_params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Func.type_params)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Func::type_params() const {
  // @@protoc_insertion_point(field_list:Func.type_params)
  return type_params_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Func::mutable_type_params() {
  // @@protoc_insertion_point(field_mutable_list:Func.type_params)
  return &type_params_;
}

// repeated .FuncParam params = 3;
int Func::params_size() const {
  return params_.size();
}
void Func::clear_params() {
  params_.Clear();
}
const ::FuncParam& Func::params(int index) const {
  // @@protoc_insertion_point(field_get:Func.params)
  return params_.Get(index);
}
::FuncParam* Func::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:Func.params)
  return params_.Mutable(index);
}
::FuncParam* Func::add_params() {
  // @@protoc_insertion_point(field_add:Func.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::FuncParam >*
Func::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:Func.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::FuncParam >&
Func::params() const {
  // @@protoc_insertion_point(field_list:Func.params)
  return params_;
}

// optional .TypeSpec return_type_spec = 4;
bool Func::has_return_type_spec() const {
  return this != internal_default_instance() && return_type_spec_ != NULL;
}
void Func::clear_return_type_spec() {
  if (GetArenaNoVirtual() == NULL && return_type_spec_ != NULL) delete return_type_spec_;
  return_type_spec_ = NULL;
}
const ::TypeSpec& Func::return_type_spec() const {
  // @@protoc_insertion_point(field_get:Func.return_type_spec)
  return return_type_spec_ != NULL ? *return_type_spec_
                         : *::TypeSpec::internal_default_instance();
}
::TypeSpec* Func::mutable_return_type_spec() {
  
  if (return_type_spec_ == NULL) {
    return_type_spec_ = new ::TypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:Func.return_type_spec)
  return return_type_spec_;
}
::TypeSpec* Func::release_return_type_spec() {
  // @@protoc_insertion_point(field_release:Func.return_type_spec)
  
  ::TypeSpec* temp = return_type_spec_;
  return_type_spec_ = NULL;
  return temp;
}
void Func::set_allocated_return_type_spec(::TypeSpec* return_type_spec) {
  delete return_type_spec_;
  return_type_spec_ = return_type_spec;
  if (return_type_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Func.return_type_spec)
}

// optional .Func.ReturnMode return_mode = 5;
void Func::clear_return_mode() {
  return_mode_ = 0;
}
::Func_ReturnMode Func::return_mode() const {
  // @@protoc_insertion_point(field_get:Func.return_mode)
  return static_cast< ::Func_ReturnMode >(return_mode_);
}
void Func::set_return_mode(::Func_ReturnMode value) {
  
  return_mode_ = value;
  // @@protoc_insertion_point(field_set:Func.return_mode)
}

// optional .Func.CC cc = 6;
void Func::clear_cc() {
  cc_ = 0;
}
::Func_CC Func::cc() const {
  // @@protoc_insertion_point(field_get:Func.cc)
  return static_cast< ::Func_CC >(cc_);
}
void Func::set_cc(::Func_CC value) {
  
  cc_ = value;
  // @@protoc_insertion_point(field_set:Func.cc)
}

// optional .Block block = 7;
bool Func::has_block() const {
  return this != internal_default_instance() && block_ != NULL;
}
void Func::clear_block() {
  if (GetArenaNoVirtual() == NULL && block_ != NULL) delete block_;
  block_ = NULL;
}
const ::Block& Func::block() const {
  // @@protoc_insertion_point(field_get:Func.block)
  return block_ != NULL ? *block_
                         : *::Block::internal_default_instance();
}
::Block* Func::mutable_block() {
  
  if (block_ == NULL) {
    block_ = new ::Block;
  }
  // @@protoc_insertion_point(field_mutable:Func.block)
  return block_;
}
::Block* Func::release_block() {
  // @@protoc_insertion_point(field_release:Func.block)
  
  ::Block* temp = block_;
  block_ = NULL;
  return temp;
}
void Func::set_allocated_block(::Block* block) {
  delete block_;
  block_ = block;
  if (block) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Func.block)
}

inline const Func* Func::internal_default_instance() {
  return &Func_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExternFunc::kNameFieldNumber;
const int ExternFunc::kParamsFieldNumber;
const int ExternFunc::kReturnTypeSpecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExternFunc::ExternFunc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ExternFunc)
}

void ExternFunc::InitAsDefaultInstance() {
  return_type_spec_ = const_cast< ::TypeSpec*>(
      ::TypeSpec::internal_default_instance());
}

ExternFunc::ExternFunc(const ExternFunc& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ExternFunc)
}

void ExternFunc::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_type_spec_ = NULL;
  _cached_size_ = 0;
}

ExternFunc::~ExternFunc() {
  // @@protoc_insertion_point(destructor:ExternFunc)
  SharedDtor();
}

void ExternFunc::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ExternFunc_default_instance_.get()) {
    delete return_type_spec_;
  }
}

void ExternFunc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternFunc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExternFunc_descriptor_;
}

const ExternFunc& ExternFunc::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ExternFunc> ExternFunc_default_instance_;

ExternFunc* ExternFunc::New(::google::protobuf::Arena* arena) const {
  ExternFunc* n = new ExternFunc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExternFunc::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternFunc)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && return_type_spec_ != NULL) delete return_type_spec_;
  return_type_spec_ = NULL;
  params_.Clear();
}

bool ExternFunc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ExternFunc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ExternFunc.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_params;
        break;
      }

      // repeated .FuncParam params = 2;
      case 2: {
        if (tag == 18) {
         parse_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_return_type_spec;
        break;
      }

      // optional .TypeSpec return_type_spec = 3;
      case 3: {
        if (tag == 26) {
         parse_return_type_spec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_return_type_spec()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ExternFunc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ExternFunc)
  return false;
#undef DO_
}

void ExternFunc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ExternFunc)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ExternFunc.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .FuncParam params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->params(i), output);
  }

  // optional .TypeSpec return_type_spec = 3;
  if (this->has_return_type_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->return_type_spec_, output);
  }

  // @@protoc_insertion_point(serialize_end:ExternFunc)
}

::google::protobuf::uint8* ExternFunc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ExternFunc)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ExternFunc.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .FuncParam params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->params(i), false, target);
  }

  // optional .TypeSpec return_type_spec = 3;
  if (this->has_return_type_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->return_type_spec_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ExternFunc)
  return target;
}

size_t ExternFunc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternFunc)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .TypeSpec return_type_spec = 3;
  if (this->has_return_type_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->return_type_spec_);
  }

  // repeated .FuncParam params = 2;
  {
    unsigned int count = this->params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternFunc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternFunc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExternFunc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExternFunc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternFunc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternFunc)
    UnsafeMergeFrom(*source);
  }
}

void ExternFunc::MergeFrom(const ExternFunc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternFunc)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ExternFunc::UnsafeMergeFrom(const ExternFunc& from) {
  GOOGLE_DCHECK(&from != this);
  params_.MergeFrom(from.params_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_return_type_spec()) {
    mutable_return_type_spec()->::TypeSpec::MergeFrom(from.return_type_spec());
  }
}

void ExternFunc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternFunc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternFunc::CopyFrom(const ExternFunc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternFunc)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ExternFunc::IsInitialized() const {

  return true;
}

void ExternFunc::Swap(ExternFunc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExternFunc::InternalSwap(ExternFunc* other) {
  name_.Swap(&other->name_);
  params_.UnsafeArenaSwap(&other->params_);
  std::swap(return_type_spec_, other->return_type_spec_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExternFunc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExternFunc_descriptor_;
  metadata.reflection = ExternFunc_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExternFunc

// optional string name = 1;
void ExternFunc::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExternFunc::name() const {
  // @@protoc_insertion_point(field_get:ExternFunc.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternFunc::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ExternFunc.name)
}
void ExternFunc::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ExternFunc.name)
}
void ExternFunc::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ExternFunc.name)
}
::std::string* ExternFunc::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ExternFunc.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExternFunc::release_name() {
  // @@protoc_insertion_point(field_release:ExternFunc.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExternFunc::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ExternFunc.name)
}

// repeated .FuncParam params = 2;
int ExternFunc::params_size() const {
  return params_.size();
}
void ExternFunc::clear_params() {
  params_.Clear();
}
const ::FuncParam& ExternFunc::params(int index) const {
  // @@protoc_insertion_point(field_get:ExternFunc.params)
  return params_.Get(index);
}
::FuncParam* ExternFunc::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:ExternFunc.params)
  return params_.Mutable(index);
}
::FuncParam* ExternFunc::add_params() {
  // @@protoc_insertion_point(field_add:ExternFunc.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::FuncParam >*
ExternFunc::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:ExternFunc.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::FuncParam >&
ExternFunc::params() const {
  // @@protoc_insertion_point(field_list:ExternFunc.params)
  return params_;
}

// optional .TypeSpec return_type_spec = 3;
bool ExternFunc::has_return_type_spec() const {
  return this != internal_default_instance() && return_type_spec_ != NULL;
}
void ExternFunc::clear_return_type_spec() {
  if (GetArenaNoVirtual() == NULL && return_type_spec_ != NULL) delete return_type_spec_;
  return_type_spec_ = NULL;
}
const ::TypeSpec& ExternFunc::return_type_spec() const {
  // @@protoc_insertion_point(field_get:ExternFunc.return_type_spec)
  return return_type_spec_ != NULL ? *return_type_spec_
                         : *::TypeSpec::internal_default_instance();
}
::TypeSpec* ExternFunc::mutable_return_type_spec() {
  
  if (return_type_spec_ == NULL) {
    return_type_spec_ = new ::TypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:ExternFunc.return_type_spec)
  return return_type_spec_;
}
::TypeSpec* ExternFunc::release_return_type_spec() {
  // @@protoc_insertion_point(field_release:ExternFunc.return_type_spec)
  
  ::TypeSpec* temp = return_type_spec_;
  return_type_spec_ = NULL;
  return temp;
}
void ExternFunc::set_allocated_return_type_spec(::TypeSpec* return_type_spec) {
  delete return_type_spec_;
  return_type_spec_ = return_type_spec;
  if (return_type_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ExternFunc.return_type_spec)
}

inline const ExternFunc* ExternFunc::internal_default_instance() {
  return &ExternFunc_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Class_Member::kClsFieldNumber;
const int Class_Member::kFuncFieldNumber;
const int Class_Member::kVarDeclFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Class_Member::Class_Member()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Class.Member)
}

void Class_Member::InitAsDefaultInstance() {
  Class_Member_default_oneof_instance_->cls_ = const_cast< ::Class*>(
      ::Class::internal_default_instance());
  Class_Member_default_oneof_instance_->func_ = const_cast< ::Func*>(
      ::Func::internal_default_instance());
  Class_Member_default_oneof_instance_->var_decl_ = const_cast< ::VarDeclStmt*>(
      ::VarDeclStmt::internal_default_instance());
}

Class_Member::Class_Member(const Class_Member& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Class.Member)
}

void Class_Member::SharedCtor() {
  clear_has_type();
  _cached_size_ = 0;
}

Class_Member::~Class_Member() {
  // @@protoc_insertion_point(destructor:Class.Member)
  SharedDtor();
}

void Class_Member::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void Class_Member::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Class_Member::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Class_Member_descriptor_;
}

const Class_Member& Class_Member::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Class_Member> Class_Member_default_instance_;

Class_Member* Class_Member::New(::google::protobuf::Arena* arena) const {
  Class_Member* n = new Class_Member;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Class_Member::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:Class.Member)
  switch (type_case()) {
    case kCls: {
      delete type_.cls_;
      break;
    }
    case kFunc: {
      delete type_.func_;
      break;
    }
    case kVarDecl: {
      delete type_.var_decl_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void Class_Member::Clear() {
// @@protoc_insertion_point(message_clear_start:Class.Member)
  clear_type();
}

bool Class_Member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Class.Member)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Class cls = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cls()));
        } else {
          goto handle_unusual;
        }
        goto after_var_decl;
        break;
      }

      // optional .Func func = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_func()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_var_decl;
        break;
      }

      // optional .VarDeclStmt var_decl = 3;
      case 3: {
        if (tag == 26) {
         parse_var_decl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_var_decl()));
        } else {
          goto handle_unusual;
        }
       after_var_decl:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Class.Member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Class.Member)
  return false;
#undef DO_
}

void Class_Member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Class.Member)
  // optional .Class cls = 1;
  if (has_cls()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *type_.cls_, output);
  }

  // optional .Func func = 2;
  if (has_func()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *type_.func_, output);
  }

  // optional .VarDeclStmt var_decl = 3;
  if (has_var_decl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *type_.var_decl_, output);
  }

  // @@protoc_insertion_point(serialize_end:Class.Member)
}

::google::protobuf::uint8* Class_Member::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Class.Member)
  // optional .Class cls = 1;
  if (has_cls()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *type_.cls_, false, target);
  }

  // optional .Func func = 2;
  if (has_func()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *type_.func_, false, target);
  }

  // optional .VarDeclStmt var_decl = 3;
  if (has_var_decl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *type_.var_decl_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Class.Member)
  return target;
}

size_t Class_Member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Class.Member)
  size_t total_size = 0;

  switch (type_case()) {
    // optional .Class cls = 1;
    case kCls: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.cls_);
      break;
    }
    // optional .Func func = 2;
    case kFunc: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.func_);
      break;
    }
    // optional .VarDeclStmt var_decl = 3;
    case kVarDecl: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.var_decl_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Class_Member::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Class.Member)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Class_Member* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Class_Member>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Class.Member)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Class.Member)
    UnsafeMergeFrom(*source);
  }
}

void Class_Member::MergeFrom(const Class_Member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Class.Member)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Class_Member::UnsafeMergeFrom(const Class_Member& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.type_case()) {
    case kCls: {
      mutable_cls()->::Class::MergeFrom(from.cls());
      break;
    }
    case kFunc: {
      mutable_func()->::Func::MergeFrom(from.func());
      break;
    }
    case kVarDecl: {
      mutable_var_decl()->::VarDeclStmt::MergeFrom(from.var_decl());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void Class_Member::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Class.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Class_Member::CopyFrom(const Class_Member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Class.Member)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Class_Member::IsInitialized() const {

  return true;
}

void Class_Member::Swap(Class_Member* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Class_Member::InternalSwap(Class_Member* other) {
  std::swap(type_, other->type_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Class_Member::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Class_Member_descriptor_;
  metadata.reflection = Class_Member_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Class::kNameFieldNumber;
const int Class::kTypeParamsFieldNumber;
const int Class::kSuperClassesFieldNumber;
const int Class::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Class::Class()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Class)
}

void Class::InitAsDefaultInstance() {
}

Class::Class(const Class& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Class)
}

void Class::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Class::~Class() {
  // @@protoc_insertion_point(destructor:Class)
  SharedDtor();
}

void Class::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Class::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Class::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Class_descriptor_;
}

const Class& Class::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Class> Class_default_instance_;

Class* Class::New(::google::protobuf::Arena* arena) const {
  Class* n = new Class;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Class::Clear() {
// @@protoc_insertion_point(message_clear_start:Class)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_params_.Clear();
  super_classes_.Clear();
  members_.Clear();
}

bool Class::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Class)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Class.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type_params;
        break;
      }

      // repeated string type_params = 2;
      case 2: {
        if (tag == 18) {
         parse_type_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_type_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_params(this->type_params_size() - 1).data(),
            this->type_params(this->type_params_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Class.type_params"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type_params;
        if (input->ExpectTag(26)) goto parse_super_classes;
        break;
      }

      // repeated .TypeSpec super_classes = 3;
      case 3: {
        if (tag == 26) {
         parse_super_classes:
          DO_(input->IncrementRecursionDepth());
         parse_loop_super_classes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_super_classes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_super_classes;
        if (input->ExpectTag(34)) goto parse_loop_members;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Class.Member members = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_members:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_members;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Class)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Class)
  return false;
#undef DO_
}

void Class::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Class)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Class.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string type_params = 2;
  for (int i = 0; i < this->type_params_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_params(i).data(), this->type_params(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Class.type_params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->type_params(i), output);
  }

  // repeated .TypeSpec super_classes = 3;
  for (unsigned int i = 0, n = this->super_classes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->super_classes(i), output);
  }

  // repeated .Class.Member members = 4;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->members(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Class)
}

::google::protobuf::uint8* Class::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Class)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Class.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string type_params = 2;
  for (int i = 0; i < this->type_params_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_params(i).data(), this->type_params(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Class.type_params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->type_params(i), target);
  }

  // repeated .TypeSpec super_classes = 3;
  for (unsigned int i = 0, n = this->super_classes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->super_classes(i), false, target);
  }

  // repeated .Class.Member members = 4;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->members(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Class)
  return target;
}

size_t Class::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Class)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated string type_params = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->type_params_size());
  for (int i = 0; i < this->type_params_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->type_params(i));
  }

  // repeated .TypeSpec super_classes = 3;
  {
    unsigned int count = this->super_classes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->super_classes(i));
    }
  }

  // repeated .Class.Member members = 4;
  {
    unsigned int count = this->members_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->members(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Class::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Class)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Class* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Class>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Class)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Class)
    UnsafeMergeFrom(*source);
  }
}

void Class::MergeFrom(const Class& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Class)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Class::UnsafeMergeFrom(const Class& from) {
  GOOGLE_DCHECK(&from != this);
  type_params_.UnsafeMergeFrom(from.type_params_);
  super_classes_.MergeFrom(from.super_classes_);
  members_.MergeFrom(from.members_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Class::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Class)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Class::CopyFrom(const Class& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Class)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Class::IsInitialized() const {

  return true;
}

void Class::Swap(Class* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Class::InternalSwap(Class* other) {
  name_.Swap(&other->name_);
  type_params_.UnsafeArenaSwap(&other->type_params_);
  super_classes_.UnsafeArenaSwap(&other->super_classes_);
  members_.UnsafeArenaSwap(&other->members_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Class::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Class_descriptor_;
  metadata.reflection = Class_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Class_Member

// optional .Class cls = 1;
bool Class_Member::has_cls() const {
  return type_case() == kCls;
}
void Class_Member::set_has_cls() {
  _oneof_case_[0] = kCls;
}
void Class_Member::clear_cls() {
  if (has_cls()) {
    delete type_.cls_;
    clear_has_type();
  }
}
 const ::Class& Class_Member::cls() const {
  // @@protoc_insertion_point(field_get:Class.Member.cls)
  return has_cls()
      ? *type_.cls_
      : ::Class::default_instance();
}
::Class* Class_Member::mutable_cls() {
  if (!has_cls()) {
    clear_type();
    set_has_cls();
    type_.cls_ = new ::Class;
  }
  // @@protoc_insertion_point(field_mutable:Class.Member.cls)
  return type_.cls_;
}
::Class* Class_Member::release_cls() {
  // @@protoc_insertion_point(field_release:Class.Member.cls)
  if (has_cls()) {
    clear_has_type();
    ::Class* temp = type_.cls_;
    type_.cls_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Class_Member::set_allocated_cls(::Class* cls) {
  clear_type();
  if (cls) {
    set_has_cls();
    type_.cls_ = cls;
  }
  // @@protoc_insertion_point(field_set_allocated:Class.Member.cls)
}

// optional .Func func = 2;
bool Class_Member::has_func() const {
  return type_case() == kFunc;
}
void Class_Member::set_has_func() {
  _oneof_case_[0] = kFunc;
}
void Class_Member::clear_func() {
  if (has_func()) {
    delete type_.func_;
    clear_has_type();
  }
}
 const ::Func& Class_Member::func() const {
  // @@protoc_insertion_point(field_get:Class.Member.func)
  return has_func()
      ? *type_.func_
      : ::Func::default_instance();
}
::Func* Class_Member::mutable_func() {
  if (!has_func()) {
    clear_type();
    set_has_func();
    type_.func_ = new ::Func;
  }
  // @@protoc_insertion_point(field_mutable:Class.Member.func)
  return type_.func_;
}
::Func* Class_Member::release_func() {
  // @@protoc_insertion_point(field_release:Class.Member.func)
  if (has_func()) {
    clear_has_type();
    ::Func* temp = type_.func_;
    type_.func_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Class_Member::set_allocated_func(::Func* func) {
  clear_type();
  if (func) {
    set_has_func();
    type_.func_ = func;
  }
  // @@protoc_insertion_point(field_set_allocated:Class.Member.func)
}

// optional .VarDeclStmt var_decl = 3;
bool Class_Member::has_var_decl() const {
  return type_case() == kVarDecl;
}
void Class_Member::set_has_var_decl() {
  _oneof_case_[0] = kVarDecl;
}
void Class_Member::clear_var_decl() {
  if (has_var_decl()) {
    delete type_.var_decl_;
    clear_has_type();
  }
}
 const ::VarDeclStmt& Class_Member::var_decl() const {
  // @@protoc_insertion_point(field_get:Class.Member.var_decl)
  return has_var_decl()
      ? *type_.var_decl_
      : ::VarDeclStmt::default_instance();
}
::VarDeclStmt* Class_Member::mutable_var_decl() {
  if (!has_var_decl()) {
    clear_type();
    set_has_var_decl();
    type_.var_decl_ = new ::VarDeclStmt;
  }
  // @@protoc_insertion_point(field_mutable:Class.Member.var_decl)
  return type_.var_decl_;
}
::VarDeclStmt* Class_Member::release_var_decl() {
  // @@protoc_insertion_point(field_release:Class.Member.var_decl)
  if (has_var_decl()) {
    clear_has_type();
    ::VarDeclStmt* temp = type_.var_decl_;
    type_.var_decl_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Class_Member::set_allocated_var_decl(::VarDeclStmt* var_decl) {
  clear_type();
  if (var_decl) {
    set_has_var_decl();
    type_.var_decl_ = var_decl;
  }
  // @@protoc_insertion_point(field_set_allocated:Class.Member.var_decl)
}

bool Class_Member::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
void Class_Member::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
Class_Member::TypeCase Class_Member::type_case() const {
  return Class_Member::TypeCase(_oneof_case_[0]);
}
inline const Class_Member* Class_Member::internal_default_instance() {
  return &Class_Member_default_instance_.get();
}
// -------------------------------------------------------------------

// Class

// optional string name = 1;
void Class::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Class::name() const {
  // @@protoc_insertion_point(field_get:Class.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Class::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Class.name)
}
void Class::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Class.name)
}
void Class::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Class.name)
}
::std::string* Class::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Class.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Class::release_name() {
  // @@protoc_insertion_point(field_release:Class.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Class::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Class.name)
}

// repeated string type_params = 2;
int Class::type_params_size() const {
  return type_params_.size();
}
void Class::clear_type_params() {
  type_params_.Clear();
}
const ::std::string& Class::type_params(int index) const {
  // @@protoc_insertion_point(field_get:Class.type_params)
  return type_params_.Get(index);
}
::std::string* Class::mutable_type_params(int index) {
  // @@protoc_insertion_point(field_mutable:Class.type_params)
  return type_params_.Mutable(index);
}
void Class::set_type_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Class.type_params)
  type_params_.Mutable(index)->assign(value);
}
void Class::set_type_params(int index, const char* value) {
  type_params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Class.type_params)
}
void Class::set_type_params(int index, const char* value, size_t size) {
  type_params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Class.type_params)
}
::std::string* Class::add_type_params() {
  // @@protoc_insertion_point(field_add_mutable:Class.type_params)
  return type_params_.Add();
}
void Class::add_type_params(const ::std::string& value) {
  type_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Class.type_params)
}
void Class::add_type_params(const char* value) {
  type_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Class.type_params)
}
void Class::add_type_params(const char* value, size_t size) {
  type_params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Class.type_params)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Class::type_params() const {
  // @@protoc_insertion_point(field_list:Class.type_params)
  return type_params_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Class::mutable_type_params() {
  // @@protoc_insertion_point(field_mutable_list:Class.type_params)
  return &type_params_;
}

// repeated .TypeSpec super_classes = 3;
int Class::super_classes_size() const {
  return super_classes_.size();
}
void Class::clear_super_classes() {
  super_classes_.Clear();
}
const ::TypeSpec& Class::super_classes(int index) const {
  // @@protoc_insertion_point(field_get:Class.super_classes)
  return super_classes_.Get(index);
}
::TypeSpec* Class::mutable_super_classes(int index) {
  // @@protoc_insertion_point(field_mutable:Class.super_classes)
  return super_classes_.Mutable(index);
}
::TypeSpec* Class::add_super_classes() {
  // @@protoc_insertion_point(field_add:Class.super_classes)
  return super_classes_.Add();
}
::google::protobuf::RepeatedPtrField< ::TypeSpec >*
Class::mutable_super_classes() {
  // @@protoc_insertion_point(field_mutable_list:Class.super_classes)
  return &super_classes_;
}
const ::google::protobuf::RepeatedPtrField< ::TypeSpec >&
Class::super_classes() const {
  // @@protoc_insertion_point(field_list:Class.super_classes)
  return super_classes_;
}

// repeated .Class.Member members = 4;
int Class::members_size() const {
  return members_.size();
}
void Class::clear_members() {
  members_.Clear();
}
const ::Class_Member& Class::members(int index) const {
  // @@protoc_insertion_point(field_get:Class.members)
  return members_.Get(index);
}
::Class_Member* Class::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:Class.members)
  return members_.Mutable(index);
}
::Class_Member* Class::add_members() {
  // @@protoc_insertion_point(field_add:Class.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::Class_Member >*
Class::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:Class.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::Class_Member >&
Class::members() const {
  // @@protoc_insertion_point(field_list:Class.members)
  return members_;
}

inline const Class* Class::internal_default_instance() {
  return &Class_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Module_Member::kClsFieldNumber;
const int Module_Member::kFuncFieldNumber;
const int Module_Member::kVarDeclFieldNumber;
const int Module_Member::kExternFuncFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Module_Member::Module_Member()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Module.Member)
}

void Module_Member::InitAsDefaultInstance() {
  Module_Member_default_oneof_instance_->cls_ = const_cast< ::Class*>(
      ::Class::internal_default_instance());
  Module_Member_default_oneof_instance_->func_ = const_cast< ::Func*>(
      ::Func::internal_default_instance());
  Module_Member_default_oneof_instance_->var_decl_ = const_cast< ::VarDeclStmt*>(
      ::VarDeclStmt::internal_default_instance());
  Module_Member_default_oneof_instance_->extern_func_ = const_cast< ::ExternFunc*>(
      ::ExternFunc::internal_default_instance());
}

Module_Member::Module_Member(const Module_Member& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Module.Member)
}

void Module_Member::SharedCtor() {
  clear_has_type();
  _cached_size_ = 0;
}

Module_Member::~Module_Member() {
  // @@protoc_insertion_point(destructor:Module.Member)
  SharedDtor();
}

void Module_Member::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void Module_Member::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Module_Member::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Module_Member_descriptor_;
}

const Module_Member& Module_Member::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Module_Member> Module_Member_default_instance_;

Module_Member* Module_Member::New(::google::protobuf::Arena* arena) const {
  Module_Member* n = new Module_Member;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Module_Member::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:Module.Member)
  switch (type_case()) {
    case kCls: {
      delete type_.cls_;
      break;
    }
    case kFunc: {
      delete type_.func_;
      break;
    }
    case kVarDecl: {
      delete type_.var_decl_;
      break;
    }
    case kExternFunc: {
      delete type_.extern_func_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void Module_Member::Clear() {
// @@protoc_insertion_point(message_clear_start:Module.Member)
  clear_type();
}

bool Module_Member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Module.Member)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Class cls = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cls()));
        } else {
          goto handle_unusual;
        }
        goto after_extern_func;
        break;
      }

      // optional .Func func = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_func()));
        } else {
          goto handle_unusual;
        }
        goto after_extern_func;
        break;
      }

      // optional .VarDeclStmt var_decl = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_var_decl()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_extern_func;
        break;
      }

      // optional .ExternFunc extern_func = 4;
      case 4: {
        if (tag == 34) {
         parse_extern_func:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extern_func()));
        } else {
          goto handle_unusual;
        }
       after_extern_func:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Module.Member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Module.Member)
  return false;
#undef DO_
}

void Module_Member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Module.Member)
  // optional .Class cls = 1;
  if (has_cls()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *type_.cls_, output);
  }

  // optional .Func func = 2;
  if (has_func()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *type_.func_, output);
  }

  // optional .VarDeclStmt var_decl = 3;
  if (has_var_decl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *type_.var_decl_, output);
  }

  // optional .ExternFunc extern_func = 4;
  if (has_extern_func()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *type_.extern_func_, output);
  }

  // @@protoc_insertion_point(serialize_end:Module.Member)
}

::google::protobuf::uint8* Module_Member::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Module.Member)
  // optional .Class cls = 1;
  if (has_cls()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *type_.cls_, false, target);
  }

  // optional .Func func = 2;
  if (has_func()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *type_.func_, false, target);
  }

  // optional .VarDeclStmt var_decl = 3;
  if (has_var_decl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *type_.var_decl_, false, target);
  }

  // optional .ExternFunc extern_func = 4;
  if (has_extern_func()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *type_.extern_func_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Module.Member)
  return target;
}

size_t Module_Member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Module.Member)
  size_t total_size = 0;

  switch (type_case()) {
    // optional .Class cls = 1;
    case kCls: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.cls_);
      break;
    }
    // optional .Func func = 2;
    case kFunc: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.func_);
      break;
    }
    // optional .VarDeclStmt var_decl = 3;
    case kVarDecl: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.var_decl_);
      break;
    }
    // optional .ExternFunc extern_func = 4;
    case kExternFunc: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.extern_func_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Module_Member::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Module.Member)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Module_Member* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Module_Member>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Module.Member)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Module.Member)
    UnsafeMergeFrom(*source);
  }
}

void Module_Member::MergeFrom(const Module_Member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Module.Member)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Module_Member::UnsafeMergeFrom(const Module_Member& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.type_case()) {
    case kCls: {
      mutable_cls()->::Class::MergeFrom(from.cls());
      break;
    }
    case kFunc: {
      mutable_func()->::Func::MergeFrom(from.func());
      break;
    }
    case kVarDecl: {
      mutable_var_decl()->::VarDeclStmt::MergeFrom(from.var_decl());
      break;
    }
    case kExternFunc: {
      mutable_extern_func()->::ExternFunc::MergeFrom(from.extern_func());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void Module_Member::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Module.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Module_Member::CopyFrom(const Module_Member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Module.Member)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Module_Member::IsInitialized() const {

  return true;
}

void Module_Member::Swap(Module_Member* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Module_Member::InternalSwap(Module_Member* other) {
  std::swap(type_, other->type_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Module_Member::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Module_Member_descriptor_;
  metadata.reflection = Module_Member_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Module::kNameFieldNumber;
const int Module::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Module::Module()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Module)
}

void Module::InitAsDefaultInstance() {
}

Module::Module(const Module& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Module)
}

void Module::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Module::~Module() {
  // @@protoc_insertion_point(destructor:Module)
  SharedDtor();
}

void Module::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Module::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Module::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Module_descriptor_;
}

const Module& Module::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Module> Module_default_instance_;

Module* Module::New(::google::protobuf::Arena* arena) const {
  Module* n = new Module;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Module::Clear() {
// @@protoc_insertion_point(message_clear_start:Module)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  members_.Clear();
}

bool Module::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Module)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Module.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_members;
        break;
      }

      // repeated .Module.Member members = 2;
      case 2: {
        if (tag == 18) {
         parse_members:
          DO_(input->IncrementRecursionDepth());
         parse_loop_members:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_members;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Module)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Module)
  return false;
#undef DO_
}

void Module::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Module)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Module.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .Module.Member members = 2;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->members(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Module)
}

::google::protobuf::uint8* Module::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Module)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Module.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .Module.Member members = 2;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->members(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Module)
  return target;
}

size_t Module::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Module)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated .Module.Member members = 2;
  {
    unsigned int count = this->members_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->members(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Module::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Module)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Module* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Module>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Module)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Module)
    UnsafeMergeFrom(*source);
  }
}

void Module::MergeFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Module)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Module::UnsafeMergeFrom(const Module& from) {
  GOOGLE_DCHECK(&from != this);
  members_.MergeFrom(from.members_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Module::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Module::CopyFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Module)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Module::IsInitialized() const {

  return true;
}

void Module::Swap(Module* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Module::InternalSwap(Module* other) {
  name_.Swap(&other->name_);
  members_.UnsafeArenaSwap(&other->members_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Module::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Module_descriptor_;
  metadata.reflection = Module_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Module_Member

// optional .Class cls = 1;
bool Module_Member::has_cls() const {
  return type_case() == kCls;
}
void Module_Member::set_has_cls() {
  _oneof_case_[0] = kCls;
}
void Module_Member::clear_cls() {
  if (has_cls()) {
    delete type_.cls_;
    clear_has_type();
  }
}
 const ::Class& Module_Member::cls() const {
  // @@protoc_insertion_point(field_get:Module.Member.cls)
  return has_cls()
      ? *type_.cls_
      : ::Class::default_instance();
}
::Class* Module_Member::mutable_cls() {
  if (!has_cls()) {
    clear_type();
    set_has_cls();
    type_.cls_ = new ::Class;
  }
  // @@protoc_insertion_point(field_mutable:Module.Member.cls)
  return type_.cls_;
}
::Class* Module_Member::release_cls() {
  // @@protoc_insertion_point(field_release:Module.Member.cls)
  if (has_cls()) {
    clear_has_type();
    ::Class* temp = type_.cls_;
    type_.cls_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Module_Member::set_allocated_cls(::Class* cls) {
  clear_type();
  if (cls) {
    set_has_cls();
    type_.cls_ = cls;
  }
  // @@protoc_insertion_point(field_set_allocated:Module.Member.cls)
}

// optional .Func func = 2;
bool Module_Member::has_func() const {
  return type_case() == kFunc;
}
void Module_Member::set_has_func() {
  _oneof_case_[0] = kFunc;
}
void Module_Member::clear_func() {
  if (has_func()) {
    delete type_.func_;
    clear_has_type();
  }
}
 const ::Func& Module_Member::func() const {
  // @@protoc_insertion_point(field_get:Module.Member.func)
  return has_func()
      ? *type_.func_
      : ::Func::default_instance();
}
::Func* Module_Member::mutable_func() {
  if (!has_func()) {
    clear_type();
    set_has_func();
    type_.func_ = new ::Func;
  }
  // @@protoc_insertion_point(field_mutable:Module.Member.func)
  return type_.func_;
}
::Func* Module_Member::release_func() {
  // @@protoc_insertion_point(field_release:Module.Member.func)
  if (has_func()) {
    clear_has_type();
    ::Func* temp = type_.func_;
    type_.func_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Module_Member::set_allocated_func(::Func* func) {
  clear_type();
  if (func) {
    set_has_func();
    type_.func_ = func;
  }
  // @@protoc_insertion_point(field_set_allocated:Module.Member.func)
}

// optional .VarDeclStmt var_decl = 3;
bool Module_Member::has_var_decl() const {
  return type_case() == kVarDecl;
}
void Module_Member::set_has_var_decl() {
  _oneof_case_[0] = kVarDecl;
}
void Module_Member::clear_var_decl() {
  if (has_var_decl()) {
    delete type_.var_decl_;
    clear_has_type();
  }
}
 const ::VarDeclStmt& Module_Member::var_decl() const {
  // @@protoc_insertion_point(field_get:Module.Member.var_decl)
  return has_var_decl()
      ? *type_.var_decl_
      : ::VarDeclStmt::default_instance();
}
::VarDeclStmt* Module_Member::mutable_var_decl() {
  if (!has_var_decl()) {
    clear_type();
    set_has_var_decl();
    type_.var_decl_ = new ::VarDeclStmt;
  }
  // @@protoc_insertion_point(field_mutable:Module.Member.var_decl)
  return type_.var_decl_;
}
::VarDeclStmt* Module_Member::release_var_decl() {
  // @@protoc_insertion_point(field_release:Module.Member.var_decl)
  if (has_var_decl()) {
    clear_has_type();
    ::VarDeclStmt* temp = type_.var_decl_;
    type_.var_decl_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Module_Member::set_allocated_var_decl(::VarDeclStmt* var_decl) {
  clear_type();
  if (var_decl) {
    set_has_var_decl();
    type_.var_decl_ = var_decl;
  }
  // @@protoc_insertion_point(field_set_allocated:Module.Member.var_decl)
}

// optional .ExternFunc extern_func = 4;
bool Module_Member::has_extern_func() const {
  return type_case() == kExternFunc;
}
void Module_Member::set_has_extern_func() {
  _oneof_case_[0] = kExternFunc;
}
void Module_Member::clear_extern_func() {
  if (has_extern_func()) {
    delete type_.extern_func_;
    clear_has_type();
  }
}
 const ::ExternFunc& Module_Member::extern_func() const {
  // @@protoc_insertion_point(field_get:Module.Member.extern_func)
  return has_extern_func()
      ? *type_.extern_func_
      : ::ExternFunc::default_instance();
}
::ExternFunc* Module_Member::mutable_extern_func() {
  if (!has_extern_func()) {
    clear_type();
    set_has_extern_func();
    type_.extern_func_ = new ::ExternFunc;
  }
  // @@protoc_insertion_point(field_mutable:Module.Member.extern_func)
  return type_.extern_func_;
}
::ExternFunc* Module_Member::release_extern_func() {
  // @@protoc_insertion_point(field_release:Module.Member.extern_func)
  if (has_extern_func()) {
    clear_has_type();
    ::ExternFunc* temp = type_.extern_func_;
    type_.extern_func_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Module_Member::set_allocated_extern_func(::ExternFunc* extern_func) {
  clear_type();
  if (extern_func) {
    set_has_extern_func();
    type_.extern_func_ = extern_func;
  }
  // @@protoc_insertion_point(field_set_allocated:Module.Member.extern_func)
}

bool Module_Member::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
void Module_Member::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
Module_Member::TypeCase Module_Member::type_case() const {
  return Module_Member::TypeCase(_oneof_case_[0]);
}
inline const Module_Member* Module_Member::internal_default_instance() {
  return &Module_Member_default_instance_.get();
}
// -------------------------------------------------------------------

// Module

// optional string name = 1;
void Module::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Module::name() const {
  // @@protoc_insertion_point(field_get:Module.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Module::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Module.name)
}
void Module::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Module.name)
}
void Module::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Module.name)
}
::std::string* Module::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Module.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Module::release_name() {
  // @@protoc_insertion_point(field_release:Module.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Module::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Module.name)
}

// repeated .Module.Member members = 2;
int Module::members_size() const {
  return members_.size();
}
void Module::clear_members() {
  members_.Clear();
}
const ::Module_Member& Module::members(int index) const {
  // @@protoc_insertion_point(field_get:Module.members)
  return members_.Get(index);
}
::Module_Member* Module::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:Module.members)
  return members_.Mutable(index);
}
::Module_Member* Module::add_members() {
  // @@protoc_insertion_point(field_add:Module.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::Module_Member >*
Module::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:Module.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::Module_Member >&
Module::members() const {
  // @@protoc_insertion_point(field_list:Module.members)
  return members_;
}

inline const Module* Module::internal_default_instance() {
  return &Module_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeSpec::kNameFieldNumber;
const int TypeSpec::kParamsFieldNumber;
const int TypeSpec::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeSpec::TypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ast_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TypeSpec)
}

void TypeSpec::InitAsDefaultInstance() {
  parent_ = const_cast< ::TypeSpec*>(
      ::TypeSpec::internal_default_instance());
}

TypeSpec::TypeSpec(const TypeSpec& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TypeSpec)
}

void TypeSpec::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_ = NULL;
  _cached_size_ = 0;
}

TypeSpec::~TypeSpec() {
  // @@protoc_insertion_point(destructor:TypeSpec)
  SharedDtor();
}

void TypeSpec::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &TypeSpec_default_instance_.get()) {
    delete parent_;
  }
}

void TypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeSpec::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TypeSpec_descriptor_;
}

const TypeSpec& TypeSpec::default_instance() {
  protobuf_InitDefaults_ast_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TypeSpec> TypeSpec_default_instance_;

TypeSpec* TypeSpec::New(::google::protobuf::Arena* arena) const {
  TypeSpec* n = new TypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:TypeSpec)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && parent_ != NULL) delete parent_;
  parent_ = NULL;
  params_.Clear();
}

bool TypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TypeSpec.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_params;
        break;
      }

      // repeated .TypeSpec params = 2;
      case 2: {
        if (tag == 18) {
         parse_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_parent;
        break;
      }

      // optional .TypeSpec parent = 3;
      case 3: {
        if (tag == 26) {
         parse_parent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parent()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TypeSpec)
  return false;
#undef DO_
}

void TypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TypeSpec)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TypeSpec.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .TypeSpec params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->params(i), output);
  }

  // optional .TypeSpec parent = 3;
  if (this->has_parent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->parent_, output);
  }

  // @@protoc_insertion_point(serialize_end:TypeSpec)
}

::google::protobuf::uint8* TypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TypeSpec)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TypeSpec.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .TypeSpec params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->params(i), false, target);
  }

  // optional .TypeSpec parent = 3;
  if (this->has_parent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->parent_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TypeSpec)
  return target;
}

size_t TypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TypeSpec)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .TypeSpec parent = 3;
  if (this->has_parent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->parent_);
  }

  // repeated .TypeSpec params = 2;
  {
    unsigned int count = this->params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TypeSpec)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TypeSpec)
    UnsafeMergeFrom(*source);
  }
}

void TypeSpec::MergeFrom(const TypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TypeSpec)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TypeSpec::UnsafeMergeFrom(const TypeSpec& from) {
  GOOGLE_DCHECK(&from != this);
  params_.MergeFrom(from.params_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_parent()) {
    mutable_parent()->::TypeSpec::MergeFrom(from.parent());
  }
}

void TypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeSpec::CopyFrom(const TypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TypeSpec)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TypeSpec::IsInitialized() const {

  return true;
}

void TypeSpec::Swap(TypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeSpec::InternalSwap(TypeSpec* other) {
  name_.Swap(&other->name_);
  params_.UnsafeArenaSwap(&other->params_);
  std::swap(parent_, other->parent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypeSpec::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TypeSpec_descriptor_;
  metadata.reflection = TypeSpec_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TypeSpec

// optional string name = 1;
void TypeSpec::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TypeSpec::name() const {
  // @@protoc_insertion_point(field_get:TypeSpec.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TypeSpec::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TypeSpec.name)
}
void TypeSpec::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TypeSpec.name)
}
void TypeSpec::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TypeSpec.name)
}
::std::string* TypeSpec::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:TypeSpec.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TypeSpec::release_name() {
  // @@protoc_insertion_point(field_release:TypeSpec.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TypeSpec::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:TypeSpec.name)
}

// repeated .TypeSpec params = 2;
int TypeSpec::params_size() const {
  return params_.size();
}
void TypeSpec::clear_params() {
  params_.Clear();
}
const ::TypeSpec& TypeSpec::params(int index) const {
  // @@protoc_insertion_point(field_get:TypeSpec.params)
  return params_.Get(index);
}
::TypeSpec* TypeSpec::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:TypeSpec.params)
  return params_.Mutable(index);
}
::TypeSpec* TypeSpec::add_params() {
  // @@protoc_insertion_point(field_add:TypeSpec.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::TypeSpec >*
TypeSpec::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:TypeSpec.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::TypeSpec >&
TypeSpec::params() const {
  // @@protoc_insertion_point(field_list:TypeSpec.params)
  return params_;
}

// optional .TypeSpec parent = 3;
bool TypeSpec::has_parent() const {
  return this != internal_default_instance() && parent_ != NULL;
}
void TypeSpec::clear_parent() {
  if (GetArenaNoVirtual() == NULL && parent_ != NULL) delete parent_;
  parent_ = NULL;
}
const ::TypeSpec& TypeSpec::parent() const {
  // @@protoc_insertion_point(field_get:TypeSpec.parent)
  return parent_ != NULL ? *parent_
                         : *::TypeSpec::internal_default_instance();
}
::TypeSpec* TypeSpec::mutable_parent() {
  
  if (parent_ == NULL) {
    parent_ = new ::TypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:TypeSpec.parent)
  return parent_;
}
::TypeSpec* TypeSpec::release_parent() {
  // @@protoc_insertion_point(field_release:TypeSpec.parent)
  
  ::TypeSpec* temp = parent_;
  parent_ = NULL;
  return temp;
}
void TypeSpec::set_allocated_parent(::TypeSpec* parent) {
  delete parent_;
  parent_ = parent;
  if (parent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TypeSpec.parent)
}

inline const TypeSpec* TypeSpec::internal_default_instance() {
  return &TypeSpec_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
